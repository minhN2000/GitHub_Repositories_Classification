Toolkit,程序员常用的工具集Idea插件，帮助开发人员提升效率,323,https://github.com/silently9527/Toolkit,master,['# Programmer Toolkit\n\n<p align="center">\n  <a href="#微信公众号"><img src="https://img.shields.io/badge/公众号-贝塔学JAVA-blue.svg" alt="公众号"></a>\n  <a href="https://juejin.cn/user/2779199782521693"><img src="https://img.shields.io/badge/juejin-掘金-yellow.svg" alt="掘金"></a>\n  <a href="https://blog.csdn.net/asdewq380303318"><img src="https://img.shields.io/badge/csdn-CSDN-red.svg" alt="CSDN"></a>\n  <a href="https://my.oschina.net/u/3230120"><img src="https://img.shields.io/badge/oschina-开源中国-green" alt="开源中国"></a>\n  <a href="https://www.zhihu.com/people/huaan9527-57/posts"><img src="https://img.shields.io/badge/zhihu-知乎-purple" alt="知乎"></a>\n</p>\n\n\n> Github地址: https://github.com/silently9527/Toolkit\n>\n> Gitee地址: https://gitee.com/silently9527/ToolsetIdeaPlugin\n>\n> 觉得好用的小伙伴记得小手一抖 star 哟\n\n## 背景\n自己在开发的过程中经常会使用一些在线的工具，比如：时间戳转日期，JSON格式化等等；考虑想把这些常用的功能都做成IDEA插件，在使用的时候就不用去网上寻找工具，在IDEA中就可以快速完成提升开发人员开发效率；\n\n## How to use\n1. 双击control或者点工具类图标即可弹出RunAnything窗口\n\n![](https://tva1.sinaimg.cn/large/008eGmZEgy1gobp4rklznj30h001c0sj.jpg)\n\n2. 在RunAnything中输入`?`查看 `toolkit` 命令\n\n![](https://tva1.sinaimg.cn/large/008eGmZEgy1gobp6dvicqj30im0edglm.jpg)\n\n3. 输入`toolkit`即可看到所有支持的命令\n\n![](https://tva1.sinaimg.cn/large/008eGmZEgy1gobp7jev4lj30im0g0mxc.jpg)\n\n4. 选择需要使用的命令，例如：SQL转elasticSearch语句、二维码生成\n\n![](https://tva1.sinaimg.cn/large/008eGmZEgy1gobpa7j02kj30e10jgwel.jpg)\n![](https://tva1.sinaimg.cn/large/008eGmZEgy1gobpcoswyyj30ti0rm3yv.jpg)\n![](https://tva1.sinaimg.cn/large/008eGmZEgy1godq400p1hj30um0jgglq.jpg)\n![](https://tva1.sinaimg.cn/large/008eGmZEgy1godq4i5hpij30um0gm74p.jpg)\n![](https://tva1.sinaimg.cn/large/008eGmZEgy1godq5n7pyoj30m60dyt8r.jpg)\n\n## How to install\n第一种方式：下载源码自己打包安装\n\n第二种方式：\n1. 关注微信公众号：贝塔学java，回复：`toolkit` 即可获取已打包的插件，最新插件版本`1.0.3`\n2. 打包idea的插件安装界面 -> `install plugin from disk` ,选择下载的最新插件包，重启idea接口生效\n\n![](https://tva1.sinaimg.cn/large/008eGmZEgy1gobq5a9ajzj31de0u0dij.jpg)\n\n## 支持的命令\n\n| 命令 | 说明 |\n| --- | --- |\n| toolkit date | 日期转时间戳 |\n| toolkit timestamp | 时间戳转日期 |\n| toolkit json | JSON格式化 |\n| toolkit sql2dsl | SQL转elasticSearch语句 |\n| toolkit url encode | URL编码 |\n| toolkit url decode | URL解码 |\n| toolkit base64 encode | base64编码 |\n| toolkit base64 decode | base64解码 |\n| toolkit phone | 手机号归属地 |\n| toolkit ip | IP归属地 |\n| toolkit md5 | MD5加密 |\n| toolkit sha1 | SHA1加密 |\n| toolkit sha224 | SHA224加密 |\n| toolkit sha256 | SHA256加密 |\n| toolkit sha384 | SHA384加密 |\n| toolkit sha512 | SHA512加密 |\n| toolkit uuid | UUID随机值 |\n| toolkit regular | 正则表达式 |\n| toolkit qrcode encode | 生成二维码（支持插入Logo） |\n\n## 计划中的命令\n| 命令 | 说明 |\n| --- | --- |\n| toolkit nat | 内网穿透（方便微信、支付宝等后台开发） |\n| toolkit cron | Cron表达式 |\n| toolkit file minify | js/css混淆压缩 |\n| toolkit file download | 文件下载 |\n| toolkit qrcode decode | 二维码解析 |\n\n> 欢迎小伙伴留言希望支持的命令\n\n## 测试通过IDEA的版本\n\n测试通过的版本如下，如果其他版本出现问题，欢迎给我留言\n\n| IDE | 版本 | \n| --- | --- | \n| Intellij IDEA | 2019、2020 |\n\n\n#### 期待你的加入，公众号：`贝塔学Java`，个人微信号：silently9527\n\n<img src="https://cdn.silently9527.cn/weixhao_gongzonghao_1629032267170.jpg?imageView2/1/w/600/h/350" alt="公众号">\n\n\n## 我的技术博客\n[https://silently9527.cn/](https://silently9527.cn/)\n\n## 其他项目推荐\n* [前后端完全开源高颜值淘客APP](https://github.com/silently9527/coupons)\n* [深入解析SpringMVC核心原理：从手写简易版MVC框架开始(SmartMvc)](https://github.com/silently9527/SmartMvc)\n* [Java程序员自我学习的书单](https://github.com/silently9527/ProgrammerBooks)\n* [技术文章以及代码收录仓库](https://github.com/silently9527/ProgrammerNotes)\n* [高颜值可定制化的简介导航网站](http://nav.silently9527.cn/)\n\n## 捐赠研发\n如果您认为此项目帮到了您的开发工作,您可以捐赠我一杯可乐(相信这比打赏主播更有意义)。\n\n<img width="200" src="https://tva1.sinaimg.cn/large/008eGmZEgy1gn63yahvn4j30ia0igjsw.jpg">\n']
Bilibili-Toolkit,🛠️ 哔哩哔哩（B站）辅助工具箱，支持Cookie/Token/Password融合持久化登录与多用户操作,1253,https://github.com/Hsury/Bilibili-Toolkit,master,['<p align="center">\n<img src="https://cdn.kagamiz.com/Bilibili-Toolkit/bilibili.png" width="300">\n</p>\n\n<h1 align="center">- Bilibili Toolkit -</h1>\n\n<p align="center">\n<img src="https://img.shields.io/badge/version-2020.7.20-green.svg?longCache=true&style=for-the-badge">\n<img src="https://img.shields.io/badge/license-SATA-blue.svg?longCache=true&style=for-the-badge">\n<img src="https://img.shields.io/travis/com/Hsury/Bilibili-Toolkit?style=for-the-badge">\n</p>\n\n<h4 align="center">🛠️ 哔哩哔哩（B站）辅助工具箱，支持Cookie/Token/Password融合持久化登录与多用户操作</h4>\n\n<p align="center">\n<img src="https://cdn.kagamiz.com/Bilibili-Toolkit/demo.png" width="750">\n</p>\n\n## 功能\n\n|组件                |版本           |描述                          |\n|--------------------|---------------|------------------------------|\n|login               |2020/7/4       |登录                          |\n|get_user_info       |2019/9/15      |获取用户信息                  |\n|set_privacy         |2018/7/24      |修改隐私设置                  |\n|silver_to_coin      |2018/8/8       |银瓜子兑换硬币                |\n|watch               |2020/7/20      |观看                          |\n|like                |2020/7/20      |点赞                          |\n|reward              |2020/7/20      |投币                          |\n|favour              |2020/7/20      |收藏                          |\n|combo               |2020/7/20      |三连推荐                      |\n|share               |2020/7/20      |分享                          |\n|follow              |2018/7/8       |关注                          |\n|follow_batch        |2020/7/2       |批量关注                      |\n|ban                 |2021/2/19      |拉黑                          |\n|ban_batch           |2021/2/19      |批量拉黑                      |\n|danmaku_post        |2020/7/20      |弹幕发送                      |\n|comment_like        |2018/6/27      |评论点赞                      |\n|comment_post        |2019/8/3       |评论发表                      |\n|dynamic_like        |2018/6/29      |动态点赞                      |\n|dynamic_repost      |2019/3/11      |动态转发                      |\n|dynamic_purge       |2019/3/11      |动态清理                      |\n|system_notice       |2019/8/3       |系统通知查询                  |\n|mall_rush           |2019/9/15      |会员购抢购                    |\n|mall_coupon         |2019/3/3       |会员购优惠卷领取              |\n|mall_order_list     |2019/9/15      |会员购订单列表查询            |\n|mall_coupon_list    |2019/8/4       |会员购优惠卷列表查询          |\n|mall_prize_list     |2019/8/3       |会员购奖品列表查询            |\n|live_prize_list     |2019/8/3       |直播奖品列表查询              |\n\n## 使用指南\n\n### 二进制版本\n\n从[Release页面](https://github.com/Hsury/Bilibili-Toolkit/releases)下载并解压与您的平台适配的压缩包，修改默认配置文件config.toml后运行可执行文件bilibili即可\n\n*若要加载非默认配置文件，将其路径作为命令行参数传入即可*\n\n### 源代码版本\n\n1. 克隆或[下载](https://github.com/Hsury/Bilibili-Toolkit/archive/master.zip)本代码仓库，并修改默认配置文件config.toml\n\n```\ngit clone https://github.com/Hsury/Bilibili-Toolkit.git\ncd Bilibili-Toolkit\nnano config.toml\n```\n\n2. 安装Python 3.6或更高版本，并使用pip安装依赖\n\n```\npip install -r requirements.txt -U -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n3. 启动脚本\n\n```\npython bilibili.py\n```\n\n### Docker版本\n\n1. 安装Docker\n\n2. [下载](https://raw.githubusercontent.com/Hsury/Bilibili-Toolkit/master/config.toml)默认配置文件config.toml并根据需求修改\n\n3. 启动容器，并挂载配置文件\n\n```\ndocker run --rm -it -v [YOUR PATH TO CONFIG.TOML]:/app/config.toml zsnmwy/bilibili-toolkit\n```\n\n*若要加载代理池，补充参数`-v [YOUR PATH TO PROXY.TXT]:/app/proxy.txt`以挂载代理列表文件*\n\n## 图形验证码识别API\n\n使用CNN卷积神经网络构建，已实现对**登录、评论**验证码的自适应识别\n\n```\nrequests.post("https://bili.dev:2233/captcha", json={\'image\': base64.b64encode(image).decode("utf-8")})\n```\n\n## 交流\n\nQQ群：[956399361](https://jq.qq.com/?_wv=1027&k=5BO0c7o)\n\n## 捐赠\n\n<p align="center">\n<img src="https://cdn.kagamiz.com/Bilibili-Toolkit/donate_alipay.png" width="250">\n<img src="https://cdn.kagamiz.com/Bilibili-Toolkit/donate_wechat.png" width="250">\n</p>\n\n## 鸣谢\n\n本项目的灵感与使用到的部分API来自以下项目：\n\n> [czp3009/bilibili-api](https://github.com/czp3009/bilibili-api)\n\n## 许可证\n\nBilibili Toolkit is under The Star And Thank Author License (SATA)\n\n本项目基于MIT协议发布，并增加了SATA协议\n\n您有义务为此开源项目点赞，并考虑额外给予作者适当的奖励 ∠( ᐛ 」∠)＿\n']
penetration-suite-toolkit,本项目制作的初衷是帮助渗透新手快速搭建工作环境，工欲善其事，必先利其器。,1215,https://github.com/makoto56/penetration-suite-toolkit,main,['# **Windows10 Penetration Suite Toolkit within Kali Linux v4.0**\n![image](https://img.shields.io/badge/Author-Makoto56-blueviolet.svg) ![image](https://img.shields.io/badge/Platform-Windows-red.svg) ![image](https://img.shields.io/badge/WSL-Kali-9cf.svg) ![image](https://img.shields.io/badge/Property-%E6%AD%A6%E5%99%A8%E5%BA%93-brightgreen.svg) ![image](https://img.shields.io/badge/Version-4.0-yellow.svg) ![image](https://img.shields.io/badge/Update-2022.12.06-blue.svg)\n\n# **2022.12.06 更新说明:**\n\n1. **由于Kali的图形化模式占用资源造成卡顿，且使用率不高，~~特此去除图形化模式~~。**\n> **[参考链接](https://blog.csdn.net/weixin_44285782/article/details/107442217)**\n2. **补充了大量实用工具，升级部分软件为最新版；**\n3. **重构了“漏洞工具” 的目录分类，查找更方便快捷；**\n4. **重构了开始菜单及快捷启动索引；**\n5. **特别鸣谢:**\n> **@棉花糖网络安全圈 @利刃信安 @果核剥壳 @雨苁 @狐狸说安全 @暗魂攻防实验室**\n6. **今后的更新方式:**\n - **添加或升级软件等小幅更新会同步在[迅雷网盘](https://pan.xunlei.com/s/VNIof2IDw2PX34Uz9zaiPDK-A1?pwd=sfn6)发布软件安装包；**\n - **重大升级更新或迭代会重新制作虚拟机镜像。**\n\n# **常见问题说明:**\n1. **VMware Workstation 不可恢复错误（vcpu-0）解决方法:**\n - **升级VMware至17.0[最新版](https://www.ghxi.com/vmware17.html)**\n - **物理机bios-CPU虚拟化，选择开启**\n - **物理机控制面板-程序和功能-启用或关闭windows功能-虚拟机平台，选择关闭**\n - **虚拟机设置-处理器-虚拟化引擎，选择关闭“虚拟化Intel VT-x/EPT 或 AMD-V/RVI(V)”**\n> **[参考链接](https://blog.csdn.net/weixin_43978472/article/details/123347650)**\n2. **Nessus进程占用过高问题:**\n - **nessusd.exe进程刚开机时会占用90%+CPU，过一会会恢复正常。介意的可以禁用。**\n\n# **系统简介:**\n\n1. **基于Win10 Workstation 21H2 x64 原版镜像制作（不适用于ARM设备）；**\n2. **完整安装WSL Kali Linux 2022.3；**\n3. **精简系统自带软件，美化字体及部分图标，适度优化；**\n4. **使用单磁盘文件存储，提升性能；**\n - **推荐运行环境:**\n - **vmware:16.x（vmware图形内存1G）**\n - **运行内存:8G**\n - **固态硬盘:200G**\n# **制作声明:**\n\n1. **所有的安装类软件均下载自软件对应的官方网站；**\n2. **所有的绿色类软件均下载自[果核剥壳](https://www.ghxi.com) ；**\n3. **所有的脚本类工具均下载自github；**\n4. **部分授权类工具（破解版）及优秀的渗透工具来自微信公号分享；**\n - **排名不分先后，同时也推荐大家关注，一起变得更强。**\n> **雾晓安全、果核剥壳、归零安全、潇湘信安、学蚁致用、谢公子学安全、利刃信安、棉花糖网络安全圈、狐狸说安全、HACK技术沉淀营、无尾熊安全、T00ls、渗透攻击红队、洛米唯熊、雷石安全实验室、酒仙桥六号部队、InBug实验室、鸿鹄实验室、黑白之道、HACK之道、GobySec、Gcow安全团队、Gamma实验室、CobaltStrike实战、网络安全与黑客技术、QZ的安全悟道、菜鸟学信安、乌雲安全、白帽子飙车路、信安之路、chaosec、鸟哥谈安全、安全小飞侠、moonsec、系统安全运维、天驿安全、零组攻防实验室、Lemonsec、橘猫学安全、Hacking黑白红、渗透安全团队、渗透xiao白帽、白帽子社区、HACK学习呀、猪猪谈安全、开普勒安全团队、吾爱破解论坛、WhITECat安全团队、寻云安全团队、Khan安全攻防实验室、Bypass、天億网络安全、关注安全技术、玄魂工作室、边界骇客、零度安全攻防实验室、WgpSec狼组安全团队、黑白天实验室、靶机狂魔、渗透云笔记、TeamsSix、hijackY、重生信息安全、TimeLine Sec、GobySec、Gcow安全团队、冰蚕实验室。**\n5. **本集成环境是根据本人渗透工作和学习中的侧重点进行制作，不可能做到满足所有人的需求；**\n6. **本项目制作的初衷是帮助渗透新手快速搭建工作环境，工欲善其事，必先利其器；**\n7. **本项目由于后期调试原因可能会遗留部分本人的信息，请直接忽视；**\n8. **本项目坚决不接受也从未曾接受任何形式的赞助；**\n9. **如果您有好的意见或者建议，请联系邮箱 burpsuite@qq.com。**\n\n# **免责声明:**\n\n1. **本镜像仅面向合法授权的企业安全建设行为，如您需要测试本镜像的可用性，请自行搭建靶机环境；**\n2. **在使用本镜像进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权；**\n3. **如您在使用本镜像的过程中存在任何非法行为，您需自行承担相应后果，作者将不承担任何法律及连带责任；**\n4. **本镜像所使用的工具资源均来自于网友投稿及互联网整理，作者仅提供分享交流平台，不为其版权负责。如果您发现本镜像中有侵犯您（或贵司）知识产权的资源，请及时反馈，作者会第一时间进行修改或删除。**\n\n# **软件及工具介绍:**\n\n## **系统环境类:**\n\n1. **Directx**\n2. **Net Framework 3.5**\n3. **Net Framework 4.8**\n4. **Microsoft C runtime library**\n5. **Microsoft visual C++ 2005-2022**\n6. **集成常用字库**\n\n## **WindowsApp类:**\n\n1. **WSL Kali Linux（WSL 1.0）**\n - **WSL 1.0不具备完整的Linux内核，有部分软件或命令无法使用。**\n - **WSL 2.0具备完整的Linux内核，但需要开启Windows“虚拟机平台”功能，会造成冲突使Android虚拟机无法使用。**\n - **可视具体情况决定，WSL版本转换及图形化实现方法如下：**\n - **[参考连接1](https://blog.csdn.net/sy95122/article/details/125003315)**\n - **[参考连接2](https://blog.csdn.net/l1447320229/article/details/108210760)**\n2. **Windows Terminal（已替换默认cmd）**\n\n## **其他工具类 （C:\\Softwares）:**\n\n1. **AAct:激活工具（激活windows & office）**\n2. **Bandicam:视频录制工具（注册版）**\n3. **Bandizip:压缩工具（注册版）**\n4. **Chrome:108.0.5359 绿色修改版**\n - **主要集成插件:**\n - **Adblock:广告拦截工具**\n - **Charset:修改网页编码工具**\n - **Chrome清理大师:chrome清理工具**\n - **Editthiscookie:cookie编辑工具**\n - **FindSomething:敏感文件搜集工具**\n - **Fofa view:fofa工具**\n - **Funnel search:google搜索工具**\n - **Hackbar**\n - **Hack-Tools:红队综合小工具**\n - **Heimdallr:指纹识别、蜜罐特征告警工具**\n - **IE Tab:ie兼容模式工具**\n - **Infinity:标签页工具**\n - **IP address and domain inf:ip&domain探测工具**\n - **IP whois:whois 探测工具**\n - **Neater bookmarks:书签管理工具**\n - **Octotree:github资源树查看工具**\n - **Onetab:标签管理工具**\n - **Penetration Testing Kit:红队综合小工具**\n - **Postwoman:接口调试工具**\n - **Proxy switchyomega:代理切换工具**\n - **Seoquake:网页统计工具**\n - **Supercopy:超级复制**\n - **Tampermonkey:脚本工具**\n - **User-Agent Switcher:浏览头切换工具**\n - **Toolbox 常用工具:集成常用小工具**\n - **Vulners Web Scanner:微型漏洞扫描工具**\n - **Wappalyzer:网页技术分析工具**\n - **WebSocket Test Client:websocket工具**\n - **Whatruns:网页技术分析工具**\n - **XSS辅助工具**\n - **X情报查询助手:微步社区**\n - **YetAnotherDragAndGo:超链接拖拽新窗口打开**\n - **ZoomEye Tools**\n - **类似的网站**\n5. **Contextmenumanager:右键菜单管理工具**\n6. **Dism++:系统调节工具**\n7. **Everything:搜索工具（已禁用windows自带搜索）**\n8. **Goldwave:音频编辑工具**\n9. **GoogleEarth:谷歌地球**\n10. **Honeyview:看图工具**\n11. **Huorong:杀毒工具（C:\\Penetration 为白名单）**\n12. **ICON:第三方图标包**\n13. **Internet Download Manager:6.41.6（注册版）**\n14. **IOBit:**\n - **AdvancedSystemcare:优化清理工具（注册版）**\n - **DriverBooster:驱动工具（注册版）**\n - **SmartDefrag:磁盘整理工具（注册版）**\n - **Uninstaller:卸载工具（注册版）**\n15. **Mactype:字体管理工具（已修改系统默认字体为Mac苹方体）**\n16. **Maye:快捷启动工具**\n17. **Meitu:美图秀秀**\n18. **OldNewExplorer:资源管理器调节工具**\n19. **PCMaster:系统调整工具**\n - **已创建右键快捷菜单:**\n - **在此处打开Terminal终端**\n - **在此处打开KaliLinux终端**\n - **在此处打开Notepad**\n - **控制面板**\n - **计算器**\n - **注册表**\n20. **Potplayer:视频播放工具**\n21. **Refresh:刷新图标缓存**\n22. **Snipaste:截图工具**\n23. **Telegram:电报客户端**\n24. **UltraISO:iso编辑工具**\n25. **WPS:WPS（注册版）**\n\n## **渗透测试类（C:\\Penetration）:**\n\n1. **常用的python、C#及java类工具均配有start.bat或start.vbs。**\n2. **注明工具版本及更新时间；**\n3. **注明依赖环境；**\n4. **注明主要参数；**\n5. **注明简要用法（给工具不给用法的都是耍流氓）**\n\n### **[+] 安卓工具:**\n\n1. **AndroidHelper:apk逆向工具**\n2. **AndroidKiller:apk综合工具**\n3. **[Apkinfo](https://github.com/bihe0832/Android-GetAPKInfo):apk分析工具**\n4. **[Apktool](https://github.com/iBotPeaches/Apktool):apk反编译工具**\n5. **ApkToolbox:apk综合工具**\n6. **[ApkToolPlus](https://github.com/linchaolong/ApkToolPlus):apk反编译分析工具**\n7. **[AppMessenger](https://github.com/sulab999/AppMessenger):apk分析工具**\n8. **[Dex2jar](https://github.com/pxb1988/dex2jar):dex打包工具**\n9. **Nox:夜神安卓模拟器（安卓9.0）**\n - **已安装:**\n - **Debug Proxy**\n - **HttpCanary**\n - **JuiceSSH**\n - **MT**\n - **Net Capture**\n - **NP**\n - **Packet Capture**\n - **ProxyDroid**\n - **Terminal Emulator**\n - **开发者助手**\n10. **[Yaazhini](https://www.vegabird.com/yaazhini/):apk漏洞扫描工具**\n\n### **[+] 免杀工具:**\n\n1. **[Aniya](https://github.com/piiperxyz/AniYa)**\n2. **[AVevasion](https://github.com/1y0n/av_evasion_tool)**\n3. **Bypass-antivirus:免杀教程**\n4. **[Charlotte](https://github.com/9emin1/charlotte)**\n5. **[Cool](https://github.com/ed1s0nz/cool)**\n6. **[DarkArmour](https://github.com/bats3c/darkarmour)**\n7. **[GLLloader](https://github.com/INotGreen/Gllloader)**\n8. **[Invoke-Obfuscation](https://github.com/danielbohannon/Invoke-Obfuscation)**\n9. **[Loader](https://github.com/Avienma/shellcode_loader)**\n10. **[Powershell-Obfuscation](https://github.com/H4de5-7/powershell-obfuscation)**\n11. **Sandboxie:沙盒工具**\n12. **[ShellcodeLoader](https://github.com/knownsec/shellcodeloader)**\n13. **VMProtect:加壳工具**\n14. **VProtect:加壳工具**\n15. **[ZheTian](https://github.com/yqcs/ZheTian):遮天shellcode加载工具**\n\n### **[+] 连接工具:**\n\n1. **Anydesk**\n2. **Filezilla**\n3. **Finalshell**\n4. **MobaXterm**\n5. **Putty**\n6. **Teamviewer**\n7. **WinSCP**\n8. **Xmanager**\n\n### **[+] 破解工具:**\n\n1. **AccessCrack:access密码破解工具**\n2. **Advanced Archive Password Recovery:压缩包密码破解工具**\n3. **Advanced Office Password Recovery:office密码破解工具**\n4. **Advanced PDF Password Recovery:pdf密码破解工具**\n5. **DecryptPassword**\n - **文件夹下集成下列密码破解工具:**\n - **[finalshell-decoder](https://github.com/passer-W/FinalShell-Decoder)**\n - **[finalshellPasswordDecoder](https://github.com/qurikuduo/finalshellPasswordDecoder)**\n - **[firefox_decrypt](https://github.com/unode/firefox_decrypt)**\n - **[FireFox-Thief](https://github.com/LimerBoy/FireFox-Thief)**\n - **[hack-browser-data-windows](https://github.com/moonD4rk/HackBrowserData)**\n - **[how-does-navicat-encrypt-password](https://github.com/HyperSine/how-does-navicat-encrypt-password)**\n - **[how-does-SecureCRT-encrypt-password](https://github.com/HyperSine/how-does-SecureCRT-encrypt-password)**\n - **[how-does-Xmanager-encrypt-password](https://github.com/HyperSine/how-does-Xmanager-encrypt-password)**\n - **Safe360Browsergetpass**\n - **[SharpDecryptPwd](https://github.com/uknowsec/SharpDecryptPwd)**\n - **[teamviewer-dumper](https://github.com/attackercan/teamviewer-dumper)**\n - **vcenterExsi_PwdDecrypt**\n - **[winscppasswd](https://github.com/anoopengineer/winscppasswd)**\n6. **[Hydra](https://github.com/vanhauser-thc/thc-hydra):口令爆破工具**\n7. **MD5Crack:md5碰撞工具**\n8. **SNETCracker:超级弱口令破解工具**\n9. **WebshellCrack:一句话密码破解工具**\n - **K8_FuckOneShell**\n - **K8_OneShellCrack**\n - **T00ls综合一句话爆破工具**\n\n### **[+] 数据工具:**\n\n1. **AnotherRedisDesktopManager:redis管理工具**\n2. **DatabaseBrowser:mdb & xls数据库查看工具**\n3. **DatabaseUtilizationTools:数据库利用工具**\n4. **HeidiSQL:数据库连接管理工具**\n5. **Microsoft SQL Server:2019专业版**\n - **username:sa**\n - **password:sqladmin**\n6. **Microsoft SQL Server Management:mssql连接工具**\n7. **Navicat:数据库连接管理工具**\n8. **Neo4j:neo4j数据库管理工具**\n9. **OracleShell:oracle利用工具**\n10. **RedisDesktopManager:redis管理工具**\n11. **SharpSqlTools:mssql数据库利用工具**\n12. **Sqlite:sqlite数据库管理工具**\n13. **Sqlknife:mssql数据库利用工具**\n14. **Sqlmap:注入工具**\n15. **SQLTools:mssql利用工具**\n16. **Sylas:mssql & orcle & postgresql数据库利用工具**\n17. **ToadOracle:oracle数据库管理工具**\n\n### **[+] 夺旗工具（CTF）:**\n\n1. **ASCII**\n2. **BehinderDecode**\n3. **BerylEnigma**\n4. **Binwalk**\n5. **BlindWatermark**\n6. **CaptfEncoder**\n7. **Converter**\n8. **CRCCalculator**\n9. **CTFEditor**\n10. **CTFTools**\n11. **CTFcrack**\n12. **CyberChef**\n13. **DesTool**\n14. **F5Steganography**\n15. **FindFlag**\n16. **Foremost**\n17. **GifTools**\n18. **GNUplot**\n19. **JPHS**\n20. **MossTool**\n21. **LSBSteganography**\n22. **MP3Steno**\n23. **NamoGif Animator**\n24. **Outguess**\n25. **PcapTool**\n26. **PixRecovery**\n27. **PNGCalculator**\n28. **PNGCheck**\n29. **PNGDebugger**\n30. **QRResearch**\n31. **QRCode**\n32. **Regular**\n33. **RSATool**\n34. **RSA_N**\n35. **SM4**\n36. **Steganography**\n37. **Stegdetect**\n38. **Steghide**\n39. **Stegsolve**\n40. **Taowa Tool**\n41. **Tweak PNG**\n42. **Volatility**\n43. **Volatility Workbench**\n44. **wbStego**\n45. **WinHex**\n46. **Xiaokui**\n47. **ZZYQR**\n48. **ctf 密码学知识点总结**\n49. **ctf 逆向知识点总结**\n50. **ctf 隐写术知识点总结**\n\n### **[+] 字典工具:**\n\n1. **DictMaker:字典生成工具**\n - **[PwdBUD](https://github.com/ort4u/PwdBUD)**\n - **黑刀字典生成工具**\n - **火花字典生成工具**\n - **木头字典生成工具**\n - **品轩字典生成工具**\n - **易优字典生成工具**\n2. **[fuzzDicts](https://github.com/TheKingOfDuck/fuzzDicts)**\n3. **[pentestdicts](https://github.com/ppbibo/pentesterspecialdict)**\n\n### **[+] 磁盘工具:**\n\n1. **Diskgenius:注册版（可恢复硬盘数据）**\n2. **SSDfresh:ssd优化工具**\n\n### **[+] 编辑工具:**\n\n1. **010Editor:十六进制编辑工具（注册版）**\n2. **BeyondCompare:文件对比工具**\n3. **eSearch:截屏、录屏、OCR、搜索、翻译、贴图、以图搜图（已集成离线OCR库）**\n4. **FFRename:菲菲更名宝贝（专业版）**\n5. **FindStr:文本检索工具**\n6. **[FireKylin](https://github.com/MountCloud/FireKylin):系统痕迹采集**\n7. **Fortify:代码审计工具22.1.0（已集成rules）（注册版）**\n8. **JavaDecompiler:java查看编辑工具**\n9. **Jsonview:json查看编辑工具**\n10. **LogParse:windows日志分析工具**\n11. **LogParseLizard:windows日志分析工具（图形化）**\n12. **myBase:个人数据库编辑工具（注册版）**\n13. **Notepad++:编辑工具**\n14. **PSTConverter:pst邮件转换工具**\n15. **Seay:php代码审计工具**\n16. **SeayDzend:php zend解密工具**\n17. **SharpSword:csharp版本word查看工具**\n18. **Sublime:编辑工具（注册版）**\n19. **Typora:MarkDown编辑工具（注册版）**  \n20. **VSCode:VisualCode编辑工具**\n21. **WindowsLogsAnalysis:windows日志分析工具（图形化）**\n22. **XMind:思维导图工具**\n23. **YoudaoDict:有道词典（注册版）（已集成离线翻译库）**\n\n### **[+] 漏洞工具:**\n\n1. **AlibabaNacos**\n2. **Apache**\n3. **Cacti**\n4. **Cas**\n5. **Chrome**\n6. **Citrix**\n7. **CMSHunter**\n8. **Confluence**\n9. **D-Link**\n10. **Database**\n - **mongo**\n - **mssql**\n - **mysql**\n - **redis**\n11. **Elasticsearch**\n12. **F5-BIG-IP**\n13. **FastAdmin**\n14. **Fastjson**\n15. **FCKEditor**\n16. **FusionAuth**\n17. **Gitlab**\n18. **Harbor**\n19. **HTTPBasic**\n20. **HTTPFileServer**\n21. **IIS**\n22. **ILO4**\n23. **Intellian-Aptus-Web**\n24. **Jboss**\n25. **Jellyfin**\n26. **Jenkins**\n27. **Jira**\n28. **JumpServer**\n29. **Kibana**\n30. **Liferay**\n31. **Linux**\n - **CVE-2015-1328**\n - **CVE-2019-14287**\n - **CVE-2021-22555**\n - **CVE-2021-3156**\n - **CVE-2021-33909**\n - **CVE-2021-3493**\n - **CVE-2021-4034**\n - **CVE-2022-0847-1**\n - **CVE-2022-0847-2**\n - **CVE-2022-23222**\n - **...**\n32. **Mail**\n - **coremail**\n - **exchange**\n - **zimbra**\n33. **MetaCRM**\n34. **ModSecurity**\n35. **Nexus**\n36. **Node.js**\n37. **OA**\n - **seeyon**\n - **tongda**\n - **weaver**\n38. **Office**\n39. **Open-AudIT**\n40. **Others**\n41. **PHP-FPM**\n42. **PHP**\n43. **phpMyadmin**\n44. **PHPStudy**\n45. **Rconfig**\n46. **SaltStack**\n47. **Sangfor**\n48. **SAP**\n49. **Shiro**\n50. **ShowDoc**\n51. **Solarwinds**\n52. **Spring**\n53. **Struts2**\n54. **Sunlogin**\n55. **TeamViewer**\n56. **Tomcat**\n57. **Tools**\n - **AliyunAKTools:阿里云利用工具**\n - **AptTools:综合漏洞利用工具**\n - **[CF](https://github.com/teamssix/cf):云环境利用框架**\n - **[CodeTest](https://github.com/codeyso/CodeTest):综合漏洞利用工具**\n - **docs-0sec:零组文档库**\n - **docs-base:漏洞文档库**\n - **[Fuxploider](https://github.com/almandin/fuxploider):漏洞扫描工具**\n - **[Gr33k](https://github.com/lijiaxing1997/Gr33k):综合漏洞利用工具**\n - **~~HVVExploitApply:寻云安全团队1.5 综合漏洞利用工具（未取得授权，特此删除）~~**\n - **LiqunKit:综合漏洞利用工具**\n - **[MYExploit](https://github.com/achuna33/MYExploit):综合漏洞利用工具**\n - **[NSudoLG](https://github.com/Thdub/NSudo_Installer):windows提权工具**\n - **[Nuclei](https://github.com/projectdiscovery/nuclei):内网扫描工具**\n - **OATools:OA漏洞利用工具**\n - **[POCbomber](https://github.com/tr0uble-mAker/POC-bomber):综合漏洞利用工具**\n - **[poc2jar](https://github.com/f0ng/poc2jar):综合漏洞利用工具**\n - **[Ruoyi-All](https://github.com/thelostworldFree/Ruoyi-All):综合漏洞利用工具**\n - **[Shenji](https://github.com/yhy0/ExpDemo-JavaFX):综合漏洞利用工具**\n - **[SuperXray](https://github.com/4ra1n/super-xray):综合漏洞利用工具**\n - **[Vulmap](https://github.com/zhzyker/vulmap):综合漏洞利用工具**\n - **[WinExpSuggester-NG](https://github.com/bitsadmin/wesng):windows提权工具**\n - **[WinExpSuggester](https://github.com/0xToast/Windows-Exploit-Suggester-Py-3):windows提权工具**\n - **[Xray](https://github.com/chaitin/xray):漏洞扫描工具**\n - **Ysoserial**\n58. **TPLink**\n59. **VMware**\n60. **Weblogic**\n61. **Webmin**\n62. **Windows**\n - **CVE-2003-0352**\n - **CVE-2005-1983**\n - **CVE-2006-3439**\n - **CVE-2008-1084**\n - **...**\n - **CVE-2021-42287**\n - **CVE-2022-21907**\n - **CVE-2022-26923**\n - **...**\n - **MS03-026**\n - **MS05-039**\n - **MS06-040**\n - **...**\n - **MS17-017**\n63. **XenMobile**\n64. **XStream**\n65. **XXL-job**\n66. **Ysuserial**\n67. **Zoho**\n68. **Zyxel**\n> **漏洞库综合了下列项目:**\n - **[CMS-Hunter](https://github.com/SecWiki/CMS-Hunter)**\n - **[expHub](https://github.com/zhzyker/exphub)**\n - **[Middleware-Vulnerability-Detection](https://github.com/mai-lang-chai/middleware-vulnerability-detection)**\n - **[System-Vulnerability](https://github.com/mai-lang-chai/system-vulnerability)**\n - **[Vulnerability](https://github.com/edgesecurityteam/vulnerability)**\n> **更多漏洞exp见 C:\\Penetration\\ExpolitTools（漏洞exp较多，请善用everything搜索）**\n\n### **[+] 内网工具:**\n\n1. **[3Gstudent](https://github.com/3gstudent):三好学生powershell & python脚本**\n2. **[ABPTTS](https://github.com/nccgroup/ABPTTS):内网穿透工具**\n3. **AddUser:添加用户工具**\n4. **ADExplore:ldap工具**\n5. **[ADinfo](https://github.com/lzzbb/Adinfo):内网信息搜集工具**\n6. **[Aoratos](https://github.com/PinoyWH1Z/AoratosWin):软件运行痕迹清理工具**\n7. **BloodHound:域渗透分析工具**\n8. **BloudyAD:域渗透利用工具**\n9. **BruteLogon:windows口令爆破工具**\n10. **ClearLogs:windows日志清除工具**\n11. **[CrackMapExec](https://github.com/Porchetta-Industries/CrackMapExec):内网综合利用工具**\n12. **[DefeatDefender](https://github.com/Back-X/Defeat-Defender):关闭defender工具**\n13. **[DomainTools](https://github.com/SkewwG/domainTools):域渗透综合利用工具**\n14. **[DomainInfoFind](https://github.com/wangfly-me/DomainInfo_Find):获取域内机器的桌面文件**\n15. **EarthWorm:内网穿透工具**\n16. **[Frp](https://github.com/fatedier/frp):内网穿透工具**\n17. **[FScan](https://github.com/shadow1ng/fscan):内网扫描工具**\n18. **GetWinInfo:windows信息搜集工具**\n19. **Gorailgun:内网渗透综合利用工具**\n - **password:三个空格**\n19. **[GoToHTTP](https://gotohttp.com/):远控工具**\n20. **[Hoaxshell](https://github.com/t3l3machus/hoaxshell):远控工具**\n21. **[impacket](https://github.com/SecureAuthCorp/impacket):内网协议工具**\n22. **[iox](https://github.com/EddieIvan01/iox):流量代理工具**\n23. **Ladon:内网扫描工具（小密圈9.3版本）**\n24. **LCX:端口转发工具**\n25. **LdapAdmin:ldap工具**\n26. **[LDAPDomainDump](https://github.com/dirkjanm/ldapdomaindump):ldap工具**\n27. **Mimikatz:密码抓取工具**\n> **文件夹下集成下列密码抓取工具**\n - **[gosecretsdump](https://github.com/C-Sto/gosecretsdump)**\n - **hklm**\n - **[kekeo](https://github.com/gentilkiwi/kekeo)**\n - **[lazagne](https://github.com/AlessandroZ/LaZagne)**\n - **[mimipenguin](https://github.com/huntergregal/mimipenguin)**\n - **[ntdsdumpex](https://github.com/zcgonvh/NTDSDumpEx)**\n - **procdump**\n - **[pwdump](https://www.openwall.com/passwords/windows-pwdump)**\n - **[quarkspwdump](https://blog.quarkslab.com/quarks-pwdump.html)**\n28. **[Mip22](https://github.com/makdosx/mip22):网页钓鱼工具**\n29. **[Moonwalk](https://github.com/mufeedvh/moonwalk):linux取证工具**\n30. **[Nacs](https://github.com/u21h2/nacs):内网扫描工具**\n31. **NC:监听工具**\n32. **[Neo-reGeorg](https://github.com/L-codes/Neo-reGeorg):regeorg重构版**\n33. **[NetSpy](https://github.com/shmilylty/netspy):内网网段探测工具**\n34. **[NPS](https://github.com/ehang-io/nps):内网代理工具**\n35. **OpenRDP:开启远程桌面工具**\n36. **OpenSSH:ssh工具**\n37. **Pack:打包工具**\n - **7z（单文件版）**\n38. **[PE](https://www.wepe.com.cn/):WeiPE镜像**\n39. **[PEASS-ng](https://github.com/carlospolop/PEASS-ng):linux取证工具**\n40. **[PowerProxy](https://github.com/get-get-get-get/PowerProxy):powershell代理工具**\n41. **[PowershDLL](https://github.com/p3nt4/PowerShdll):powershell工具**\n42. **PS2EXE:powershell转exe工具**\n43. **[PSTools](https://learn.microsoft.com/en-us/sysinternals/downloads/pstools):微软psexec工具**\n44. **[PyStinger](https://github.com/FunnyWolf/pystinger):流量代理工具**\n45. **ReverseShell:反弹shell工具**\n46. **[revsh](https://github.com/emptymonkey/revsh):内网穿透工具**\n47. **[Scan4all](https://github.com/hktalent/scan4all):内网扫描工具**\n48. **[ScheduleRunner](https://github.com/netero1010/ScheduleRunner):计划任务利用工具**\n49. **SharpTools:**\n - **CatchBrowser:浏览器密码抓取工具**\n - **[SharpAdiDnsDump](https://github.com/b4rtik/SharpAdidnsdump):域dns枚举工具**\n - **[SharpDecryptPwd](https://github.com/RowTeam/SharpDecryptPwd):浏览器密码解密工具**\n - **[SharpEventLog](https://github.com/uknowsec/SharpEventLog):日志分析工具**\n - **[SharpHound](https://github.com/BloodHoundAD/SharpHound):域渗透分析工具**\n - **SharpListRDPConnections:rdp连接记录枚举工具**\n - **[SharpNetCheck](https://github.com/uknowsec/SharpNetCheck):出网探测工具**\n - **[SharpRDPLog](https://github.com/Adminisme/SharpRDPLog):rdp连接记录枚举工具**\n - **[SharpStrike](https://github.com/iomoath/SharpStrike):cobaltstrike工具**\n - **[SharpWxDump](https://github.com/AdminTest0/SharpWxDump):微信解密工具**\n50. **[StopDefender](https://github.com/lab52io/StopDefender):关闭defender工具**\n51. **[Stowaway](https://github.com/ph4ntonn/Stowaway):内网穿透工具**\n52. **[SweetBabyScan](https://github.com/inbug-team/SweetBabyScan):内网扫描工具**\n53. **[Traitor](https://github.com/liamg/traitor):linux提权工具**\n54. **[WCE](https://github.com/returnvar/wce):windows凭证编辑工具**\n55. **Wget:下载工具**\n56. **[wmiHacker](https://github.com/rootclay/WMIHACKER):wmi渗透工具**\n> **更多内网工具见 C:\\Penetration\\IntranetTools**\n\n### **[+] 办公工具:**\n\n1. **Adobe Acrobat DC 2022:PDF编辑工具**\n2. **Office:Word + Excel + Powerpoint + Access + Onenote + Outlook**\n3. **WPS:Word + Excel + Powerpoint + PDF**\n\n### **[+] 编程工具:**\n\n1. **GCC**\n2. **Golang**\n3. **Java:**\n - **jre1.8.0:已配置环境变量，系统默认调用java8**\n - **jre15.0.2:绿色版，如有特殊软件需要java15环境运行可直接调用/bin/java.exe即可**\n4. **Nodejs**\n5. **Python:**\n - **python2:python2命令启动（python2 test.py）**\n - **python3:python3命令启动（python3 test.py）**\n - **已集成本镜像所有python3工具的pip依赖库（如有遗漏未安装的库请自行安装）**\n - **使用pip命令调用python3 pip**\n6. **VisualStudio 2022:社区版**\n\n### **[+] 逆向工具:**\n\n1. **bat2exe:bat转exe工具**\n2. **DetectItEasy:查壳工具**\n3. **dnSpy:.Net逆向工具**\n4. **exeScope:exe编辑工具**\n5. **GreenHelper:exe绿化工具**\n6. **HashMaker:hash工具**\n7. **IDAPro:吾爱破解版**\n8. **ILSpy:.Net逆向工具**\n9. **jadx:java反编译工具**\n10. **OllyDebug:exe调试工具**\n11. **peidTool:查壳工具**\n12. **SignTool:签名伪造工具**\n13. **upxShell:upx加壳工具**\n14. **vbs2exe:vbs转exe工具**\n15. **x64dbg:exe调试工具**\n\n### **[+] 扫描工具:**\n\n1. **Acunetix:15.1.221109177（注册版）**\n - **username:admin@awvs.com**\n - **password:Admin@awvs.com**\n2. **AppScan:10.0.7（注册版）**\n3. **Goby:2.0.5红队专版（含1288 poc）**\n4. **Nessus:10.3.1（注册版）**\n - **username:admin**\n - **password:password**\n5. **Nmap:端口扫描工具**\n6. **RouterScan:C段扫描工具**\n7. **ScanBox**\n> **AVScan 杀毒软件检测工具:**\n - **CheckAV（自己写的辣鸡代码，如有需要可以随便使用）**\n> **LeakScan 敏感文件扫描工具:**\t\n - **[dirMap](https://github.com/H4ckForJob/dirmap)**\n - **[dirSearch](https://github.com/maurosoria/dirsearch)**\n - **[PackerFuzzer](https://github.com/rtcatc/Packer-Fuzzer)**\n - **[ScanTools](https://gitee.com/windyjxx/ScanTools)**\n - **Yujian**\n - **GitHack**\n - **7KB WebPath Brute**\n - **7KB Ucenter Sniper**\n - **7KB WordPress Sniper**\n - **...**\n> **SubDomain 子域名探测工具:**\n - **FofaView:fofa查询工具**\n - **[InfoSearchAll](https://github.com/ExpLangcn/InfoSearchAll)**\n - **Layer:子域名挖掘机**\n - **[OneforAll](https://github.com/shmilylty/OneForAll)**\n - **Securitytrails:Securitytrails官方api脚本**\n - **[SnowShadow](https://github.com/jinsezlb/SnowShadow)**\n - **[Sublist3r](https://github.com/aboul3la/Sublist3r)**\n - **[Subfinder](https://github.com/projectdiscovery/subfinder)**\n - **[ThunderSearch](https://github.com/xzajyjs/ThunderSearch)**\n - **[WebBatchRequest](https://github.com/ScriptKid-Beta/WebBatchRequest)**\n - **[WebFinder](https://github.com/Liqunkit/webfinder-next)**\n - **...**\n> **更多扫描工具见 C:\\Penetration\\ScanTools\\ScanBox**\n\n### **[+] 权限工具:**\n\n1. **[Antsword](https://github.com/AntSwordProject/AntSword-Loader):蚁剑（已集成插件）**\n2. **[Behinder](https://github.com/rebeyond/Behinder):冰蝎（shell密码统一为rebeyond）**\n - **behinder 3.0 beta11**\n - **behinder 4.0.6**\n3. **[Cobaltstrike](https://github.com/TryGOTry/DogCs4.4):Dog 4.4 汉化版**\n - **使用[CSAgent](https://github.com/Twi1ight/CSAgent)汉化**\n - **vps启动teamserver:sudo ./teamserver your_ip your_password random.profile**\n - **集成插件（C:\\Penetration\\ShellTools\\CobaltStrike\\Scripts）**\n - **adcollection**\n - **[bypassav](https://github.com/hack2fun/BypassAV)**\n - **[erebus](https://github.com/DeEpinGh0st/Erebus)**\n - **eval**\n - **[eventlogmaster](https://github.com/QAX-A-Team/EventLogMaster)**\n - **ladon**\n - **[mikasa](https://github.com/Mikasazero)**\n - **[taowu](https://github.com/pandasec888/taowu-cobalt-strike)**\n4. **[ByPassBehinder](https://github.com/czz1233/GBByPass):jsp免杀工具**\n5. **[Godzilla](https://github.com/BeichenDream/Godzilla):哥斯拉**\n6. **Hema:河马webshell查杀工具**\n7. **Kali:WSL Kali Linux 2022.3**\n> **用户:**\n - **username:kali password:kali**\n - **username:root password:root**\n - **修改软件源为阿里云**\n - **完整安装Kali Linux所有软件包**\n8. **[Skyscorpion](https://github.com/shack2/skyscorpion):天蝎**\n9. **Shell:免杀一句话木马（密码统一为cmd）**\n10. **[Webshell](https://github.com/tennc/webshell):webshell收集项目**\n11. **[WebshellBypassedHuman](https://github.com/Macr0phag3/webshell-bypassed-human):webshell免杀**\n12. **[WebshellGenerate](https://github.com/cseroad/Webshell_Generate):webshell生成工具**\n\n### **[+] 流量工具:**\n\n1. **BlueTeamTools:流量解密工具**\n2. **BurpSuite:2022.1.1** \n - **[汉化插件](https://github.com/funkyoummp/burpsuitecn)**\n - **集成插件:**\n - **VulnersScanner**\n - **ChangeU**\n - **ChunkedCodingConverter**\n - **DomainHunter**\n - **FakeIP**\n - **Hackbar**\n - **Sqlmap4burp**\n - **TurboIntruder**\n3. **Fiddler:流量抓包工具（汉化版）**\n4. **ftpServers:ftp开启工具**\n5. **HackFirefox:firefox 49.0 集成插件版**\n6. **ipChanger:ip代理工具**\n7. **LiqunShield:webshell流量分析工具**\n8. **NetSetMan:网络参数设置工具**\n9. **OpenVPN:vpn工具**\n10. **phpStudy:8.1集成环境**\n11. **Proxifier:流量代理工具（汉化版）**\n12. **[ShadowSocks](https://github.com/shadowsocks/shadowsocks-windows):科学上网工具**\n13. **TorBowser:洋葱浏览器**\n14. **[v2ray](https://github.com/2dust/v2rayN):科学上网工具**\n15. **WireShark:流量抓包分析工具**\n16. **[Yakit](https://github.com/yaklang/yakit)**\n\n# 全套虚拟机镜像：\n\n1. **Windows 7 x64**\n2. **Windows 8 x64**\n3. **Windows 10 x64**\n4. **Windows Server 2008 x64**\n5. **Windows Server 2012 x64**\n6. **Windows Server 2016 x64**\n7. **Windows Server 2019 x64**\n8. **Ubuntu 20 x64**\n\n**所有虚拟机镜像均安装：**\n - **VMTools**\n - **7z**\n - **Microsoft Visual C++ 2008-2022 运行库**\n - **密钥或激活工具激活**\n\n**可供测试软件，环境搭建等用途。**\n**虚拟机账号密码已备注在VMware描述栏处，请注意查看。**\n\n# 下载链接：\n> **https://github.com/makoto56/penetration-suite-toolkit/releases/tag/v4.0**\n\n# 参考截图：\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/desktop.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/soft.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/intranet-tools.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/exp-tools.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/kali1.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/kali2.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/systeminfo.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/0sec.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/android.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/nessus.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/appscan.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/awvs.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/goby.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/antsword.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/burpsuite.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/yakit.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/chrome.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/cs.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/firefox.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/fortify.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/idapro.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/navicat.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/neo4j.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/office.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/photoshop.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/visualstudio.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/vscode.png)\n![image](https://raw.githubusercontent.com/makoto56/penetration-suite-toolkit/main/%E6%88%AA%E5%9B%BE/youdao.png)\n']
nei-toolkit,NEI 接口文档管理平台配套自动化工具,814,https://github.com/NEIAPI/nei-toolkit,master,['# 工具简介\n\n本工具是[NEI 接口管理平台](https://nei.netease.com/)自动化构建工具，主要功能有：\n\n* 根据 NEI 平台定义的工程规范，生成工程的初始化目录结构\n* 自动集成在 NEI 上定义的资源: 页面、异步接口、数据模型、页面模板、业务分组等\n* 本地模拟容器\n\n## 视频教程\n* [NEI 视频教程](https://nei.netease.com/tutorial)\n\n## NEI 工程规范介绍\n\n* [NEI 工程规范介绍](./doc/工程规范介绍.md)\n* [传给模板的数据格式说明](./doc/传给模板的数据格式说明.md)(**重要，必读**)\n* [Handlebars](http://handlebarsjs.com/) 是本工具渲染文件内容所使用的模板引擎\n* [Handlebars 辅助函数集说明](./doc/Handlebars辅助函数集.md)\n\n## 教程\n* [NEI 基本概念介绍](./doc/NEI基本概念介绍.md)\n* [使用 NEI 进行前后端并行开发](./doc/使用NEI进行前后端并行开发.md)\n* [使用 NEI 实现接口 Mock 服务](./doc/使用NEI进行前后端并行开发.md#如果需要使用接口的mock服务的话需要指定一个接口mock数据根路径-如下图所示)\n* [从零开始使用 NEI 构建 Mock 服务器，以及配置跨域头](./doc/从零开始使用nei构建Mock服务器以及配置跨域头.md)\n* [如何配置配置代理服务器](./doc/如何配置代理服务器.md)\n* [老项目迁移到 NEI 上的说明](./doc/老项目的迁移说明.md)\n* [一步一步教你如何愉快地生成 JavaBean 文件](./doc/一步一步教你如何愉快地生成JavaBean文件.md)\n* [JavaBean 文件的示例模板](./doc/JavaBean文件的示例模板.md)\n* [NEI 平台规则函数使用说明](./doc/NEI平台规则函数使用说明.md)\n* [NEI 平台系统预置的规则函数集](./doc/NEI平台系统预置的规则函数集.md)\n* [NEI 平台系统批量导入 HTTP 接口及格式说明](./doc/NEI导入HTTP接口列表支持的数据格式.md)\n* [NEI 平台系统批量导入 RPC 接口及格式说明](./doc/NEI导入RPC接口列表支持的数据格式.md)\n* [在NEI中导入接口的测试用例](./doc/在NEI中导入接口的测试用例.md)\n* [使用 NEI 生成 iOS 代码](./doc/使用NEI生成iOS代码.md)\n* [查看项目文档并导出为 PDF](./doc/查看项目文档并导出为pdf.md)\n* [MockStore 功能介绍](./doc/mockstore.md)\n  - [MockStore 实现说明](./doc/mockstore实现说明.md)\n  - [RPC 在线 Mock 接口调用说明](./doc/RPC在线Mock接口调用说明.md)\n  - [MockStore 示例代码](./doc/mockstore示例代码.md)\n* [查看项目的 Key](./doc/查看项目的Key.md)\n* [NEI 平台系统接口测试使用说明](./doc/NEI平台接口测试使用说明.md)\n  - [NEI 平台系统测试集使用说明](./doc/NEI平台测试集使用说明.md)\n  - [NEI 平台系统依赖测试使用说明](./doc/NEI平台依赖测试使用说明.md)\n  - [如何查看实际发送的数据](./doc/NEI平台接口测试发送数据查看.md)\n* [NEI 平台HTTP接口规范配置说明](./doc/NEI平台HTTP接口规范配置说明.md)\n* [NEI Chrome插件使用指南](./doc/NEI-Chrome插件使用指南.md)\n* [NEI 平台参数词条使用说明](./doc/参数词条使用说明.md)\n\n## FAQ\n* [常见问题](./doc/faq.md)\n\n## 插件\n* [Android Studio 插件](./doc/android_studio.md)\n\n## 工具使用\n\n### 环境配置\n构建工具基于 [Node.js](http://nodejs.org/) 平台，因此需要先安装 Node.js 环境，Node.js 在各平台上的安装配置请参阅官方说明。\n\n>安装的 Node.js 版本须为 v4.2 及以上\n\n### 安装\n\n```bash\nnpm install nei –g\n```\n\n>提示1: 如果安装不成功, 可以尝试命令 `npm install -g nei`\n\n>提示2: 如果已经安装过 nei, 请使用更新命令 `npm update nei -g`\n\n>提示3: 也可以安装某个分支，比如安装 `dev` 分支的命令如下:\n\n```bash\nsudo npm install "NEYouFan/nei-toolkit#dev" -g\n```\n\n>提示4：如果安装失败，可能是网络超时引起的，可以试着使用下面的命令安装：\n\n```bash\nsudo npm install nei -g --registry=https://registry.npm.taobao.org\n```\n\n## 指令说明\n\n本工具使用时在终端或者命令行输入以下格式指令运行\n\n```bash\nnei [指令] [参数]\n```\n\n其中可用的指令包括：\n\n| 指令  | 描述 |\n| :--- | :--- |\n| build  | 根据在 NEI 平台上定义的工程规范，生成工程的初始化目录结构 |\n| update | 更新通过 `nei build` 构建的项目 |\n| server | 启动本地模拟容器 |\n| template | 使用本地数据解析模板 |\n\n\n### build\n根据在 NEI 平台上定义的工程规范，生成工程的初始化目录结构，指令的运行格式为：\n\n```bash\nnei build -k [key] [参数]\n``` \n\n其中 [key] 是 NEI 平台上的项目的唯一标识，可以在项目的"工具(设置)"中查看\n\n针对 `nei build` 指令可用的参数包括：\n\n| 简写 | 全称 | 默认值 | 描述 |\n| :--- | :--- | :--- | :--- |\n| -h | --help |  | 显示 build 命令的帮助信息 |\n| -o | --output | ./ | 指定项目的输出目录 |\n| -k | --key |  | 项目的唯一标识，可以在项目的"工具(设置)"中查看 |\n| -sk| --specKey |  | 规范的唯一标识，可以在规范的"规范设置"中查看 |\n| -w | --overwrite | false | 是否覆盖已存在的文件，需要下载的文件不在此列，如果需要重新下载，请先将本地的文件删除 |\n| 无 | --specType | web | 要构建的规范类型，目前支持 web、aos、ios、test 四种类型 |\n| -s | --server | https://nei.netease.com | 数据源服务器 |\n\n使用范例：\n\n在当前目录下构建 key 为 xyz 的项目：\n\n```bash\nnei build -k xyz\n```\n\n规范也可以独立于项目生成脚手架文件, 在当前目录下构建 key 为 xyz 的规范：\n\n```bash\nnei build -sk xyz\n```\n\n>注意: 如果 k 和 sk 参数同时存在, 系统会优先考虑 sk 参数\n\n### update\n\n更新通过 `nei build` 构建的项目，指令的运行格式为：\n\n```bash\nnei update [参数]\n``` \n\n`nei update` 指令可用的参数包括：\n\n| 简写 | 全称 | 默认值 | 描述 |\n| :--- | :--- | :--- | :--- |\n| -h | --help  | | 显示 update 命令的帮助信息 |\n| -o | --output | ./ | 指定的项目目录 |\n| -k | --key |  | 需要更新的项目的唯一标识 |\n| -a | --all | false | 是否更新指定目录下面的所有项目，前提是没有指定的 key |\n| -w | --overwrite | false | 是否覆盖已存在的文件，需要下载的文件不在此列，如果需要重新下载，请先将本地的文件删除 |\n| 无 | --spec | false | 是否更新规范中的普通文件和文件夹，以数据填充的文件不在此列 |\n| -s | --server | https://nei.netease.com | 数据源服务器 |\n\n使用范例：\n\n更新当前目录下通过 `nei build` 生成的项目\n\n```bash\nnei update\n```\n\n>提示: 可以先在本地创建项目目录，然后在该目录下使用 `nei build` 和 `nei update` 命令，使用默认值即可.\n\n\n### server\n启动内置的本地模拟容器\n\n```bash\nnei server [参数]\n```\n\n`nei server` 指令可用的参数包括：\n\n| 简写 | 全称 | 默认值 | 描述 |\n| :--- | :--- | :--- | :--- |\n| -h | --help | | 显示 server 命令帮助信息 |\n| -o | --output | ./ | 已构建项目的输出路径 |\n| -k | --key |  | 需要启动的项目的唯一标识 |\n\n使用范例\n\n启动目录为 ./mypro 下的项目:\n\n```bash\nnei server -o ./mypro\n```\n\n> OS X 下如果有异常请使用 `sudo nei server` 命令启动\n\n\n### template\n使用本地数据解析模板。通过指定本地模板文件以及数据文件，能够将模板解析得到输出文件。目前支持的模板语言为[handlebars](http://handlebarsjs.com/)。\n\n```bash\nnei template [参数]\n```\n\n`nei template` 指令可用的参数包括:\n\n| 简写 | 全称 | 默认值 | 描述 |\n| :--- | :--- | :--- | :--- |\n| -h | --help | | 显示 template 命令帮助信息 |\n| -o | --output | ./ | 输出路径 |\n| -p | --path |  | 本地模板路径，必须指定 |\n| -d | --data |  | 数据json文件路径,可选 |\n| -b | --handlebars |  | 自定义handlebars辅助函数文件路径,可选 |\n| -w | --overwrite | false | 是否覆盖已存在的文件 |\n\n用户可以指定数据文件，如`data.json`的文件内容如下:\n```json\n{\n  "project":{\n    "name" : "test",\n    "version" : "0.0.1"\n  },\n  "author":{\n    "Netease"\n  }\n}\n```\n然后用户就可以在模板文件中访问到数据中的数据，如`{{project.name}}`就能够解析为`test`。用户同样可以指定本地handlebars辅助文件，如果用户有多个辅助函数，需要将这些都写到一个文件中，自定义辅助函数的写法与上文一致，参照[此链接](https://github.com/NEYouFan/nei-toolkit/blob/master/doc/Handlebars%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0%E9%9B%86.md#如何撰写自定义handlebars辅助函数)相同。 另外用户也可以不通过指定数据json文件来传入数据，可以通过命令行直接传入数据参数，如：\n```bash\nnei template -ProductName Test -Prefix HT [其他参数]\n```\nProductName和Prefix这两个参数就会作为数据传入到模板中，其等同于\n```json\n{\n  "args":{\n    "ProductName" : "Test",\n    "Prefix":  "HT"\n  }\n}\n```\n如果同时指定了数据文件，将会执行merge操作，其中命令行参数指定的方式优先于数据json文件方式。\n### 设置输出信息级别\n共设有"all"、"debug"、"info"、"warn"、"error"、"off"等日志级别，级别顺序由大到小，通过`--logLevel`指定一个级别之后，比该级别小的日志级别信息都将会显示出来，比如：\n```bash\nnei build -k xxxxxxxx --logLevel info\n```\n那么所有info以下级别(即warn、error)级别的信息都将会显示出来。当指定为off的时候，所有日志信息都将关闭。\n## 版本更新说明\n[更新说明](./CHANGELOG)\n\n## Licence\n[MIT](./LICENSE)\n\n## 感谢\n感谢[网易云](http://www.163yun.com/)提供的云服务, 目前 [NEI](https://nei.netease.com) 已经托管在网易云上。\n\n## 讨论组:\n\nNEI 用户交流 QQ 群(453281988):\n\n![QQ 群](./doc/res/nei_qq.jpeg)\n\n\n\n']
underthesea,Underthesea - Vietnamese NLP Toolkit,1108,https://github.com/undertheseanlp/underthesea,main,['<p align="center">\n  <br>\n  <img src="https://raw.githubusercontent.com/undertheseanlp/underthesea/main/img/logo.png"/>\n  <br/>\n</p>\n\n<p align="center">\n  <a href="https://pypi.python.org/pypi/underthesea">\n    <img src="https://img.shields.io/pypi/v/underthesea.svg">\n  </a>\n  <a href="https://pypi.python.org/pypi/underthesea">\n    <img src="https://img.shields.io/badge/python-3.7%20%7C%203.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-blue">\n  </a>\n  <a href="http://undertheseanlp.com/">\n    <img src="https://img.shields.io/badge/demo-live-brightgreen">\n  </a>\n  <a href="https://underthesea.readthedocs.io/en/latest/">\n    <img src="https://img.shields.io/badge/docs-live-brightgreen">\n  </a>\n  <a href="https://colab.research.google.com/drive/1gD8dSMSE_uNacW4qJ-NSnvRT85xo9ZY2">\n    <img src="https://img.shields.io/badge/latest-ff9f01?logo=google-colab&logoColor=white">\n  </a>\n  <a href="https://www.facebook.com/undertheseanlp/">\n    <img src="https://img.shields.io/badge/Facebook-1877F2?logo=facebook&logoColor=white">\n  </a>\n  <a href="https://www.youtube.com/channel/UC9Jv1Qg49uprg6SjkyAqs9A">\n    <img src="https://img.shields.io/badge/YouTube-FF0000?logo=youtube&logoColor=white">\n  </a>\n</p>\n\n<br/>\n\n<p align="center">\n  <a href="https://github.com/undertheseanlp/underthesea/blob/main/contribute/SPONSORS.md">\n    <img src="https://img.shields.io/badge/sponsors-6-red?style=social&logo=GithubSponsors">\n  </a>\n</p>\n\n<h3 align="center">\nOpen-source Vietnamese Natural Language Process Toolkit\n</h3>\n\n`Underthesea` is:\n\n🌊 **A Vietnamese NLP toolkit.** Underthesea is a suite of open source Python modules data sets and tutorials supporting research and development in [Vietnamese Natural Language Processing](https://github.com/undertheseanlp/underthesea). We provides extremely easy API to quickly apply pretrained NLP models to your Vietnamese text, such as word segmentation, part-of-speech tagging (PoS), named entity recognition (NER), text classification and dependency parsing.\n\n🌊 **An open-source software.** Underthesea is published under the [GNU General Public License v3.0](https://github.com/undertheseanlp/underthesea/blob/master/LICENSE) license. Permissions of this strong copyleft license are conditioned on making available complete source code of licensed works and modifications, which include larger works using a licensed work, under the same license.\n\n🎁 [**Support Us!**](#-support-us) Every bit of support helps us achieve our goals. Thank you so much. 💝💝💝\n\n## Installation\n\n\nTo install underthesea, simply:\n\n```bash\n$ pip install underthesea\n✨🍰✨\n```\n\nSatisfaction, guaranteed.\n\n## Tutorials\n\n* [1. Sentence Segmentation](#1-sentence-segmentation)\n* [2. Text Normalization](#2-text-normalization)\n* [3. Word Segmentation](#3-word-segmentation)\n* [4. POS Tagging](#4-pos-tagging)\n* [5. Chunking](#5-chunking)\n* [6. Dependency Parsing](#6-dependency-parsing)\n* [7. Named Entity Recognition](#7-named-entity-recognition)\n* [8. Text Classification](#8-text-classification)\n* [9. Sentiment Analysis](#9-sentiment-analysis)\n* [10. Say 🗣️](#10-say-%EF%B8%8F)\n* [11. Vietnamese NLP Resources](#11-vietnamese-nlp-resources)\n\n### 1. Sentence Segmentation\n\nUsage\n\n```python\n>>> from underthesea import sent_tokenize\n>>> text = \'Taylor cho biết lúc đầu cô cảm thấy ngại với cô bạn thân Amanda nhưng rồi mọi thứ trôi qua nhanh chóng. Amanda cũng thoải mái với mối quan hệ này.\'\n\n>>> sent_tokenize(text)\n[\n  "Taylor cho biết lúc đầu cô cảm thấy ngại với cô bạn thân Amanda nhưng rồi mọi thứ trôi qua nhanh chóng.",\n  "Amanda cũng thoải mái với mối quan hệ này."\n]\n```\n\n### 2. Text Normalization\n\nUsage\n\n```python\n>>> from underthesea import text_normalize\n>>> text_normalize("Ðảm baỏ chất lựơng phòng thí nghịêm hoá học")\n"Đảm bảo chất lượng phòng thí nghiệm hóa học"\n```\n\n### 3. Word Segmentation\n\nUsage\n\n```python\n>>> from underthesea import word_tokenize\n>>> text = "Chàng trai 9X Quảng Trị khởi nghiệp từ nấm sò"\n\n>>> word_tokenize(text)\n["Chàng trai", "9X", "Quảng Trị", "khởi nghiệp", "từ", "nấm", "sò"]\n\n>>> word_tokenize(sentence, format="text")\n"Chàng_trai 9X Quảng_Trị khởi_nghiệp từ nấm sò"\n\n>>> text = "Viện Nghiên Cứu chiến lược quốc gia về học máy"\n>>> fixed_words = ["Viện Nghiên Cứu", "học máy"]\n>>> word_tokenize(text, fixed_words=fixed_words)\n"Viện_Nghiên_Cứu chiến_lược quốc_gia về học_máy"\n```\n\n### 4. POS Tagging\n\nUsage\n\n```python\n>>> from underthesea import pos_tag\n>>> pos_tag(\'Chợ thịt chó nổi tiếng ở Sài Gòn bị truy quét\')\n[(\'Chợ\', \'N\'),\n (\'thịt\', \'N\'),\n (\'chó\', \'N\'),\n (\'nổi tiếng\', \'A\'),\n (\'ở\', \'E\'),\n (\'Sài Gòn\', \'Np\'),\n (\'bị\', \'V\'),\n (\'truy quét\', \'V\')]\n```\n\n\n### 5. Chunking\n\nUsage\n\n```python\n>>> from underthesea import chunk\n>>> text = \'Bác sĩ bây giờ có thể thản nhiên báo tin bệnh nhân bị ung thư?\'\n>>> chunk(text)\n[(\'Bác sĩ\', \'N\', \'B-NP\'),\n (\'bây giờ\', \'P\', \'B-NP\'),\n (\'có thể\', \'R\', \'O\'),\n (\'thản nhiên\', \'A\', \'B-AP\'),\n (\'báo\', \'V\', \'B-VP\'),\n (\'tin\', \'N\', \'B-NP\'),\n (\'bệnh nhân\', \'N\', \'B-NP\'),\n (\'bị\', \'V\', \'B-VP\'),\n (\'ung thư\', \'N\', \'B-NP\'),\n (\'?\', \'CH\', \'O\')]\n```\n\n\n### 6. Dependency Parsing\n\nInstall dependencies for deep learning\n\n```bash\n$ pip install underthesea[deep]\n```\n\nUsage\n\n```python\n>>> from underthesea import dependency_parse\n>>> text = \'Tối 29/11, Việt Nam thêm 2 ca mắc Covid-19\'\n>>> dependency_parse(text)\n[(\'Tối\', 5, \'obl:tmod\'),\n (\'29/11\', 1, \'flat:date\'),\n (\',\', 1, \'punct\'),\n (\'Việt Nam\', 5, \'nsubj\'),\n (\'thêm\', 0, \'root\'),\n (\'2\', 7, \'nummod\'),\n (\'ca\', 5, \'obj\'),\n (\'mắc\', 7, \'nmod\'),\n (\'Covid-19\', 8, \'nummod\')]\n```\n\n### 7. Named Entity Recognition\n\nUsage\n\n```python\n>>> from underthesea import ner\n>>> text = \'Chưa tiết lộ lịch trình tới Việt Nam của Tổng thống Mỹ Donald Trump\'\n>>> ner(text)\n[(\'Chưa\', \'R\', \'O\', \'O\'),\n (\'tiết lộ\', \'V\', \'B-VP\', \'O\'),\n (\'lịch trình\', \'V\', \'B-VP\', \'O\'),\n (\'tới\', \'E\', \'B-PP\', \'O\'),\n (\'Việt Nam\', \'Np\', \'B-NP\', \'B-LOC\'),\n (\'của\', \'E\', \'B-PP\', \'O\'),\n (\'Tổng thống\', \'N\', \'B-NP\', \'O\'),\n (\'Mỹ\', \'Np\', \'B-NP\', \'B-LOC\'),\n (\'Donald\', \'Np\', \'B-NP\', \'B-PER\'),\n (\'Trump\', \'Np\', \'B-NP\', \'I-PER\')]\n```\n\nWith Deep Learning\n\n```bash\n$ pip install underthesea[deep]\n```\n\n```python\n>>> from underthesea import ner\n>>> text = "Bộ Công Thương xóa một tổng cục, giảm nhiều đầu mối"\n>>> ner(text, deep=True)\n[\n  {\'entity\': \'B-ORG\', \'word\': \'Bộ\'},\n  {\'entity\': \'I-ORG\', \'word\': \'Công\'},\n  {\'entity\': \'I-ORG\', \'word\': \'Thương\'}\n]\n```\n\n### 8. Text Classification\n\nUsage\n\n```python\n>>> from underthesea import classify\n\n>>> classify(\'HLV đầu tiên ở Premier League bị sa thải sau 4 vòng đấu\')\n[\'The thao\']\n\n>>> classify(\'Hội đồng tư vấn kinh doanh Asean vinh danh giải thưởng quốc tế\')\n[\'Kinh doanh\']\n\n>> classify(\'Lãi suất từ BIDV rất ưu đãi\', domain=\'bank\')\n[\'INTEREST_RATE\']\n```\n\n### 9. Sentiment Analysis\n\nUsage\n\n```python\n>>> from underthesea import sentiment\n\n>>> sentiment(\'hàng kém chất lg,chăn đắp lên dính lông lá khắp người. thất vọng\')\n\'negative\'\n>>> sentiment(\'Sản phẩm hơi nhỏ so với tưởng tượng nhưng chất lượng tốt, đóng gói cẩn thận.\')\n\'positive\'\n\n>>> sentiment(\'Đky qua đường link ở bài viết này từ thứ 6 mà giờ chưa thấy ai lhe hết\', domain=\'bank\')\n[\'CUSTOMER_SUPPORT#negative\']\n>>> sentiment(\'Xem lại vẫn thấy xúc động và tự hào về BIDV của mình\', domain=\'bank\')\n[\'TRADEMARK#positive\']\n```\n\n### 10. Say 🗣️\n\nText to Speech API. Thanks to awesome work from [NTT123/vietTTS](https://github.com/ntt123/vietTTS)\n\nInstall extend dependencies and models\n\n```bash\n$ pip install underthesea[wow]\n$ underthesea download-model VIET_TTS_V0_4_1\n```\n\nUsage examples in script\n\n```python\n>>> from underthesea.pipeline.say import say\n\n>>> say("Cựu binh Mỹ trả nhật ký nhẹ lòng khi thấy cuộc sống hòa bình tại Việt Nam")\nA new audio file named `sound.wav` will be generated.\n```\n\nUsage examples in command line\n\n```sh\n$ underthesea say "Cựu binh Mỹ trả nhật ký nhẹ lòng khi thấy cuộc sống hòa bình tại Việt Nam"\n```\n\n### 11. Vietnamese NLP Resources\n\nList resources\n\n```bash\n$ underthesea list-data\n| Name                      | Type        | License | Year | Directory                          |\n|---------------------------+-------------+---------+------+------------------------------------|\n| CP_Vietnamese_VLC_v2_2022 | Plaintext   | Open    | 2023 | datasets/CP_Vietnamese_VLC_v2_2022 |\n| UIT_ABSA_RESTAURANT       | Sentiment   | Open    | 2021 | datasets/UIT_ABSA_RESTAURANT       |\n| UIT_ABSA_HOTEL            | Sentiment   | Open    | 2021 | datasets/UIT_ABSA_HOTEL            |\n| SE_Vietnamese-UBS         | Sentiment   | Open    | 2020 | datasets/SE_Vietnamese-UBS         |\n| CP_Vietnamese-UNC         | Plaintext   | Open    | 2020 | datasets/CP_Vietnamese-UNC         |\n| DI_Vietnamese-UVD         | Dictionary  | Open    | 2020 | datasets/DI_Vietnamese-UVD         |\n| UTS2017-BANK              | Categorized | Open    | 2017 | datasets/UTS2017-BANK              |\n| VNTQ_SMALL                | Plaintext   | Open    | 2012 | datasets/LTA                       |\n| VNTQ_BIG                  | Plaintext   | Open    | 2012 | datasets/LTA                       |\n| VNESES                    | Plaintext   | Open    | 2012 | datasets/LTA                       |\n| VNTC                      | Categorized | Open    | 2007 | datasets/VNTC                      |\n\n$ underthesea list-data --all\n```\n\nDownload resources\n\n```bash\n$ underthesea download-data CP_Vietnamese_VLC_v2_2022\nResource CP_Vietnamese_VLC_v2_2022 is downloaded in ~/.underthesea/datasets/CP_Vietnamese_VLC_v2_2022 folder\n```\n\n### Up Coming Features\n\n* Automatic Speech Recognition\n* Machine Translation\n* Chatbot (Chat & Speak)\n\n## Contributing\n\nDo you want to contribute with underthesea development? Great! Please read more details at [CONTRIBUTING.rst](https://github.com/undertheseanlp/underthesea/blob/main/contribute/CONTRIBUTING.rst)\n\n## 💝 Support Us\n\nIf you found this project helpful and would like to support our work, you can just buy us a coffee ☕.\n\nYour support is our biggest encouragement 🎁!\n\n\n<img src="https://raw.githubusercontent.com/undertheseanlp/underthesea/main/img/support.png"/>\n']
PotatofieldImageToolkit,一个适用于摄影从业者/爱好者、设计师等创意行业从业者的图像工具箱。,691,https://github.com/CNOliverZhang/PotatofieldImageToolkit,master,["# 洋芋田图像工具箱\n\n> 一个适用于摄影从业者/爱好者、设计师等创意行业从业者的图像工具箱。\n\n软件目前有如下工具：\n\n- 图片加水印工具\n- 全屏水印工具\n- 长图拼接工具\n- 图片裁剪工具\n- 图片分割工具\n- 富文本制图工具\n- 尺寸调整工具\n- 图片压缩工具\n- 格式转换工具\n- EXIF读取工具\n- 色彩提取工具\n- 字体管理工具\n\n同时，软件具有自动更新功能，每次在软件启动时都会自动检查更新并询问用户是否更新；此外，用户也可以在“设置”页面主动检查更新。\n\n## 使用发行版或自行编译\n\n目前仅提供 Windows 和 Mac OS 的发行版。如果您是海外用户，可以[点此下载](https://github.com/CNOliverZhang/PotatofieldImageToolkit/releases/latest)；如果您是国内用户，请[点此下载](https://www.potatofield.cn/imagetoolkit)。使用Linux的用户可以自行构建,自行构建需安装Node.js，克隆源码后在项目目录中执行：\n\n```javascript\nnpm install\nnpm run build\n```\n\n## 详细介绍\n\n您可以[访问网站](https://www.potatofield.cn/imagetoolkit)了解图文详情。\n\n### 图片加水印工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/watermark.png)\n\n能够为单张图片添加水印，也可以手动为多张图片依次添加水印，还可以设置好水印参数后自动批量添加水印。可以自行设置水印内容、颜色、字体、大小、角度和位置，几乎一切都可以随心自定义。支持全屏水印。\n\n添加水印后导出的图片所见即所得，且处理迅速。在主流配置的轻薄本实测，由Sony A7R3拍摄的四千万像素的照片，每张处理时间大约1秒；尺寸较小的图片，每张处理时间普遍在0.5秒以内。\n\n支持将各项水印参数保存为模板，以供下次直接使用；也可以直接通过模板编辑器新建模板和修改模板。已保存的模板可以导出为一串模板码并复制到剪贴板，也能从剪贴板重新将模板码还原成模板保存；通过将模板码与人分享，可以将精心制作的模板共享给他人。\n\n### 长图拼接工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/splicer.png)\n\n将多张图片拼合为一张长图，可以自定义内外边框的宽度、颜色和图片圆角。最大支持输出高度为16000像素的图片（更长的图片将会被压缩），基本能满足绝大多数人都需求，保证拼接后每张图片的清晰。同样可以将边框的各项参数保存为模板以及新建或编辑模板，也同样支持导入导出模板码的操作。\n\n### 图片裁剪工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/cropper.png)\n\n可以采用自由模式裁剪，可以采用预置的多种常用比例裁剪，也可以自定义比例裁剪。支持批量导入图片，在工作流程中能够维持裁剪设置和保存设置不变，提升效率。\n\n### 图片分割工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/slicer.png)\n\n将一张图片按行和列切割成多张小图，支持自定义行数和列数。可以优先确保每张小图为正方形并舍弃图片多余部分，也可以优先确保整张图片都被分割。支持批量分割图片。\n\n### 富文本制图工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/textToImage.png)\n\n利用内置的富文本编辑器创作文章或从其他编辑器（如Microsoft Word等）粘贴文章，之后自定义样式并输出成图片，对于需要在社交媒体（朋友圈、微博等）发布富文本内容的用户较为实用。\n\n支持一级标题、二级标题、文本、粗体、斜体、、有序列表、无序列表、图片和段落引用，支持自定义每一类富文本内容的字体、字体大小、字体颜色、行距、外边距、对齐方式等各项内容，也支持全文背景和页面边距的自定义。\n\n同样提供对于模板的完整支持（将参数保存为模板、新建模板、修改模板、导入导出模板等）。\n\n### 尺寸调整工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/resizer.png)\n\n将图片按照统一长边长度、统一宽边长度或统一缩放百分比的方式进行批量尺寸调整。同样具有良好的性能和稳定性，短时间内可以处理大量图片，也可以处理大尺寸图片。\n\n### 图片压缩工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/compress.png)\n\n对常用格式的图片文件进行压缩，减小文件体积。支持自定义输出质量。\n\n### 格式转换工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/convert.png)\n\n将图片文件转换为其他格式，支持 JPEG 文件和 PNG 文件以及 WEBP 文件之间的相互转化。\n\n### EXIF读取工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/exif.png)\n\n从 JPEG 文件中读取 EXIF 信息，支持相机制造商、型号等设备信息和曝光补偿、镜头焦距、光圈、快门、感光度等曝光参数以及作者、图像尺寸等图像文件信息。\n\n### 色彩提取工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/palette.png)\n\n从照片中提取色彩，可以获得最能代表照片的主题色以及由十种能代表照片基本色调的颜色组成的色板。支持将色板导出为图片，也可以将色板拼接在原图片下方导出。\n\n### 字体管理工具\n\n![预览图](https://files.potatofield.cn/ImageToolkit/Tools/Images/fonts.png)\n\n管理本地（软件中）的字体，以及从在线字体库中下载字体。也可以更改本软件的界面字体，获得更加个性化的使用体验。\n\n通过软件下载的字体可以在本软件的其他工具中使用，也可以通过浏览器下载字体安装到系统中。在线字体库的字体全部经过筛选，确保是商用免费字体，不会产生版权纠纷。\n\n### 全部模板导入导出\n\n除了部分工具支持将模板导入导出为模板码用于保存和分享外，还可以将所有工具的模板导出为备份文件以供备份和恢复。\n\n## 相关开源项目\n\n[Electron](https://github.com/electron/electron)\n\n[electron-promise-ipc](https://github.com/sibnerian/electron-promise-ipc)\n\n[electron-buider](https://github.com/electron-userland/electron-builder)\n\n[Vue.js](https://github.com/vuejs/vue)\n\n[Vue Router](https://github.com/vuejs/vue-router)\n\n[Vuex](https://github.com/vuejs/vuex)\n\n[Vuex Electron](https://github.com/vue-electron/vuex-electron)\n\n[Element UI](https://github.com/ElemeFE/element)\n\n[Font Awesome](https://github.com/FortAwesome/Font-Awesome)\n\n[html2canvas](https://github.com/niklasvh/html2canvas)\n\n[CKEditor 5](https://github.com/ckeditor/ckeditor5)\n\n[EXIF.js](https://github.com/exif-js/exif-js)\n\n[Cropper.js](https://github.com/fengyuanchen/cropperjs')\n\n[Color Thief](https://github.com/lokesh/color-thief)\n\n[Crypto-JS](https://github.com/brix/crypto-js)\n\n[sharp](https://github.com/lovell/sharp)\n"]
AppToolkit,🐘 The Front-end Env Toolkit（前端环境管理工具）,487,https://github.com/apptools-lab/AppToolkit,main,['<p align="center">\n  <a href="https://appworks.site">\n \xa0 \xa0<img alt="AppWorks" src="https://img.alicdn.com/imgextra/i4/O1CN01jLRijt1SPxrlCRSEJ_!!6000000002240-2-tps-258-258.png" width="96">\n  </a>\n</p>\n\n<p align="center">\n  <a href="https://github.com/appworks-lab/toolkit/actions"><img src="https://github.com/appworks-lab/toolkit/workflows/ci/badge.svg" /></a>\n  <a href="https://github.com/appworks-lab/toolkit/pulls"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome" /></a>\n  <a href="/LICENSE"><img src="https://img.shields.io/badge/license-MIT-blue.svg" alt="GitHub license" /></a>\n</p>\n\n# AppToolkit\n\n> 一款帮助开发者更轻松的管理前端开发软件，更快速配置前端环境的前端研发工具箱。\n\n![工具箱](https://img.alicdn.com/imgextra/i2/O1CN01Umxovx1IZRvymJDxS_!!6000000000907-2-tps-1720-1200.png_790x10000.jpg)\n\n## 特性\n\n- **一键安装前端开发工具**：包括但不限于：桌面客户端、编辑器插件、浏览器插件、命令行工具等\n- **可视化管理前端开发工具**：覆盖工具查找、安装、升级、卸载完整的软件生命周期管理\n- **可视化配置前端开发环境**：包括但不限于：Node 配置、Git 配置、npm 配置等\n\n## 安装\n\nmac 版本：[下载地址](https://iceworks.oss-cn-hangzhou.aliyuncs.com/toolkit/mac/AppToolkit.dmg)\n\n## 使用说明\n### 一键安装前端开发必备工具\n\n在首页中点击『一键安装』，选择需要安装的软件，点击『确认』按钮，等待片刻后完成软件的安装。\n\n![](https://img.alicdn.com/imgextra/i4/O1CN014CbjH31Pgxjs8gdf2_!!6000000001871-2-tps-1720-1200.png_790x10000.jpg)\n\n### Node 管理\n\n#### 切换 Node.js 版本\n在 『Node 管理』页面中点击『切换版本』，选择 Node.js 版本后，点击『下一步』开始 Node.js 安装：\n\n![切换 Node.js 版本](https://img.alicdn.com/imgextra/i4/O1CN01djv0X01uptYWsLPiI_!!6000000006087-2-tps-1720-1200.png_790x10000.jpg)\n\n目前 Node.js 版本切换依赖 `nvm`，切换版本后，之前安装全局命令模块需要重新安装，非常不方便。在 AppToolkit 中可一键配置统一的全局模块安装路径到 `~/npm-global`：\n\n![](https://img.alicdn.com/imgextra/i1/O1CN01SbwNVu1Xl6FGL4IAz_!!6000000002963-2-tps-2000-1262.png_790x10000.jpg)\n![](https://img.alicdn.com/imgextra/i1/O1CN012NP1sk1flZZtnKpMJ_!!6000000004047-2-tps-2000-1262.png_790x10000.jpg)\n#### 管理全局 npm 镜像源\nAppToolkit 提供一键切换全局 npm 镜像源功能：\n\n![](https://img.alicdn.com/imgextra/i3/O1CN01vnEXYh1gEQX8dTLCk_!!6000000004110-2-tps-2196-766.png_790x10000.jpg)\n\n#### 管理全局依赖\nToolkit 提供全局 npm 依赖的可视化管理，支持查看、安装、重装、升级和卸载全局依赖。\n\n![](https://img.alicdn.com/imgextra/i3/O1CN01gaFkf91FnF0sAMW72_!!6000000000531-2-tps-1720-1200.png_790x10000.jpg)\n### Git\n\n#### 全局 Git 配置\n目前提供常见的配置项：『用户名』、『邮箱』和『忽略文件名大小写』，后续可根据实际的需要，增加更多的 [Git 配置](https://git-scm.com/docs/git-config#_values)。\n\n![](https://img.alicdn.com/imgextra/i2/O1CN0185zyxj1H93UlCxhfC_!!6000000000714-2-tps-1716-640.png_790x10000.jpg)\n\n#### 用户 Git 配置\n\n当有多个 Git 用户账号时，比如：\n\n- 一个 Github 账号，用于自己进行一些开发；\n- 一个 GitLab 账号，用户公司内部的工作开发；\n\n这时就需要在本地配置多份 Git 配置和 SSH 密钥了。Toolkit 为了减少用户的配置成本，支持可视化管理不同用户账号的 Git 配置。\n\n![添加 Git 配置](https://img.alicdn.com/imgextra/i3/O1CN01KWwkIp27lr4GBdk02_!!6000000007838-2-tps-1720-1200.png_790x10000.jpg)\n\n其中，部分字段的说明如下：\n\n- 配置名称：建议填写 Git 服务器的名称，比如 Github、GitLab\n- Git 服务器域名：可以使不同的 Git 仓库使用对应的 SSH Key。以放在 Github 的 [appworks-lab/Toolkit](https://github.com/appworks-lab/toolkit) 仓库为例，`github.com` 就是 Github 服务器域名了（PS：填写域名时不需要带 `https://`）。在提交代码时，就会自动使用刚才生成好的 Github SSH 密钥了\n\n#### 使用不同的 Git 配置\n\nToolkit 支持每份 Git 配置中添加一个或多个目录，这些目录下的 Git 仓库都会使用这份 Git 配置。实现原理可参考 [Git 文档](https://git-scm.com/docs/git-config#_conditional_includes)。\n\n![添加目录](https://img.alicdn.com/imgextra/i4/O1CN011P0UqD1HBLTWmciEc_!!6000000000719-2-tps-1720-1200.png_790x10000.jpg)\n\n#### 添加 SSH 公钥\n1. 首先在 Git 管理页面中复制 SSH 公钥\n\n![复制 SSH 公钥](https://img.alicdn.com/imgextra/i3/O1CN0141QTXP1glrRfXkPrW_!!6000000004183-2-tps-1720-1200.png_790x10000.jpg)\n\n2. 以 Github 举例，依次点击 Setting -> SSH and GPG keys -> New SSH Key，把刚才的复制的 SSH 公钥添加到 Github 中\n\n![Github SSH 添加公钥](https://img.alicdn.com/imgextra/i4/O1CN016EZv101pyWw57wlaT_!!6000000005429-2-tps-2842-1480.png_790x10000.jpg)\n![Github SSH 添加公钥](https://img.alicdn.com/imgextra/i2/O1CN010vdSYs21lxS4q558W_!!6000000007026-2-tps-2136-1088.png_790x10000.jpg)\n\n3. SSH 公钥添加完成以后，就可以使用 SSH 协议操作 Git 仓库了\n\n### 桌面客户端管理\n\nAppToolkit 提供常用的前端开发软件的安装、卸载等功能，减少查找软件的时间。\n\n![](https://img.alicdn.com/imgextra/i2/O1CN01tWYoMw1HcMqHn1ZMt_!!6000000000778-2-tps-1720-1200.png_790x10000.jpg)\n\n### 浏览器插件管理\n\nAppToolkit 提供推荐的浏览器插件列表，方便用户快速找到好用的插件。由于 AppToolkit 无法直接安装插件，需要用户在浏览器的插件市场安装。假如无法访问浏览器的插件市场，AppToolkit 会下载插件安装包到本地，需要用户在浏览器插件管理页面中自行安装。\n\n![](https://img.alicdn.com/imgextra/i4/O1CN01uAyGsU1RM0rA84TgK_!!6000000002096-2-tps-1720-1200.png_790x10000.jpg)\n\n## 贡献代码\n\n贡献代码请参考 [CONTRIBUTING.md](./.github/contributing.md)\n\n## License\n\n[MIT](LICENSE)\n']
rocksmith-custom-song-toolkit,Custom song toolkit for Rocksmith and Rocksmith 2014,323,https://github.com/rscustom/rocksmith-custom-song-toolkit,master,['[![Build status](https://ci.appveyor.com/api/projects/status/olxik31du2rhd8dn/branch/master?svg=true)](https://ci.appveyor.com/project/rscustom/rocksmith-custom-song-toolkit/branch/master)\n']
heyui,🎉UI Toolkit for Web, Vue3.0,2508,https://github.com/heyui/heyui,master,['<p align="center">\n  <img height="100"  width="100" src="https://www.heyui.top/static/images/logo.png"/>\n</p>\n\n# HeyUI\n\n![npm (tag)](https://img.shields.io/npm/v/heyui/next)\n![npm bundle size](https://img.shields.io/bundlephobia/minzip/heyui)\n![npm](https://img.shields.io/npm/dm/heyui)\n![NPM](https://img.shields.io/npm/l/heyui)\n\n> An UI components library.\n\n## Components\n\n<img src="https://v2.heyui.top/images/mindmap.png" style="max-width: 700px"/>\n\n## Documentation\n\nvisit [heyui.top](http://v2.heyui.top).\n\n## Install\n\n```js\nnpm install heyui@next --save\n```\n\n## Start\n\n### Basic\n\n```html\n\n<script src="https://cdn.jsdelivr.net/npm/vue@next"></script>\n<script src="https://cdn.jsdelivr.net/npm/heyui@next"></script>\n<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/heyui@next/themes/index.css"></link>\n\n```\n### Advanced\n\n```js\nimport { createApp } from \'vue\';\nimport heyui from \'heyui\';\nrequire(\'heyui/themes/index.less\');\n\napp.use(heyui);\napp.mount(\'#app\');\n```\n\n## Development\n\n```sh\n\nnpm install\n\n# build\nnpm run build\n\n```\n\n## Admin Template\n\n[HeyUI Admin Template](http://admin.heyui.top)\n\n## Browser Support\n\nModern browsers and Internet Explorer 11+.\n\n## LICENSE\n\n[MIT](https://opensource.org/licenses/MIT)\n\nCopyright (c) 2017-present, Lan\n']
Kino.Toolkit.Wpf,Kino Toolkit For Wpf,264,https://github.com/DinoChan/Kino.Toolkit.Wpf,master,['# Kino.Toolkit.Wpf\n\n[![dotnet-version](https://img.shields.io/badge/.net-%3E%3D4.5-blue.svg?style=flat-square)](https://dotnet.microsoft.com/) [![nuget-version](https://img.shields.io/nuget/v/Kino.Toolkit.Wpf.svg?style=flat-square)](https://www.nuget.org/packages/Kino.Toolkit.Wpf/) [![MIT License](https://img.shields.io/badge/license-MIT-green.svg?style=flat-square)](https://github.com/DinoChan/Kino.Toolkit.Wpf/blob/master/LICENSE) [![IDE-version](https://img.shields.io/badge/IDE-vs2017-purple.svg?style=flat-square)](https://visualstudio.microsoft.com/) [![IDE-version](https://img.shields.io/badge/IDE-vs2019-purple.svg?style=flat-square)](https://visualstudio.microsoft.com/)\n\n\n![](https://raw.githubusercontent.com/DinoChan/Kino.Toolkit.Wpf/master/demo.png)\n\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/DinoChan/Kino.Toolkit.Wpf.svg)](https://starchart.cc/DinoChan/Kino.Toolkit.Wpf)\n      \n\nKino.Toolkit.Wpf是一组简单实用的WPF控件与工具，用于介绍自定义控件的入门。相关博客地址如下：\n\n\n[开始一个自定义控件库项目](https://www.cnblogs.com/dino623/p/CustomControLibrary.html)\n\n介绍开始一个自定义控件库项目需要考虑的地方，包括版本号、目录结构等。\n\n[从ContentControl开始入门自定义控件](https://www.cnblogs.com/dino623/p/How-To-Create-CustomControl.html)\n\nContentControl是WPF中最基础的一种控件，Window、Button、ScrollViewer、Label、ListBoxItem等都继承自ContentControl。而且ContentControl的结构十分简单，很适合用来入门自定义控件。\n\n这篇文章通过自定义一个ContentControl来介绍自定义控件的一些基础概念，包括自定义控件的基本步骤及其组成。\n\n[了解如何自定义ItemsControl](https://www.cnblogs.com/dino623/p/Custom-ItemsControl.html)\n\nWPF提供了一大堆ItemsControl的派生类：HeaderedItemsControl、TreeView、Menu、StatusBar、ListBox、ListView、ComboBox；而且配合Style或DataTemplate足以完成大部分的定制化工作。可以说ItemsControl是XAML系统灵活性的最佳代表。这篇文章介绍简单的自定义ItemsControl知识，通过重写GetContainerForItemOverride和IsItemItsOwnContainerOverride、PrepareContainerForItemOverride函数并使用ItemContainerGenerator等自定义一个简单的IItemsControl控件。\n\n[自定义控件的代码如何与ControlTemplate交互](https://www.cnblogs.com/dino623/p/interact_with_ControlTemplate.html)\n\n介绍自定义控件的代码如何和ControlTemplate交互，涉及的知识包括RelativeSource、Trigger、TemplatePart和VisualState，以及它们之间的选择。\n\n\n[以Button为例谈谈如何模仿Aero2主题](https://www.cnblogs.com/dino623/p/Aero2Theme.html)\n\nWPF控件库通常都会提供“素颜”的外观，这样做的最大好处是可以和原生控件或其它控件库兼容。这篇文章以Button为例，谈谈现在最常用的Aero2主题的设计元素，以及尺寸、颜色、字体、动画等细节。\n\n[简单的表单布局控件](https://www.cnblogs.com/dino623/p/WPF-Form-Layout.html)\n\nForm是一个轻量的表单布局控件，同时也是一个很好的结合了ItemsControl、ContentControl、附加属性的教学例子。\n\n\n[让Form在加载后自动获得焦点](https://www.cnblogs.com/dino623/p/AutoFocus.html)\n\n为了让Form可以在加载后自动获得焦点，我创建了一个叫FocusService的工具类，这篇文章介绍这个类的使用及原理，以及补充一些WPF焦点的知识。\n\n[为Form和自定义Window添加FunctionBar](https://www.cnblogs.com/dino623/p/FunctionBar.html)\n\n这篇文章介绍了另一种ItemsControl的实现方式，并使用它为Form及自定义Window添加常用的按钮及其它功能。\n\n\n\n[Window(窗体)的UI元素及行为](https://www.cnblogs.com/dino623/p/uielements_of_window.html)\n\n这篇文章主要讨论标准Window的UI元素和行为。无论是桌面编程还是日常使用，Window(窗体)都是最常接触的UI元素之一，既然Window这么重要那么多了解一些也没有坏处。\n\n[使用WindowChrome自定义Window Style](https://www.cnblogs.com/dino623/p/custom_window_style_using_WindowChrome.html)\n\n介绍使用WindowChrome自定义Window的原理及各种细节。\n\n[使用WindowChrome的问题](https://www.cnblogs.com/dino623/p/problems_of_WindowChrome.html)\n\n使用WindowChrome自定义Window会遇到很多问题，例如最大化的尺寸问题，这篇文章介绍如何处理这些细节。\n\n[使用WindowChrome自定义RibbonWindow](https://www.cnblogs.com/dino623/p/custom_ribbonwindow_using_WindowChrome.html)\n\n因为WPF原生的RibbonWindow有不少UI上的Bug，所以我提供了一个自定义的RibbonWindow以解决这些问题。\n\n\n\n[排序、筛选以及高亮](https://www.cnblogs.com/dino623/p/sort_filter_highlight.html)\n\n介绍WPF怎么做筛选及排序，以及使用自定义的附加属性实现文本高亮。\n\n\n\n[使用TypeConverter强化文本高亮的功能](https://www.cnblogs.com/dino623/p/TextBlockHighlightSource.html)\n\n这篇文章介绍了使用TypeConverter简化调用，以及继承自FrameworkElement以便使用Style。\n\n[好用的VisualTreeExtensions](https://www.cnblogs.com/dino623/p/VisualTreeExtensions.html)\n\nVisualTreeExtensions封装了`VisualTreeHelper`并提供了各种查询Visual Tree的方法，这篇文档介绍了这个工具类大致的内容，以及使用上要注意的地方。\n\n[了解WPF的布局过程，并利用Measure为Expander添加动画](https://www.cnblogs.com/dino623/p/Resizer.html)\n\n这篇文章介绍WPF UI元素的两步布局过程，并且通过Resizer控件介绍只使用Measure可以实现些什么内容。\n\n\n\n[自定义Expander](https://www.cnblogs.com/dino623/p/Custom_Expander.html)\n\n继续Measure的话题，这次真的创建了个自定义的Expander。\n\n\n\n\n[给WPF一个HyperlinkButton](https://www.cnblogs.com/dino623/p/WPF_HyperlinkButton.html)\n\n这篇文章的目的是介绍怎么在WPF里创建自定义的HyperlinkButton控件。\n\n\n\n[关于ScrollViewr和滚动轮劫持(scroll-wheel-hijack)](https://www.cnblogs.com/dino623/p/scroll-wheel-hijack.html)\n\n这篇文章介绍了如何自定义ScrollViewer以避免滚动轮劫持的问题。\n\n\n[模仿UWP的ProgressRing](https://www.cnblogs.com/dino623/p/create_a_ProgressRing_for_wpf.html)\n\n这篇文章介绍如何在WPF中模仿UWP的ProgressRing。\n\n[创建包含CheckBox的ListBoxItem](https://www.cnblogs.com/dino623/p/Create_ListBoxIte_with_a_CheckBox.html)\n\n介绍如何为ListBox和DataGrid添加用于选中项目的CheckBox。\n\n[在MenuItem上使用RadioButton](https://www.cnblogs.com/dino623/p/Uising_RadioButton_in_MenuItem.html)\n\n这篇文章将介绍如何自定义一个RadioButtonMenuItem控件实现MenuItem的单选功能。\n\n\n[自定义一个“传统”的 Validation.ErrorTemplate](https://www.cnblogs.com/dino623/p/Validation_ErrorTemplate.html)\n\n这篇文章介绍如何自定义一个模仿 Silverlight 的 Validation.ErrorTemplate，以便可以展示详细的错误信息。\n']
hangul-toolkit,한글 자모 분리/조합 작업을 위한 툴킷,268,https://github.com/bluedisk/hangul-toolkit,main,["Simple Toolkit for Hangul\n=========================\nbase code forked from https://github.com/rhobot/Hangulpy\n\n한글 자모 분해, 조합(오토마타), 조사 붙이기, 초/중/종 분해조합, 한글/한자/영문 여부 체크 등을 지원합니다.\n\n## INSTALL\n```\npip install hgtk\n```\n\n## Samples\n### Letter\n#### Decompose character\n```python\n>>> hgtk.letter.decompose('감')\n('ㄱ', 'ㅏ', 'ㅁ')\n```\n#### Compose character\n```python\n>>> hgtk.letter.compose('ㄱ', 'ㅏ', 'ㅁ')\n'감'\n```\n\n### Text\n#### Decompose text\n```python\n>>> hgtk.text.decompose('학교종이 땡땡땡! hello world 1234567890 ㅋㅋ!')\n'ㅎㅏㄱᴥㄱㅛᴥㅈㅗㅇᴥㅇㅣᴥ ㄸㅐㅇᴥㄸㅐㅇᴥㄸㅐㅇᴥ! hello world 1234567890 ㅋᴥㅋᴥ!'\n```\n\n기본 조합 완료 기호는 ᴥ이고, 아래와 같이 compose_code 옵션으로 변경 가능합니다.\n```python\n>>> hgtk.text.decompose('학교종이 땡땡땡! hello world 1234567890 ㅋㅋ!', compose_code='/')\n'ㅎㅏㄱ/ㄱㅛ/ㅈㅗㅇ/ㅇㅣ/ㄸㅐㅇ/ㄸㅐㅇ/ㄸㅐㅇ/! hello world 1234567890 ㅋ/ㅋ/!'\n```\n기본 조합기호의 의미는 곰돌이 입니다. 👇  \n<img src='https://user-images.githubusercontent.com/3307964/136328328-a5dea3b0-4731-48a5-881a-fae9b2c83dba.png' width=300/>\n\n#### Compose text (Automata)\n```python\n>>> hgtk.text.compose('ㅎㅏㄱᴥㄱㅛᴥㅈㅗㅇᴥㅇㅣᴥ ㄸㅐㅇᴥㄸㅐㅇᴥㄸㅐㅇᴥ! hello world 1234567890 ㅋᴥㅋᴥ!')\n'학교종이 땡땡땡! hello world 1234567890 ㅋㅋ!'\n```\n\n### Checker\n\n#### is hangul text\n```python\n>>> hgtk.checker.is_hangul('한글입니다')\nTrue\n>>> hgtk.checker.is_hangul('no한글입니다')\nFalse\n>>> hgtk.checker.is_hangul('it is english')\nFalse\n```\n\n#### is hanja text\n```python\n>>> hgtk.checker.is_hanja('大韓民國')\nTrue\n>>> hgtk.checker.is_hanja('大한민국')\nFalse\n>>> hgtk.checker.is_hanja('대한민국')\nFalse\n```\n\n#### is latin1 text\n```python\n>>> hgtk.checker.is_latin1('abcdefghijklmnopqrstuvwxyz')\nTrue\n>>> hgtk.checker.is_latin1('한글latin1한')\nFalse\n````\n\n#### has batchim\n```python\n>>> hgtk.checker.has_batchim('한')   # '한' has batchim 'ㄴ'\nTrue\n>>> hgtk.checker.has_batchim('하')\nFalse\n```\n\n\n### Josa\n#### EUN_NEUN - 은/는\n```python\n>>> hgtk.josa.attach('하늘', hgtk.josa.EUN_NEUN)\n'하늘은'\n>>> hgtk.josa.attach('바다', hgtk.josa.EUN_NEUN)\n'바다는'\n```\n#### I_GA - 이/가\n```python\n>>> hgtk.josa.attach('하늘', hgtk.josa.I_GA)\n'하늘이'\n>>> hgtk.josa.attach('바다', hgtk.josa.I_GA)\n'바다가'\n```\n#### EUL_REUL - 을/를 \n```python\n>>> hgtk.josa.attach('하늘', hgtk.josa.EUL_REUL)\n'하늘을'\n>>> hgtk.josa.attach('바다', hgtk.josa.EUL_REUL)\n'바다를'\n```\n#### GWA_WA - 과/와 \n```python\n>>> hgtk.josa.attach('하늘', hgtk.josa.GWA_WA)\n'하늘과'\n>>> hgtk.josa.attach('바다', hgtk.josa.GWA_WA)\n'바다와'\n```\n#### IDA_DA - 이다/다 \n```python\n>>> hgtk.josa.attach('하늘', hgtk.josa.IDA_DA)\n'하늘이다'\n>>> hgtk.josa.attach('바다', hgtk.josa.IDA_DA)\n'바다다'\n```\n#### EURO_RO - 로/으로\n```python\n>>> hgtk.josa.attach('하늘', hgtk.josa.EURO_RO)\n'하늘로'\n>>> hgtk.josa.attach('바다', hgtk.josa.EURO_RO)\n'바다로'\n>>> hgtk.josa.attach('태양', hgtk.josa.EURO_RO)\n'태양으로'\n```\n#### RYUL_YUL - 율/률\n```python\n>>> hgtk.josa.attach('방어', hgtk.josa.RYUL_YUL)\n'방어율'\n>>> hgtk.josa.attach('공격', hgtk.josa.RYUL_YUL)\n'공격률'\n>>> hgtk.josa.attach('반환', hgtk.josa.RYUL_YUL)\n'반환율'\n```\n\n### Const\n* CHO: 초성 리스트\n* JOONG: 중성 리스트\n* JONG: 종성 리스트, 종성이 없는 경우를 대비해 공백 문자가 추가됨\n\n* JAMO: 공백을 제외한 모든 자모(비조합문자)\n\n* NUM_CHO: 초성 개수\n* NUM_JOONG: 중성 개수\n* NUM_JONG: 종성 개수 \n\n* FIRST_HANGUL_UNICODE: 유니코드 상의 한글 코드(조합문자) 시작 시점\n* LAST_HANGUL_UNICODE: 유니코드 상의 한글 코드(조합문자) 종료 시점 \n\n### Exception\n예외 처리를 위한 Exception들, 의미는 보이는 대로..\n* NotHangulException\n* NotLetterException\n* NotWordException\n\n\n##Tested in\n- python 2.6\n- python 2.7\n- python 3.3\n- python 3.4\n- python 3.5\n- python 3.6\n- python nightly build\n\n- PyPy 2.2.5.\n- Pypy 3 2.4.\n- PyPy 5.3.1\n\n\n----\n\nApache 2.0 License\n"]
CTFTools,Personal CTF Toolkit,472,https://github.com/Harmoc/CTFTools,master,['\n# Personal CTF Toolkit\n\n此工具包最初是基于精灵表哥和一个佚名表哥的工具包整理的，后来加上本人打CTF和渗透时所添加的一些工具，应当还算全面。\n\n希望这份工具包可以为刚刚接触CTF的朋友构造自己的工具链带来一些微小的帮助。\n\n考虑Github国内访问问题，下载还是放在网盘：\n\n- 链接：https://share.weiyun.com/8cVhjsKl 密码：233333\n- rar Password: hacktheworld\n\n\n\n愿世间心诚剑士人人会两袖青蛇，\n\n愿天下惊艳后辈人人可剑开天门。\n\n\n\n## Note\n\n1. 部分工具运行时的目录中不可有空格或中文字符。\n2. 目录只放了三层，再多则影响阅读。详细列表也上传了一份，以供参考。\n3. 部分工具可能带有一定攻击性，仅供安全学习，禁止非法使用。\n\n\n\n## Update log\n\n- 2019.1.29\n渗透测试实习中，根据实际渗透测试Update部分工具。\n- 2019.3.20\n随着经验以及和同事的互通有无，再度Update部分工具。\n- 2020.12.29\n  随着实际渗透的发展、CTF的新变化以及对IoT、工控等方向的接触，Update.\n\n\n\n## index:\n```\n.\n├── Web\n│\xa0\xa0 ├── BruteTools\n│\xa0\xa0 │\xa0\xa0 ├── August 一句话木马爆破工具 1.0 .rar\n│\xa0\xa0 │\xa0\xa0 ├── K8_FuckOneShell\n│\xa0\xa0 │\xa0\xa0 ├── OraclePasswords\n│\xa0\xa0 │\xa0\xa0 ├── PKAV HTTP Fuzzer 1.5.6.zip\n│\xa0\xa0 │\xa0\xa0 ├── hydra-7.3\n│\xa0\xa0 │\xa0\xa0 ├── md5crack3.rar\n│\xa0\xa0 │\xa0\xa0 ├── phpMyAdmin批量破解工具.rar\n│\xa0\xa0 │\xa0\xa0 ├── phpMyadmin\n│\xa0\xa0 │\xa0\xa0 ├── tomcat_manager_bruter\n│\xa0\xa0 │\xa0\xa0 ├── 一句话快速爆破工具.zip\n│\xa0\xa0 │\xa0\xa0 └── 一句话猜解工具.rar\n│\xa0\xa0 ├── Burp Suite\n│\xa0\xa0 │\xa0\xa0 ├── Burp_Suite_Pro_v2.1.04_Loader_Keygen.zip\n│\xa0\xa0 │\xa0\xa0 └── plugin\n│\xa0\xa0 ├── Cobalt Strike\n│\xa0\xa0 │\xa0\xa0 ├── Ladon7.0.rar\n│\xa0\xa0 │\xa0\xa0 └── cobaltstrike4.0.zip\n│\xa0\xa0 ├── Exploits\n│\xa0\xa0 │\xa0\xa0 ├── 0sec_exp\n│\xa0\xa0 │\xa0\xa0 ├── CSRF-Request-Builder-master.zip\n│\xa0\xa0 │\xa0\xa0 ├── CSRFTester-1.0.zip\n│\xa0\xa0 │\xa0\xa0 ├── ECshop批量.py\n│\xa0\xa0 │\xa0\xa0 ├── GetWebShell增强版.exe\n│\xa0\xa0 │\xa0\xa0 ├── Mobile-Security-Framework-MobSF-1.0.3Beta\n│\xa0\xa0 │\xa0\xa0 ├── OWASP_Xenotix_XSS_Exploit_Framework_V6.1.zip\n│\xa0\xa0 │\xa0\xa0 ├── _漏洞利用载荷\n│\xa0\xa0 │\xa0\xa0 ├── commix\n│\xa0\xa0 │\xa0\xa0 ├── phpcmsv9  Getshell.py\n│\xa0\xa0 │\xa0\xa0 ├── pker\n│\xa0\xa0 │\xa0\xa0 ├── sqlmap-master\n│\xa0\xa0 │\xa0\xa0 ├── tplmap-master\n│\xa0\xa0 │\xa0\xa0 ├── ysoserial\n│\xa0\xa0 │\xa0\xa0 ├── 双文件上传\n│\xa0\xa0 │\xa0\xa0 ├── 手工注入辅助工具\n│\xa0\xa0 │\xa0\xa0 ├── 超级SQL注入工具【SSQLInjection】V1.0 正式版 20190905\n│\xa0\xa0 │\xa0\xa0 └── 超级SQL注入工具【SSQLInjection】V1.0 正式版 20190905.zip\n│\xa0\xa0 ├── Payload\n│\xa0\xa0 │\xa0\xa0 └── PayloadsAllTheThings-master\n│\xa0\xa0 ├── Shell Ctrl\n│\xa0\xa0 │\xa0\xa0 ├── AntSword-Loader-v4.0.3-win32-x64.zip\n│\xa0\xa0 │\xa0\xa0 ├── Behinder\n│\xa0\xa0 │\xa0\xa0 ├── Chopper\n│\xa0\xa0 │\xa0\xa0 ├── behinder-过杀软.zip\n│\xa0\xa0 │\xa0\xa0 ├── python反弹shell.txt\n│\xa0\xa0 │\xa0\xa0 └── redis远程连接漏洞脚本.rar\n│\xa0\xa0 ├── Trace Clear\n│\xa0\xa0 │\xa0\xa0 └── anti-honeypot\n│\xa0\xa0 ├── Trojan\n│\xa0\xa0 │\xa0\xa0 └── 马还是自己收集比较好.txt\n│\xa0\xa0 ├── 信息收集\n│\xa0\xa0 │\xa0\xa0 ├── AWVS\n│\xa0\xa0 │\xa0\xa0 ├── GitHack-master\n│\xa0\xa0 │\xa0\xa0 ├── Goby\n│\xa0\xa0 │\xa0\xa0 ├── GourdScan-master\n│\xa0\xa0 │\xa0\xa0 ├── IIS短文件名漏洞利用工具\n│\xa0\xa0 │\xa0\xa0 ├── K8_Fck_Exploit.exe\n│\xa0\xa0 │\xa0\xa0 ├── Layer子域名挖掘机4.1 重构版\n│\xa0\xa0 │\xa0\xa0 ├── M7lrvCMS 网站扫描程序V2.0(2015-08-13)\n│\xa0\xa0 │\xa0\xa0 ├── OneForAll\n│\xa0\xa0 │\xa0\xa0 ├── Seay批量域名解析IP.exe\n│\xa0\xa0 │\xa0\xa0 ├── SourceLeakHacker\n│\xa0\xa0 │\xa0\xa0 ├── WebAliveScan-master\n│\xa0\xa0 │\xa0\xa0 ├── Xray\n│\xa0\xa0 │\xa0\xa0 ├── crawlergo\n│\xa0\xa0 │\xa0\xa0 ├── ds_store_exp\n│\xa0\xa0 │\xa0\xa0 ├── lijiejie_subDomainsBrute-master\n│\xa0\xa0 │\xa0\xa0 ├── sk15_redis_V_11.py\n│\xa0\xa0 │\xa0\xa0 ├── 御剑后台扫描珍藏版\n│\xa0\xa0 │\xa0\xa0 ├── 摄像头工具\n│\xa0\xa0 │\xa0\xa0 └── 邮箱采集\n│\xa0\xa0 ├── 免杀工具\n│\xa0\xa0 │\xa0\xa0 ├── DefenderCheck\n│\xa0\xa0 │\xa0\xa0 └── VMProtect_Ultimate_v3.5.0_x32_Build_1213_Retail_Licensed\n│\xa0\xa0 ├── 内网工具\n│\xa0\xa0 │\xa0\xa0 ├── CVE-2018-2893.zip\n│\xa0\xa0 │\xa0\xa0 ├── LaZagne\n│\xa0\xa0 │\xa0\xa0 ├── Venom v1.1.0\n│\xa0\xa0 │\xa0\xa0 ├── lcx.zip\n│\xa0\xa0 │\xa0\xa0 ├── linux lcx端口转发.zip\n│\xa0\xa0 │\xa0\xa0 ├── nishang\n│\xa0\xa0 │\xa0\xa0 ├── nps\n│\xa0\xa0 │\xa0\xa0 └── 免杀mimikatz.zip\n│\xa0\xa0 ├── 字典\n│\xa0\xa0 │\xa0\xa0 ├── 100.txt\n│\xa0\xa0 │\xa0\xa0 ├── 1000.txt\n│\xa0\xa0 │\xa0\xa0 ├── 10000.txt\n│\xa0\xa0 │\xa0\xa0 ├── 10000a.txt\n│\xa0\xa0 │\xa0\xa0 ├── 12.txt\n│\xa0\xa0 │\xa0\xa0 ├── 500姓名.txt\n│\xa0\xa0 │\xa0\xa0 ├── 6000常用.txt\n│\xa0\xa0 │\xa0\xa0 ├── Top100弱口令.txt\n│\xa0\xa0 │\xa0\xa0 ├── darkweb2017-top1000.txt\n│\xa0\xa0 │\xa0\xa0 ├── fuzz\n│\xa0\xa0 │\xa0\xa0 ├── kaliwordlist\n│\xa0\xa0 │\xa0\xa0 ├── pass.txt\n│\xa0\xa0 │\xa0\xa0 ├── shell.txt\n│\xa0\xa0 │\xa0\xa0 ├── shell1.txt\n│\xa0\xa0 │\xa0\xa0 ├── superdic.exe\n│\xa0\xa0 │\xa0\xa0 ├── top100.txt\n│\xa0\xa0 │\xa0\xa0 ├── top3000.txt\n│\xa0\xa0 │\xa0\xa0 ├── 轻型字典\n│\xa0\xa0 │\xa0\xa0 └── 重型字典\n│\xa0\xa0 ├── 审计工具\n│\xa0\xa0 │\xa0\xa0 ├── D盾.zip\n│\xa0\xa0 │\xa0\xa0 ├── Fortify\n│\xa0\xa0 │\xa0\xa0 ├── Seay2.2修改版.rar\n│\xa0\xa0 │\xa0\xa0 ├── Seay代码审计工具（二次修改）\n│\xa0\xa0 │\xa0\xa0 ├── Seay源代码审计系统2.1.zip\n│\xa0\xa0 │\xa0\xa0 ├── TextForever_1.79\n│\xa0\xa0 │\xa0\xa0 ├── Web日志安全分析工具 v2.0.zip\n│\xa0\xa0 │\xa0\xa0 ├── chip\n│\xa0\xa0 │\xa0\xa0 ├── cobra-master\n│\xa0\xa0 │\xa0\xa0 ├── lynis-2.7.2.tar.gz\n│\xa0\xa0 │\xa0\xa0 └── rips-0.55.zip\n│\xa0\xa0 ├── 提权工具\n│\xa0\xa0 │\xa0\xa0 ├── linux\n│\xa0\xa0 │\xa0\xa0 ├── nc提权\n│\xa0\xa0 │\xa0\xa0 ├── pcanywhere\n│\xa0\xa0 │\xa0\xa0 ├── php+mysql\n│\xa0\xa0 │\xa0\xa0 ├── serv-u提权综合工具.rar\n│\xa0\xa0 │\xa0\xa0 ├── windows\n│\xa0\xa0 │\xa0\xa0 ├── 启动项提权.bat\n│\xa0\xa0 │\xa0\xa0 ├── 常见提权工具\n│\xa0\xa0 │\xa0\xa0 ├── 开启3389\n│\xa0\xa0 │\xa0\xa0 ├── 扫目录.rar\n│\xa0\xa0 │\xa0\xa0 ├── 权限维持\n│\xa0\xa0 │\xa0\xa0 ├── 补丁对应提权方式.txt\n│\xa0\xa0 │\xa0\xa0 └── 解决tcp限制.rar\n│\xa0\xa0 └── 流量分析\n│\xa0\xa0     ├── USB Monitor Pro.txt\n│\xa0\xa0     ├── Wireshark.txt\n│\xa0\xa0     ├── ctf_ics_traffic\n│\xa0\xa0     ├── modbus\n│\xa0\xa0     ├── 安装包\n│\xa0\xa0     └── 推荐书籍\n├── list.txt\n├── 取证\n│\xa0\xa0 ├── Elcomsoft Forensic Disk Decryptor\n│\xa0\xa0 │\xa0\xa0 ├── Gold WareZ.nfo\n│\xa0\xa0 │\xa0\xa0 ├── doa.nfo\n│\xa0\xa0 │\xa0\xa0 ├── efdd_setup_en.msi\n│\xa0\xa0 │\xa0\xa0 ├── file_id.diz\n│\xa0\xa0 │\xa0\xa0 └── key.txt\n│\xa0\xa0 ├── ScreenToGif_v2.16.0.0.zip\n│\xa0\xa0 ├── kali forensics集合.txt\n│\xa0\xa0 ├── routerpassview\n│\xa0\xa0 │\xa0\xa0 ├── RouterPassView.cfg\n│\xa0\xa0 │\xa0\xa0 ├── RouterPassView.chm\n│\xa0\xa0 │\xa0\xa0 ├── RouterPassView.exe\n│\xa0\xa0 │\xa0\xa0 ├── conf.bin\n│\xa0\xa0 │\xa0\xa0 └── readme.txt\n│\xa0\xa0 ├── routerpassview(1).zip\n│\xa0\xa0 ├── snap7-full-1.4.2\n│\xa0\xa0 │\xa0\xa0 ├── LabVIEW\n│\xa0\xa0 │\xa0\xa0 ├── README.txt\n│\xa0\xa0 │\xa0\xa0 ├── build\n│\xa0\xa0 │\xa0\xa0 ├── doc\n│\xa0\xa0 │\xa0\xa0 ├── examples\n│\xa0\xa0 │\xa0\xa0 ├── gpl.txt\n│\xa0\xa0 │\xa0\xa0 ├── lgpl-3.0.txt\n│\xa0\xa0 │\xa0\xa0 ├── release\n│\xa0\xa0 │\xa0\xa0 ├── rich-demos\n│\xa0\xa0 │\xa0\xa0 ├── src\n│\xa0\xa0 │\xa0\xa0 ├── utility\n│\xa0\xa0 │\xa0\xa0 └── win-clean.bat\n│\xa0\xa0 ├── snap7-full-1.4.2.7z\n│\xa0\xa0 ├── 取证大师\n│\xa0\xa0 │\xa0\xa0 ├── Bin\n│\xa0\xa0 │\xa0\xa0 ├── Config\n│\xa0\xa0 │\xa0\xa0 ├── Face\n│\xa0\xa0 │\xa0\xa0 ├── Help\n│\xa0\xa0 │\xa0\xa0 ├── Report\n│\xa0\xa0 │\xa0\xa0 ├── Skin\n│\xa0\xa0 │\xa0\xa0 ├── Update.txt\n│\xa0\xa0 │\xa0\xa0 ├── UpdateCenter\n│\xa0\xa0 │\xa0\xa0 ├── Viewer\n│\xa0\xa0 │\xa0\xa0 ├── 取证大师.exe\n│\xa0\xa0 │\xa0\xa0 └── 案例\n│\xa0\xa0 ├── 取证大师.rar\n│\xa0\xa0 ├── 日志分析\n│\xa0\xa0 │\xa0\xa0 └── apache-scalp-master\n│\xa0\xa0 ├── 秋式网站日志分析器.rar\n│\xa0\xa0 └── 计算机安全检查取证系统.zip\n├── 工控\n│\xa0\xa0 ├── MMS.pdf\n│\xa0\xa0 └── icsmaster\n│\xa0\xa0     ├── README.md\n│\xa0\xa0     ├── SCADA_Metasploit_Modules.csv\n│\xa0\xa0     ├── SCADA_Metasploit_Modules.xls\n│\xa0\xa0     ├── Scada_Dorks.csv\n│\xa0\xa0     ├── Scada_Dorks.xls\n│\xa0\xa0     ├── Scada_Password.csv\n│\xa0\xa0     ├── Scada_Password.xls\n│\xa0\xa0     ├── doc\n│\xa0\xa0     ├── exploit\n│\xa0\xa0     ├── nse\n│\xa0\xa0     ├── pcap\n│\xa0\xa0     ├── protocol\n│\xa0\xa0     └── tool\n├── 文件分析\n│\xa0\xa0 ├── BeyondCompare_4.3.5.24893_64bit_Portable.7z\n│\xa0\xa0 ├── FileAnalysis V2.2.1 D20140401\n│\xa0\xa0 │\xa0\xa0 └── FileAnalysis\n│\xa0\xa0 ├── FiletypeID\n│\xa0\xa0 │\xa0\xa0 ├── Definitions\n│\xa0\xa0 │\xa0\xa0 ├── FiletypeID.exe\n│\xa0\xa0 │\xa0\xa0 ├── FiletypeID.ini\n│\xa0\xa0 │\xa0\xa0 ├── License.txt\n│\xa0\xa0 │\xa0\xa0 ├── PyQt4.QtCore.pyd\n│\xa0\xa0 │\xa0\xa0 ├── PyQt4.QtGui.pyd\n│\xa0\xa0 │\xa0\xa0 ├── QtCore4.dll\n│\xa0\xa0 │\xa0\xa0 ├── QtGui4.dll\n│\xa0\xa0 │\xa0\xa0 ├── ReadMe.txt\n│\xa0\xa0 │\xa0\xa0 ├── TrIDLib\n│\xa0\xa0 │\xa0\xa0 ├── _ctypes.pyd\n│\xa0\xa0 │\xa0\xa0 ├── _hashlib.pyd\n│\xa0\xa0 │\xa0\xa0 ├── _socket.pyd\n│\xa0\xa0 │\xa0\xa0 ├── _ssl.pyd\n│\xa0\xa0 │\xa0\xa0 ├── bz2.pyd\n│\xa0\xa0 │\xa0\xa0 ├── library.zip\n│\xa0\xa0 │\xa0\xa0 ├── python27.dll\n│\xa0\xa0 │\xa0\xa0 ├── sip.pyd\n│\xa0\xa0 │\xa0\xa0 └── unicodedata.pyd\n│\xa0\xa0 ├── dmg2iso.exe\n│\xa0\xa0 └── foremost文件分离.rar\n├── 编码与密码\n│\xa0\xa0 ├── ASCII码随心换v3.0.0.1.exe\n│\xa0\xa0 ├── CTFcrack\n│\xa0\xa0 │\xa0\xa0 ├── CTFcrack.jar\n│\xa0\xa0 │\xa0\xa0 ├── Plugin\n│\xa0\xa0 │\xa0\xa0 ├── Setting.json\n│\xa0\xa0 │\xa0\xa0 └── girl\n│\xa0\xa0 ├── CyberChef_v9.21.0\n│\xa0\xa0 │\xa0\xa0 ├── CyberChef_v9.21.0.html\n│\xa0\xa0 │\xa0\xa0 ├── assets\n│\xa0\xa0 │\xa0\xa0 ├── images\n│\xa0\xa0 │\xa0\xa0 └── modules\n│\xa0\xa0 ├── Hash & Crypto Detector v1.4\n│\xa0\xa0 │\xa0\xa0 ├── AT4RE.nfo\n│\xa0\xa0 │\xa0\xa0 ├── HCD.exe\n│\xa0\xa0 │\xa0\xa0 └── Readme.txt\n│\xa0\xa0 ├── JDicTac.jar\n│\xa0\xa0 ├── Keygener_Assistant\n│\xa0\xa0 │\xa0\xa0 ├── History.txt\n│\xa0\xa0 │\xa0\xa0 ├── Readme.txt\n│\xa0\xa0 │\xa0\xa0 └── keyAssistant Remixed.exe\n│\xa0\xa0 ├── PYG密码学综合工具 v5.0.0.5\n│\xa0\xa0 │\xa0\xa0 ├── PYG.dll\n│\xa0\xa0 │\xa0\xa0 ├── PYG_TOOLS5.ini\n│\xa0\xa0 │\xa0\xa0 └── PYG_TOOLS_VER5.exe\n│\xa0\xa0 ├── UNICODE2ANSI.exe\n│\xa0\xa0 ├── Wintools编码转换.exe\n│\xa0\xa0 ├── key_Assistant.exe\n│\xa0\xa0 ├── online-decode\n│\xa0\xa0 │\xa0\xa0 ├── README.md\n│\xa0\xa0 │\xa0\xa0 ├── app\n│\xa0\xa0 │\xa0\xa0 ├── base32_decode.html\n│\xa0\xa0 │\xa0\xa0 ├── base32_encode.html\n│\xa0\xa0 │\xa0\xa0 ├── base64_decode.html\n│\xa0\xa0 │\xa0\xa0 ├── base64_encode.html\n│\xa0\xa0 │\xa0\xa0 ├── crc16.html\n│\xa0\xa0 │\xa0\xa0 ├── crc32.html\n│\xa0\xa0 │\xa0\xa0 ├── crc32_checksum.html\n│\xa0\xa0 │\xa0\xa0 ├── css\n│\xa0\xa0 │\xa0\xa0 ├── html_decode.html\n│\xa0\xa0 │\xa0\xa0 ├── html_encode.html\n│\xa0\xa0 │\xa0\xa0 ├── index.html\n│\xa0\xa0 │\xa0\xa0 ├── js\n│\xa0\xa0 │\xa0\xa0 ├── keccak_224.html\n│\xa0\xa0 │\xa0\xa0 ├── keccak_256.html\n│\xa0\xa0 │\xa0\xa0 ├── keccak_384.html\n│\xa0\xa0 │\xa0\xa0 ├── keccak_512.html\n│\xa0\xa0 │\xa0\xa0 ├── md2.html\n│\xa0\xa0 │\xa0\xa0 ├── md4.html\n│\xa0\xa0 │\xa0\xa0 ├── md5.html\n│\xa0\xa0 │\xa0\xa0 ├── md5_checksum.html\n│\xa0\xa0 │\xa0\xa0 ├── sha1.html\n│\xa0\xa0 │\xa0\xa0 ├── sha1_checksum.html\n│\xa0\xa0 │\xa0\xa0 ├── sha224.html\n│\xa0\xa0 │\xa0\xa0 ├── sha256.html\n│\xa0\xa0 │\xa0\xa0 ├── sha384.html\n│\xa0\xa0 │\xa0\xa0 ├── sha3_224.html\n│\xa0\xa0 │\xa0\xa0 ├── sha3_256.html\n│\xa0\xa0 │\xa0\xa0 ├── sha3_384.html\n│\xa0\xa0 │\xa0\xa0 ├── sha3_512.html\n│\xa0\xa0 │\xa0\xa0 ├── sha512.html\n│\xa0\xa0 │\xa0\xa0 ├── sha512_224.html\n│\xa0\xa0 │\xa0\xa0 ├── sha512_256.html\n│\xa0\xa0 │\xa0\xa0 ├── shake_128.html\n│\xa0\xa0 │\xa0\xa0 ├── shake_256.html\n│\xa0\xa0 │\xa0\xa0 ├── url_decode.html\n│\xa0\xa0 │\xa0\xa0 └── url_encode.html\n│\xa0\xa0 ├── 万能字符转换Character1.2.exe\n│\xa0\xa0 ├── 加密与编码合集v1.2\n│\xa0\xa0 │\xa0\xa0 ├── Qt5Core.dll\n│\xa0\xa0 │\xa0\xa0 ├── Qt5Gui.dll\n│\xa0\xa0 │\xa0\xa0 ├── Qt5Widgets.dll\n│\xa0\xa0 │\xa0\xa0 ├── dict\n│\xa0\xa0 │\xa0\xa0 ├── icudt52.dll\n│\xa0\xa0 │\xa0\xa0 ├── icuin52.dll\n│\xa0\xa0 │\xa0\xa0 ├── icuuc52.dll\n│\xa0\xa0 │\xa0\xa0 ├── libgcc_s_dw2-1.dll\n│\xa0\xa0 │\xa0\xa0 ├── libstdc++-6.dll\n│\xa0\xa0 │\xa0\xa0 ├── libwinpthread-1.dll\n│\xa0\xa0 │\xa0\xa0 ├── platforms\n│\xa0\xa0 │\xa0\xa0 ├── 加密与编码小工具v1.2.exe\n│\xa0\xa0 │\xa0\xa0 └── 更新.txt\n│\xa0\xa0 ├── 加密解密图和方法\n│\xa0\xa0 │\xa0\xa0 ├── ADFGX加密法.png\n│\xa0\xa0 │\xa0\xa0 ├── Blue-punch-card-front-horiz.png\n│\xa0\xa0 │\xa0\xa0 ├── 二进制加密解密法.txt\n│\xa0\xa0 │\xa0\xa0 ├── 倒叙加密解密.txt\n│\xa0\xa0 │\xa0\xa0 ├── 凯撒密码加密.jpg\n│\xa0\xa0 │\xa0\xa0 ├── 培根密码.jpg\n│\xa0\xa0 │\xa0\xa0 ├── 字母表顺序加密法和反字母表加密法和小键盘加密法.jpg\n│\xa0\xa0 │\xa0\xa0 ├── 当铺密码.jpg\n│\xa0\xa0 │\xa0\xa0 ├── 手机键盘加密解密.jpg\n│\xa0\xa0 │\xa0\xa0 ├── 摩尔密码加密与解密.jpg\n│\xa0\xa0 │\xa0\xa0 ├── 数字坐标加密字母.png\n│\xa0\xa0 │\xa0\xa0 ├── 波利比奥斯棋盘.png\n│\xa0\xa0 │\xa0\xa0 ├── 猪圈密码.png\n│\xa0\xa0 │\xa0\xa0 ├── 猪圈密码加密解密.jpg\n│\xa0\xa0 │\xa0\xa0 ├── 电脑键盘QWE加密法.jpg\n│\xa0\xa0 │\xa0\xa0 ├── 电脑键盘坐标加密.jpg\n│\xa0\xa0 │\xa0\xa0 ├── 电脑键盘棋盘加密.jpg\n│\xa0\xa0 │\xa0\xa0 ├── 维吉尼亚.txt\n│\xa0\xa0 │\xa0\xa0 ├── 维吉尼亚密码.png\n│\xa0\xa0 │\xa0\xa0 └── 非斯的象形文字翻译图.png\n│\xa0\xa0 ├── 加密解密小玩具.exe\n│\xa0\xa0 ├── 加密解密编码解码工具SENCODE.exe\n│\xa0\xa0 ├── 字典生成\n│\xa0\xa0 │\xa0\xa0 ├── N.C.P.H社会工程学字典生成器\n│\xa0\xa0 │\xa0\xa0 ├── 万能钥匙字典生成工具(强).exe\n│\xa0\xa0 │\xa0\xa0 ├── 亦思社会工程学字典生成器.exe\n│\xa0\xa0 │\xa0\xa0 ├── 全国各地手机号码段查询.url\n│\xa0\xa0 │\xa0\xa0 ├── 品轩字典生成器V0.5.exe\n│\xa0\xa0 │\xa0\xa0 ├── 易优软件-超级字典生成器.exe\n│\xa0\xa0 │\xa0\xa0 ├── 真空密码字典生成器\n│\xa0\xa0 │\xa0\xa0 └── 黑刀超级字典生成器.exe\n│\xa0\xa0 ├── 密码\n│\xa0\xa0 │\xa0\xa0 ├── Code\n│\xa0\xa0 │\xa0\xa0 ├── DES\n│\xa0\xa0 │\xa0\xa0 ├── Hash\n│\xa0\xa0 │\xa0\xa0 ├── MD5\n│\xa0\xa0 │\xa0\xa0 ├── Office\n│\xa0\xa0 │\xa0\xa0 ├── PYG密码学综合工具\n│\xa0\xa0 │\xa0\xa0 ├── RAR\n│\xa0\xa0 │\xa0\xa0 ├── RSA\n│\xa0\xa0 │\xa0\xa0 ├── Wireless\n│\xa0\xa0 │\xa0\xa0 ├── Zip\n│\xa0\xa0 │\xa0\xa0 ├── asp_encode_decode\n│\xa0\xa0 │\xa0\xa0 ├── 单表置换碰撞在线解密\n│\xa0\xa0 │\xa0\xa0 ├── 古典密码\n│\xa0\xa0 │\xa0\xa0 ├── 古典密码工具\n│\xa0\xa0 │\xa0\xa0 ├── 序列密码\n│\xa0\xa0 │\xa0\xa0 └── 词频分析\n│\xa0\xa0 ├── 小葵多功能转换工具.exe\n│\xa0\xa0 ├── 常见密码.txt\n│\xa0\xa0 ├── 编码\n│\xa0\xa0 │\xa0\xa0 ├── BrainTools.zip\n│\xa0\xa0 │\xa0\xa0 ├── Brainfuck\n│\xa0\xa0 │\xa0\xa0 ├── Braintools\n│\xa0\xa0 │\xa0\xa0 ├── CTF中那些脑洞大开的编码和加密.txt\n│\xa0\xa0 │\xa0\xa0 ├── GB2312 UNICODE 转换工具.html\n│\xa0\xa0 │\xa0\xa0 ├── JPK_406.jar\n│\xa0\xa0 │\xa0\xa0 ├── LoveString\n│\xa0\xa0 │\xa0\xa0 ├── Shellcode\n│\xa0\xa0 │\xa0\xa0 ├── jjdecode.html\n│\xa0\xa0 │\xa0\xa0 ├── 字符ASCII码互转.exe\n│\xa0\xa0 │\xa0\xa0 ├── 字符信息与二进制(字符串转16进制).exe\n│\xa0\xa0 │\xa0\xa0 ├── 摩斯电码编码解码.exe\n│\xa0\xa0 │\xa0\xa0 └── 编码转换工具\n│\xa0\xa0 └── 编码转换.exe\n├── 脚本\n│\xa0\xa0 ├── CRC32碰撞\n│\xa0\xa0 │\xa0\xa0 ├── crc-collision.py\n│\xa0\xa0 │\xa0\xa0 ├── crc32\n│\xa0\xa0 │\xa0\xa0 ├── crc32.py\n│\xa0\xa0 │\xa0\xa0 ├── crc32Collision.py\n│\xa0\xa0 │\xa0\xa0 └── crc32_4.py\n│\xa0\xa0 ├── PIL.py\n│\xa0\xa0 ├── _常用的小脚本\n│\xa0\xa0 │\xa0\xa0 ├── bash盲注\n│\xa0\xa0 │\xa0\xa0 ├── ip_extraction.py\n│\xa0\xa0 │\xa0\xa0 ├── md5veify.py\n│\xa0\xa0 │\xa0\xa0 ├── sha1ex6.py\n│\xa0\xa0 │\xa0\xa0 ├── 二次注入\n│\xa0\xa0 │\xa0\xa0 └── 盲注\n│\xa0\xa0 ├── file_hex_show.py\n│\xa0\xa0 ├── name_birthday_weak_password.py\n│\xa0\xa0 ├── phpjiami解密\n│\xa0\xa0 │\xa0\xa0 └── jiemi.php\n│\xa0\xa0 ├── png IDAT顺序修复\n│\xa0\xa0 │\xa0\xa0 ├── odrrere-final.png\n│\xa0\xa0 │\xa0\xa0 ├── odrrere-progress.png\n│\xa0\xa0 │\xa0\xa0 ├── odrrere-start.png\n│\xa0\xa0 │\xa0\xa0 └── pngIDAT_order_fix.py\n│\xa0\xa0 ├── pngsignature_0x0a_replace_0x0d0a.py\n│\xa0\xa0 ├── qr_gen.py\n│\xa0\xa0 ├── read_LSB.py\n│\xa0\xa0 ├── read_png_datablock.py\n│\xa0\xa0 ├── zlib\n│\xa0\xa0 │\xa0\xa0 ├── zlib.py\n│\xa0\xa0 │\xa0\xa0 └── zlib_decompress.py\n│\xa0\xa0 ├── 反相\n│\xa0\xa0 │\xa0\xa0 ├── Inverting.py\n│\xa0\xa0 │\xa0\xa0 ├── input.png\n│\xa0\xa0 │\xa0\xa0 └── output_inverted.png\n│\xa0\xa0 ├── 正则表达式\n│\xa0\xa0 │\xa0\xa0 └── RegexTester.exe\n│\xa0\xa0 └── 简单替换破解\n│\xa0\xa0     └── break.py\n├── 逆向\n│\xa0\xa0 ├── 010_Editor_11\n│\xa0\xa0 │\xa0\xa0 ├── 010EditorWin64Installer11.0.exe\n│\xa0\xa0 │\xa0\xa0 └── 010editor-patch.zip\n│\xa0\xa0 ├── C32Asm\n│\xa0\xa0 │\xa0\xa0 ├── Bmp\n│\xa0\xa0 │\xa0\xa0 ├── C32ASM.INI\n│\xa0\xa0 │\xa0\xa0 ├── C32Asm.exe\n│\xa0\xa0 │\xa0\xa0 ├── KeyWord\n│\xa0\xa0 │\xa0\xa0 ├── LANGUAGE\n│\xa0\xa0 │\xa0\xa0 ├── PeSave\n│\xa0\xa0 │\xa0\xa0 ├── Symbol\n│\xa0\xa0 │\xa0\xa0 ├── plugs\n│\xa0\xa0 │\xa0\xa0 └── 修改记录.txt\n│\xa0\xa0 ├── ExeinfoPe\n│\xa0\xa0 │\xa0\xa0 ├── ExeinfoPe.zip\n│\xa0\xa0 │\xa0\xa0 ├── Ext_Detector.dll\n│\xa0\xa0 │\xa0\xa0 ├── exeinfope.exe\n│\xa0\xa0 │\xa0\xa0 ├── exeinfopeRUN.cfg\n│\xa0\xa0 │\xa0\xa0 ├── file_id.diz\n│\xa0\xa0 │\xa0\xa0 ├── languages\n│\xa0\xa0 │\xa0\xa0 ├── plugins\n│\xa0\xa0 │\xa0\xa0 ├── scripts\n│\xa0\xa0 │\xa0\xa0 ├── skins\n│\xa0\xa0 │\xa0\xa0 └── userdb.txt\n│\xa0\xa0 ├── IDA\n│\xa0\xa0 │\xa0\xa0 ├── IDA Pro 7.5 SP3.zip\n│\xa0\xa0 │\xa0\xa0 └── IDA_插件\n│\xa0\xa0 ├── JPEXSFreeFlashDecompiler\n│\xa0\xa0 │\xa0\xa0 ├── ffdec_9.0.0_setup.exe\n│\xa0\xa0 │\xa0\xa0 └── 使用说明.txt\n│\xa0\xa0 ├── PEID\n│\xa0\xa0 │\xa0\xa0 ├── 173绿色软件.url\n│\xa0\xa0 │\xa0\xa0 ├── 173软件下载.txt\n│\xa0\xa0 │\xa0\xa0 ├── HA.PEiD.0.95\n│\xa0\xa0 │\xa0\xa0 └── ha.peid.0.95.rar\n│\xa0\xa0 ├── WinHex\n│\xa0\xa0 │\xa0\xa0 ├── linholer.txt\n│\xa0\xa0 │\xa0\xa0 ├── winhex19.3 SR-4 x86 x64\n│\xa0\xa0 │\xa0\xa0 ├── winhex19.3 SR-4 x86 x64.zip\n│\xa0\xa0 │\xa0\xa0 └── 中文补丁\n│\xa0\xa0 ├── dex2jar\n│\xa0\xa0 │\xa0\xa0 ├── d2j-dex2jar.bat\n│\xa0\xa0 │\xa0\xa0 └── d2j-dex2jar.sh\n│\xa0\xa0 ├── dex2jar-2.0\n│\xa0\xa0 │\xa0\xa0 ├── classes-error.zip\n│\xa0\xa0 │\xa0\xa0 ├── d2j-baksmali.bat\n│\xa0\xa0 │\xa0\xa0 ├── d2j-baksmali.sh\n│\xa0\xa0 │\xa0\xa0 ├── d2j-dex-recompute-checksum.bat\n│\xa0\xa0 │\xa0\xa0 ├── d2j-dex-recompute-checksum.sh\n│\xa0\xa0 │\xa0\xa0 ├── d2j-dex2jar.bat\n│\xa0\xa0 │\xa0\xa0 ├── d2j-dex2jar.sh\n│\xa0\xa0 │\xa0\xa0 ├── d2j-dex2smali.bat\n│\xa0\xa0 │\xa0\xa0 ├── d2j-dex2smali.sh\n│\xa0\xa0 │\xa0\xa0 ├── d2j-jar2dex.bat\n│\xa0\xa0 │\xa0\xa0 ├── d2j-jar2dex.sh\n│\xa0\xa0 │\xa0\xa0 ├── d2j-jar2jasmin.bat\n│\xa0\xa0 │\xa0\xa0 ├── d2j-jar2jasmin.sh\n│\xa0\xa0 │\xa0\xa0 ├── d2j-jasmin2jar.bat\n│\xa0\xa0 │\xa0\xa0 ├── d2j-jasmin2jar.sh\n│\xa0\xa0 │\xa0\xa0 ├── d2j-smali.bat\n│\xa0\xa0 │\xa0\xa0 ├── d2j-smali.sh\n│\xa0\xa0 │\xa0\xa0 ├── d2j-std-apk.bat\n│\xa0\xa0 │\xa0\xa0 ├── d2j-std-apk.sh\n│\xa0\xa0 │\xa0\xa0 ├── d2j_invoke.bat\n│\xa0\xa0 │\xa0\xa0 └── d2j_invoke.sh\n│\xa0\xa0 ├── dnSpy-netcore-win64\n│\xa0\xa0 │\xa0\xa0 ├── Accessibility.dll\n│\xa0\xa0 │\xa0\xa0 ├── CSharpInteractive.rsp\n│\xa0\xa0 │\xa0\xa0 ├── D3DCompiler_47_cor3.dll\n│\xa0\xa0 │\xa0\xa0 ├── DirectWriteForwarder.dll\n│\xa0\xa0 │\xa0\xa0 ├── FileLists\n│\xa0\xa0 │\xa0\xa0 ├── Humanizer.dll\n│\xa0\xa0 │\xa0\xa0 ├── ICSharpCode.Decompiler.dll\n│\xa0\xa0 │\xa0\xa0 ├── ICSharpCode.Decompiler.pdb\n│\xa0\xa0 │\xa0\xa0 ├── ICSharpCode.NRefactory.CSharp.dll\n│\xa0\xa0 │\xa0\xa0 ├── ICSharpCode.NRefactory.CSharp.pdb\n│\xa0\xa0 │\xa0\xa0 ├── ICSharpCode.NRefactory.VB.dll\n│\xa0\xa0 │\xa0\xa0 ├── ICSharpCode.NRefactory.VB.pdb\n│\xa0\xa0 │\xa0\xa0 ├── ICSharpCode.NRefactory.dll\n│\xa0\xa0 │\xa0\xa0 ├── ICSharpCode.NRefactory.pdb\n│\xa0\xa0 │\xa0\xa0 ├── ICSharpCode.TreeView.dll\n│\xa0\xa0 │\xa0\xa0 ├── ICSharpCode.TreeView.pdb\n│\xa0\xa0 │\xa0\xa0 ├── Iced.dll\n│\xa0\xa0 │\xa0\xa0 ├── LicenseInfo\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CSharp.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator.pdb\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.CSharp.Features.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.CSharp.Scripting.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.CSharp.Workspaces.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.CSharp.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.ExpressionEvaluator.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.ExpressionEvaluator.pdb\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.Features.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.Scripting.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.VisualBasic.ExpressionEvaluator.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.VisualBasic.ExpressionEvaluator.pdb\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.VisualBasic.Features.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.VisualBasic.Workspaces.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.VisualBasic.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.Workspaces.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.CodeAnalysis.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.DiaSymReader.Native.amd64.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.Diagnostics.Runtime.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualBasic.Core.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualBasic.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualStudio.Composition.NetFxAttributes.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualStudio.Composition.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualStudio.CoreUtility.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualStudio.Language.Intellisense.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualStudio.Text.Data.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualStudio.Text.Logic.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualStudio.Text.UI.Wpf.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualStudio.Text.UI.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.VisualStudio.Validation.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.Win32.Primitives.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.Win32.Registry.dll\n│\xa0\xa0 │\xa0\xa0 ├── Microsoft.Win32.SystemEvents.dll\n│\xa0\xa0 │\xa0\xa0 ├── Mono.Debugger.Soft.dll\n│\xa0\xa0 │\xa0\xa0 ├── Mono.Debugger.Soft.pdb\n│\xa0\xa0 │\xa0\xa0 ├── Ookii.Dialogs.Wpf.dll\n│\xa0\xa0 │\xa0\xa0 ├── PenImc_cor3.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationCore-CommonResources.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationCore.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework-SystemCore.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework-SystemData.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework-SystemDrawing.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework-SystemXml.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework-SystemXmlLinq.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework.Aero.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework.Aero2.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework.AeroLite.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework.Classic.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework.Luna.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework.Royale.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationFramework.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationNative_cor3.dll\n│\xa0\xa0 │\xa0\xa0 ├── PresentationUI.dll\n│\xa0\xa0 │\xa0\xa0 ├── ReachFramework.dll\n│\xa0\xa0 │\xa0\xa0 ├── SOS.NETCore.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.AppContext.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Buffers.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.CodeDom.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Collections.Concurrent.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Collections.Immutable.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Collections.NonGeneric.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Collections.Specialized.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Collections.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ComponentModel.Annotations.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ComponentModel.Composition.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ComponentModel.DataAnnotations.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ComponentModel.EventBasedAsync.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ComponentModel.Primitives.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ComponentModel.TypeConverter.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ComponentModel.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Composition.AttributedModel.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Composition.Convention.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Composition.Hosting.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Composition.Runtime.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Composition.TypedParts.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Configuration.ConfigurationManager.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Configuration.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Console.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Core.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Data.Common.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Data.DataSetExtensions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Data.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Design.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.Contracts.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.Debug.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.DiagnosticSource.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.EventLog.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.FileVersionInfo.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.Process.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.StackTrace.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.TextWriterTraceListener.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.Tools.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.TraceSource.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Diagnostics.Tracing.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.DirectoryServices.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Drawing.Common.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Drawing.Design.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Drawing.Primitives.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Drawing.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Dynamic.Runtime.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Globalization.Calendars.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Globalization.Extensions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Globalization.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.Compression.Brotli.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.Compression.FileSystem.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.Compression.ZipFile.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.Compression.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.FileSystem.AccessControl.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.FileSystem.DriveInfo.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.FileSystem.Primitives.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.FileSystem.Watcher.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.FileSystem.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.IsolatedStorage.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.MemoryMappedFiles.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.Packaging.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.Pipes.AccessControl.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.Pipes.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.UnmanagedMemoryStream.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.IO.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Linq.Expressions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Linq.Parallel.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Linq.Queryable.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Linq.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Memory.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.Http.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.HttpListener.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.Mail.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.NameResolution.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.NetworkInformation.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.Ping.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.Primitives.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.Requests.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.Security.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.ServicePoint.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.Sockets.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.WebClient.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.WebHeaderCollection.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.WebProxy.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.WebSockets.Client.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.WebSockets.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Net.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Numerics.Vectors.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Numerics.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ObjectModel.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Printing.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Private.CoreLib.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Private.DataContractSerialization.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Private.Uri.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Private.Xml.Linq.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Private.Xml.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Reflection.DispatchProxy.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Reflection.Emit.ILGeneration.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Reflection.Emit.Lightweight.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Reflection.Emit.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Reflection.Extensions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Reflection.Metadata.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Reflection.Primitives.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Reflection.TypeExtensions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Reflection.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Resources.Reader.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Resources.ResourceManager.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Resources.Writer.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.CompilerServices.Unsafe.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.CompilerServices.VisualC.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.Extensions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.Handles.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.InteropServices.RuntimeInformation.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.InteropServices.WindowsRuntime.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.InteropServices.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.Intrinsics.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.Loader.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.Numerics.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.Serialization.Formatters.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.Serialization.Json.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.Serialization.Primitives.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.Serialization.Xml.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.Serialization.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.WindowsRuntime.UI.Xaml.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.WindowsRuntime.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Runtime.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.AccessControl.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Claims.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Cryptography.Algorithms.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Cryptography.Cng.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Cryptography.Csp.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Cryptography.Encoding.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Cryptography.OpenSsl.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Cryptography.Pkcs.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Cryptography.Primitives.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Cryptography.ProtectedData.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Cryptography.X509Certificates.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Cryptography.Xml.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Permissions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Principal.Windows.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.Principal.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.SecureString.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Security.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ServiceModel.Web.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ServiceProcess.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Text.Encoding.CodePages.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Text.Encoding.Extensions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Text.Encoding.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Text.Json.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Text.RegularExpressions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Threading.AccessControl.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Threading.Overlapped.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Threading.Tasks.Dataflow.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Threading.Tasks.Extensions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Threading.Tasks.Parallel.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Threading.Tasks.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Threading.Thread.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Threading.ThreadPool.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Threading.Timer.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Threading.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Transactions.Local.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Transactions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.ValueTuple.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Web.HttpUtility.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Web.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Windows.Controls.Ribbon.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Windows.Extensions.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Windows.Forms.Design.Editors.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Windows.Forms.Design.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Windows.Forms.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Windows.Input.Manipulations.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Windows.Presentation.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Windows.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Xaml.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Xml.Linq.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Xml.ReaderWriter.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Xml.Serialization.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Xml.XDocument.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Xml.XPath.XDocument.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Xml.XPath.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Xml.XmlDocument.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Xml.XmlSerializer.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.Xml.dll\n│\xa0\xa0 │\xa0\xa0 ├── System.dll\n│\xa0\xa0 │\xa0\xa0 ├── Themes\n│\xa0\xa0 │\xa0\xa0 ├── UIAutomationClient.dll\n│\xa0\xa0 │\xa0\xa0 ├── UIAutomationClientSideProviders.dll\n│\xa0\xa0 │\xa0\xa0 ├── UIAutomationProvider.dll\n│\xa0\xa0 │\xa0\xa0 ├── UIAutomationTypes.dll\n│\xa0\xa0 │\xa0\xa0 ├── WindowsBase.dll\n│\xa0\xa0 │\xa0\xa0 ├── WindowsFormsIntegration.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-console-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-datetime-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-debug-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-errorhandling-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-file-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-file-l1-2-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-file-l2-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-handle-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-heap-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-interlocked-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-libraryloader-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-localization-l1-2-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-memory-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-namedpipe-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-processenvironment-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-processthreads-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-processthreads-l1-1-1.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-profile-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-rtlsupport-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-string-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-synch-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-synch-l1-2-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-sysinfo-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-timezone-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-core-util-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-conio-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-convert-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-environment-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-filesystem-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-heap-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-locale-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-math-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-multibyte-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-private-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-process-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-runtime-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-stdio-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-string-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-time-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── api-ms-win-crt-utility-l1-1-0.dll\n│\xa0\xa0 │\xa0\xa0 ├── clrcompression.dll\n│\xa0\xa0 │\xa0\xa0 ├── clretwrc.dll\n│\xa0\xa0 │\xa0\xa0 ├── clrjit.dll\n│\xa0\xa0 │\xa0\xa0 ├── coreclr.dll\n│\xa0\xa0 │\xa0\xa0 ├── dbgshim.dll\n│\xa0\xa0 │\xa0\xa0 ├── de\n│\xa0\xa0 │\xa0\xa0 ├── debug\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Analyzer.x.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Analyzer.x.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Analyzer.x.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.AsmEditor.x.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.AsmEditor.x.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.AsmEditor.x.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.BamlDecompiler.x.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.BamlDecompiler.x.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.BamlDecompiler.x.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Console.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Console.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Console.dll.config\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Console.exe\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Console.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Console.runtimeconfig.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.DotNet.CorDebug.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.DotNet.CorDebug.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.DotNet.CorDebug.xml\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.DotNet.Mono.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.DotNet.Mono.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.DotNet.Mono.xml\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.DotNet.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.DotNet.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.DotNet.xml\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Debugger.xml\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.DnSpy.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.DnSpy.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.DnSpy.xml\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Logic.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Logic.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Contracts.Logic.xml\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.CorDebug.x.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.CorDebug.x.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.CorDebug.x.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.Interpreter.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.Interpreter.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.Interpreter.xml\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.Metadata.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.Metadata.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.Metadata.xml\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.Mono.x.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.Mono.x.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.Mono.x.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.x.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.x.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.DotNet.x.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.x.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.x.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Debugger.x.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Decompiler.ILSpy.Core.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Decompiler.ILSpy.Core.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Decompiler.ILSpy.x.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Decompiler.ILSpy.x.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Decompiler.ILSpy.x.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Decompiler.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Decompiler.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Images.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Images.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.CSharp.EditorFeatures.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.CSharp.EditorFeatures.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.CSharp.Internal.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.CSharp.Internal.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.EditorFeatures.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.EditorFeatures.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.Internal.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.Internal.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.VisualBasic.EditorFeatures.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.VisualBasic.EditorFeatures.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.VisualBasic.Internal.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.VisualBasic.Internal.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Roslyn.xml\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Scripting.Roslyn.x.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Scripting.Roslyn.x.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.Scripting.Roslyn.x.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.deps.json\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.dll\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.dll.config\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.exe\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.pdb\n│\xa0\xa0 │\xa0\xa0 ├── dnSpy.runtimeconfig.json\n│\xa0\xa0 │\xa0\xa0 ├── dnlib.dll\n│\xa0\xa0 │\xa0\xa0 ├── es\n│\xa0\xa0 │\xa0\xa0 ├── es-ES\n│\xa0\xa0 │\xa0\xa0 ├── fa\n│\xa0\xa0 │\xa0\xa0 ├── fr\n│\xa0\xa0 │\xa0\xa0 ├── hostfxr.dll\n│\xa0\xa0 │\xa0\xa0 ├── hostpolicy.dll\n│\xa0\xa0 │\xa0\xa0 ├── hu\n│\xa0\xa0 │\xa0\xa0 ├── it\n│\xa0\xa0 │\xa0\xa0 ├── mscordaccore.dll\n│\xa0\xa0 │\xa0\xa0 ├── mscordaccore_amd64_amd64_4.6.27622.75.dll\n│\xa0\xa0 │\xa0\xa0 ├── mscordbi.dll\n│\xa0\xa0 │\xa0\xa0 ├── mscorlib.dll\n│\xa0\xa0 │\xa0\xa0 ├── mscorrc.debug.dll\n│\xa0\xa0 │\xa0\xa0 ├── mscorrc.dll\n│\xa0\xa0 │\xa0\xa0 ├── netstandard.dll\n│\xa0\xa0 │\xa0\xa0 ├── pt-PT\n│\xa0\xa0 │\xa0\xa0 ├── ru\n│\xa0\xa0 │\xa0\xa0 ├── sos.dll\n│\xa0\xa0 │\xa0\xa0 ├── sos_amd64_amd64_4.6.27622.75.dll\n│\xa0\xa0 │\xa0\xa0 ├── tr\n│\xa0\xa0 │\xa0\xa0 ├── ucrtbase.dll\n│\xa0\xa0 │\xa0\xa0 ├── uk\n│\xa0\xa0 │\xa0\xa0 ├── vcruntime140_cor3.dll\n│\xa0\xa0 │\xa0\xa0 ├── wpfgfx_cor3.dll\n│\xa0\xa0 │\xa0\xa0 └── zh-CN\n│\xa0\xa0 ├── jd-gui1.6\n│\xa0\xa0 │\xa0\xa0 ├── classes-dex2jar.jar\n│\xa0\xa0 │\xa0\xa0 └── jd-gui-1.6.3.jar\n│\xa0\xa0 ├── upx\n│\xa0\xa0 │\xa0\xa0 └── upx-3.96-win64.zip\n│\xa0\xa0 └── 吾爱破解专用版Ollydbg\n│\xa0\xa0     ├── DBGHELP.DLL\n│\xa0\xa0     ├── ICO\n│\xa0\xa0     ├── LIB\n│\xa0\xa0     ├── LoadDll.dll\n│\xa0\xa0     ├── Loaddll.exe\n│\xa0\xa0     ├── OLLYDBG.HLP\n│\xa0\xa0     ├── OllyDBG.EXE\n│\xa0\xa0     ├── UDD\n│\xa0\xa0     ├── Udd Cleaner.exe\n│\xa0\xa0     ├── ollydbg.ini\n│\xa0\xa0     ├── ollydbg_白底黑字配置.ini\n│\xa0\xa0     ├── plugin\n│\xa0\xa0     ├── 使用说明.txt\n│\xa0\xa0     ├── 原版\n│\xa0\xa0     ├── 吾爱破解[LCG].exe\n│\xa0\xa0     └── 路径修复工具.exe\n└── 隐写\n    ├── Andriod\n    │\xa0\xa0 ├── ImgHid and Reveal\n    │\xa0\xa0 ├── My Secret\n    │\xa0\xa0 └── StegDroid0.75.apk\n    ├── FileSystem\n    │\xa0\xa0 └── ntfs流隐写\n    ├── Html隐写.txt\n    ├── IOS\n    │\xa0\xa0 ├── InvisiLetter\n    │\xa0\xa0 ├── Spy Pix\n    │\xa0\xa0 └── Stego Sec\n    ├── OpenPuff\n    │\xa0\xa0 ├── OpenPuff.exe\n    │\xa0\xa0 ├── OpenPuff_license.txt\n    │\xa0\xa0 ├── html\n    │\xa0\xa0 ├── libObfuscate.dll\n    │\xa0\xa0 └── libObfuscate_license.txt\n    ├── PDF隐写\n    │\xa0\xa0 ├── OWASP TOP10.pdf\n    │\xa0\xa0 ├── PDFStreamDumper_Setup.exe\n    │\xa0\xa0 ├── PDFTemplate.zip\n    │\xa0\xa0 ├── kali_pdfto.txt\n    │\xa0\xa0 ├── make-pdf_V0_1_6.zip\n    │\xa0\xa0 ├── pdf-parser_V0_6_5.py\n    │\xa0\xa0 ├── pdf-parser_V0_6_5.zip\n    │\xa0\xa0 ├── pdfid_v0_2_1\n    │\xa0\xa0 ├── pdfid_v0_2_1.zip\n    │\xa0\xa0 ├── pdfxray_lite-master.zip\n    │\xa0\xa0 ├── peepdf_0.3.zip\n    │\xa0\xa0 ├── wbs43open-win32\n    │\xa0\xa0 └── wbs43open-win32.zip\n    ├── Rizzy\n    │\xa0\xa0 ├── COPYING\n    │\xa0\xa0 ├── README\n    │\xa0\xa0 ├── rizzy.glade\n    │\xa0\xa0 ├── rizzy.py\n    │\xa0\xa0 ├── rizzy.xml\n    │\xa0\xa0 ├── rstep.py\n    │\xa0\xa0 └── stepic.py\n    ├── StegSpy2.1\n    │\xa0\xa0 ├── Comdlg32.ocx\n    │\xa0\xa0 └── StegSpy2.1.exe\n    ├── StegoStick\n    │\xa0\xa0 ├── EndUser Version\n    │\xa0\xa0 └── Source Code\n    ├── openstego\n    │\xa0\xa0 ├── LICENSE\n    │\xa0\xa0 ├── README\n    │\xa0\xa0 ├── build\n    │\xa0\xa0 ├── build.xml\n    │\xa0\xa0 ├── doc\n    │\xa0\xa0 ├── installer.nsi\n    │\xa0\xa0 ├── lib\n    │\xa0\xa0 ├── msb_examples\n    │\xa0\xa0 ├── openstego.bat\n    │\xa0\xa0 ├── openstego.sh\n    │\xa0\xa0 └── src\n    ├── s-tools4\n    │\xa0\xa0 ├── 1000046611283.bmp\n    │\xa0\xa0 ├── GIFutil.dll\n    │\xa0\xa0 ├── S-Tools.exe\n    │\xa0\xa0 ├── S-Tools.hlp\n    │\xa0\xa0 ├── cryptlib.dll\n    │\xa0\xa0 ├── new.bmp\n    │\xa0\xa0 └── zlib.dll\n    ├── 可执行文件隐写\n    │\xa0\xa0 ├── hydan\n    │\xa0\xa0 └── hydan-0.13.tar.gz\n    ├── 各种格式的文件头.doc\n    ├── 图像隐写\n    │\xa0\xa0 ├── 1.py\n    │\xa0\xa0 ├── BlindWaterMark\n    │\xa0\xa0 ├── CameraShy.0.2.23.1.exe\n    │\xa0\xa0 ├── CoagulaLight1666\n    │\xa0\xa0 ├── Exif Tag Remover.rar\n    │\xa0\xa0 ├── F5\n    │\xa0\xa0 ├── Filters\n    │\xa0\xa0 ├── GifSplitter 2.0\n    │\xa0\xa0 ├── IHDR.py\n    │\xa0\xa0 ├── Image Steganography\n    │\xa0\xa0 ├── Image Steganography Setup.exe\n    │\xa0\xa0 ├── ImageHide.EXE\n    │\xa0\xa0 ├── JCS.jar\n    │\xa0\xa0 ├── LSB\n    │\xa0\xa0 ├── Namo Gif Animator.exe\n    │\xa0\xa0 ├── Outguess Rebirth_1-3\n    │\xa0\xa0 ├── PNG-Steganography\n    │\xa0\xa0 ├── StegoTool\n    │\xa0\xa0 ├── Stegsolve.jar\n    │\xa0\xa0 ├── busysteg-master\n    │\xa0\xa0 ├── exiftool-18.25\n    │\xa0\xa0 ├── gifshuffle-win-bin.zip\n    │\xa0\xa0 ├── hinaLayer\n    │\xa0\xa0 ├── jpeg-v4.tar.gz\n    │\xa0\xa0 ├── jpgx211\n    │\xa0\xa0 ├── jphs_05\n    │\xa0\xa0 ├── mandsteg-10.tar.gz\n    │\xa0\xa0 ├── openstego-0.6.1\n    │\xa0\xa0 ├── outguess-0.2.tar.gz\n    │\xa0\xa0 ├── png-debugger\n    │\xa0\xa0 ├── pngcheck-2.3.0-win32\n    │\xa0\xa0 ├── steganabara-1.1.1.tar.gz\n    │\xa0\xa0 ├── stegdetect-0.4-windows\n    │\xa0\xa0 ├── steghide\n    │\xa0\xa0 ├── tweakpng-1.4.6\n    │\xa0\xa0 ├── vsl-1.1\n    │\xa0\xa0 ├── wbs43open-win32\n    │\xa0\xa0 ├── wbs43open-win32.zip\n    │\xa0\xa0 ├── 二维码\n    │\xa0\xa0 ├── 拼图\n    │\xa0\xa0 ├── 深入理解JPEG图像格式Jphide隐写.html\n    │\xa0\xa0 └── 盲水印\n    ├── 在线工具.txt\n    ├── 必看书籍\n    │\xa0\xa0 └── 数据隐藏技术揭秘：破解多媒体、操作系统、移动设备和网络协议中的隐秘数据.pdf\n    ├── 视频隐写\n    │\xa0\xa0 ├── AVI\n    │\xa0\xa0 ├── DeEggerSetup131.msi\n    │\xa0\xa0 ├── MP4 QuickTime\n    │\xa0\xa0 └── ffmpeg-latest-win32-static\n    ├── 隐写和数字水印工具表.txt\n    └── 音频隐写\n        ├── audacity-win-2-1-2.exe\n        ├── mp3stego-gui\n        ├── mp3stego-gui.zip\n        └── silenteye-0.4.1-win32.exe\n```\n\n']
joy5,AV toolkit,360,https://github.com/nareix/joy5,master,['# JOY5\n\nAV Toolkit.\n\n### Install\n\n```sh\ngo get github.com/nareix/joy5/cmd/avtool\n```\n\n### Benchmark RTMP\n\n```sh\navtool servertmp :1935 movie.flv &\nsb_rtmp_load -c 1 -r rtmp://127.0.0.1:1935/live/livestream\n```\n\n### Skip gop\n\n```sh\navtool skipgop in.flv out.flv\n```\n']
MiNLP,XiaoMi Natural Language Processing Toolkits ,739,https://github.com/XiaoMi/MiNLP,main,['# MiNLP\n小米自然语言处理平台（MiNLP）具备词法、句法、语义分析等数十个功能模块，已经在公司业务中得到了广泛应用。\n\nMiNLP-Tokenizer中文分词工具经过不断优化和实战打磨，已于2020年11月正式对外开源。\n\n我们计划在2021年Q2完成所有词法工具（词性标注和命名实体识别）的开源，从2021年Q3开始，我们将逐步开源句法分析和部分语义分析工具，和开发者一起打造功能强大、效果领先的NLP平台。\n\nduckling-fork-chinese中文结构化解析工具，是在facebook/duckling的基础上做的一个JVM fork，满足从文本到结构化对象的转换。目前工具在小爱生产环境大量使用，最重要的应用是在数字和时间上的解析。\n\n## 模块\n中文分词：MiNLP-Tokenizer（[传送门](./minlp-tokenizer)）\n\n词性标注：施工中，敬请期待\n\n命名实体识别：敬请期待\n\n依存句法分析：敬请期待\n\n结构化解析：[duckling-fork-chinese](./duckling-fork-chinese)\n']
redux_toolkit_rtk_query,nan,372,https://github.com/utimur/redux_toolkit_rtk_query,master,['# Не забудь звезду!\n']
APIKit,APIKit：Discovery, Scan and Audit APIs Toolkit All In One.,1175,https://github.com/API-Security/APIKit,main,['APIKit：Discovery, Scan and Audit APIs Toolkit All In One.\n===\n\n# 介绍\n**APIKit**是[APISecurity社区](https://github.com/API-Security)发布的第一个开源项目。\n\n**APIKit**是基于`BurpSuite`提供的`JavaAPI`开发的插件。 \n\n**APIKit**可以主动/被动扫描发现应用泄露的`API文档`，并将`API文档`解析成`BurpSuite`中的数据包用于**API安全测试**。\n\n![](./img/APIKit_ch.png)\n\n实际使用效果如图：\n![](./img/demo.png)\n\n# API技术指纹支持\nAPIKit v1.0支持的API技术的指纹有：\n- [x] GraphQL\n- [x] OpenAPI-Swagger \n- [x] SpringbootActuator\n- [x] SOAP-WSDL\n\n更多的API指纹正在努力更新~\n- [ ] REST-WADL\n- [ ] gRPC\n- [ ] UPnP\n- [ ] 更多主流API技术...\n\n\n\n# 安装\n打开`BurpSuite`页面,点击Extender然后选择Extensions,添加APIKit.jar。\n![](./img/install.png)\n然后APIKit会对进入到`BurpSuite`的流量进行被动扫描。解析完成后可以在APIKit面板查看结果，同样Burpsuite的DashBoard也会有issue提示。\n![](./img/demo.png)\n![](./img/dashboard.png)\n\n# 配置\n默认情况下Request和Cookie都不开启。\n![](./img/config.png)\n## Send with Cookie\n开启Cookie，可以把包的Cookie存下来，生成请求的时候保留Cookie。\n\n## Auto Request Sending\n开启对API的请求，注意开启API请求后。你需要明确以下几点：\n\n**1. 本工具仅面向合法授权的企业安全建设行为，如您需要测试本工具的可用性，请自行搭建靶机环境。**\n\n**2. 在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权。请勿对非授权目标进行请求。**\n\n**3. 如您在使用本工具的过程中存在任何非法行为或造成其他损失，您需自行承担相应后果，我们将不承担任何法律及连带责任。**\n\n**4. 在安装并使用本工具前，请您务必审慎阅读、充分理解各条款内容，限制、免责条款或者其他涉及您重大权益的条款可能会以加粗、加下划线等形式提示您重点注意。 除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。**\n\n选择开启Auto Request Sending后，可以对子API进行自动化鉴权测试，快速发现API未授权访问漏洞。\n![](./img/req.png)\n\n# 被动扫描\n默认情况下流经BurpSuite的流量都会进行API探测解析和扫描。\n# 主动扫描\n在任何一个Burpsuite可以右键打开更多选项的页面中，都可以**点击右键**，选择**Do API scan**来发起一次主动扫描。\n![](./img/activescan.jpg)\n\n\n# API漏洞自动扫描\n所有与`BurpSuite`联动的工具均可联动APIKit。比如xray。\n## xray配置\n```shell\n./xray_darwin_amd64 webscan --listen 127.0.0.1:7777  --html-output APIKit.html\n```\n![](./img/xray.png)\n## BurpSuite配置\n![](./img/xrayburp.png)\n\n# 实战案例\n1. 某授权项目站点为/xxgateway/index，APIKit帮助发现/xxgateway/actuator并最后完成RCE。\n2. 某SRC站点使用了swagger，使用APIKit和xray联动遍历所有的API，最终发现多个高危严重漏洞。\n3. 更多白/黑盒测试...\n\n# TODO\n## 更多的API指纹\n- Jolokia\n- REST-WADL\n- gRPC\n- UPnP\n- 更多主流API技术...\n## 更多实用功能\n- Fuzz鉴权绕过漏洞\n- 检测请求返回包中敏感信息\n— 发现js中泄露的API \n— 常见数据解析依赖库识别，比如Fastjson等\n- 更多实用功能...\n\n# 项目地址\n\nhttps://github.com/API-Security/APIKit\n![](./img/APISecurity.png)\n**API Security是一个分享一切和API安全相关的工具、漏洞环境、书籍、技术文章、新闻资讯、最佳实践白皮书等资料的社区。**\n\n**API Security知识星球永久免费，欢迎对API安全感兴趣的信息安全爱好者一起学习交流。**\n\n![](./img/zsxq.jpg)\n\n']
pkuseg-python,pkuseg多领域中文分词工具; The pkuseg toolkit for multi-domain Chinese word segmentation,6088,https://github.com/lancopku/pkuseg-python,master,['# pkuseg：一个多领域中文分词工具包 [**(English Version)**](readme/readme_english.md)\r\n\r\npkuseg 是基于论文[[Luo et. al, 2019](#论文引用)]的工具包。其简单易用，支持细分领域分词，有效提升了分词准确度。\r\n\r\n\r\n\r\n## 目录\r\n\r\n* [主要亮点](#主要亮点)\r\n* [编译和安装](#编译和安装)\r\n* [各类分词工具包的性能对比](#各类分词工具包的性能对比)\r\n* [使用方式](#使用方式)\r\n* [论文引用](#论文引用)\r\n* [作者](#作者)\r\n* [常见问题及解答](#常见问题及解答)\r\n\r\n\r\n\r\n## 主要亮点\r\n\r\npkuseg具有如下几个特点：\r\n\r\n1. 多领域分词。不同于以往的通用中文分词工具，此工具包同时致力于为不同领域的数据提供个性化的预训练模型。根据待分词文本的领域特点，用户可以自由地选择不同的模型。 我们目前支持了新闻领域，网络领域，医药领域，旅游领域，以及混合领域的分词预训练模型。在使用中，如果用户明确待分词的领域，可加载对应的模型进行分词。如果用户无法确定具体领域，推荐使用在混合领域上训练的通用模型。各领域分词样例可参考 [**example.txt**](https://github.com/lancopku/pkuseg-python/blob/master/example.txt)。\r\n2. 更高的分词准确率。相比于其他的分词工具包，当使用相同的训练数据和测试数据，pkuseg可以取得更高的分词准确率。\r\n3. 支持用户自训练模型。支持用户使用全新的标注数据进行训练。\r\n4. 支持词性标注。\r\n\r\n\r\n## 编译和安装\r\n\r\n- 目前**仅支持python3**\r\n- **为了获得好的效果和速度，强烈建议大家通过pip install更新到目前的最新版本**\r\n\r\n1. 通过PyPI安装(自带模型文件)：\r\n\t```\r\n\tpip3 install pkuseg\r\n\t之后通过import pkuseg来引用\r\n\t```\r\n   **建议更新到最新版本**以获得更好的开箱体验：\r\n   \t```\r\n\tpip3 install -U pkuseg\r\n\t```\r\n2. 如果PyPI官方源下载速度不理想，建议使用镜像源，比如：   \r\n   初次安装：\r\n\t```\r\n\tpip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple pkuseg\r\n\t```\r\n   更新：\r\n\t```\r\n\tpip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple -U pkuseg\r\n\t```\r\n   \r\n3. 如果不使用pip安装方式，选择从GitHub下载，可运行以下命令安装：\r\n\t```\r\n\tpython setup.py build_ext -i\r\n\t```\r\n\t\r\n   GitHub的代码并不包括预训练模型，因此需要用户自行下载或训练模型，预训练模型可详见[release](https://github.com/lancopku/pkuseg-python/releases)。使用时需设定"model_name"为模型文件。\r\n\r\n注意：**安装方式1和2目前仅支持linux(ubuntu)、mac、windows 64 位的python3版本**。如果非以上系统，请使用安装方式3进行本地编译安装。\r\n\t\r\n\r\n## 各类分词工具包的性能对比\r\n\r\n我们选择jieba、THULAC等国内代表分词工具包与pkuseg做性能比较，详细设置可参考[实验环境](readme/environment.md)。\r\n\r\n\r\n\r\n#### 细领域训练及测试结果\r\n\r\n以下是在不同数据集上的对比结果：\r\n\r\n| MSRA   | Precision | Recall |   F-score |\r\n| :----- | --------: | -----: | --------: |\r\n| jieba  |     87.01 |  89.88 |     88.42 |\r\n| THULAC |     95.60 |  95.91 |     95.71 |\r\n| pkuseg |     96.94 |  96.81 | **96.88** |\r\n\r\n\r\n| WEIBO  | Precision | Recall |   F-score |\r\n| :----- | --------: | -----: | --------: |\r\n| jieba  |     87.79 |  87.54 |     87.66 |\r\n| THULAC |     93.40 |  92.40 |     92.87 |\r\n| pkuseg |     93.78 |  94.65 | **94.21** |\r\n\r\n\r\n\r\n\r\n#### 默认模型在不同领域的测试效果\r\n\r\n考虑到很多用户在尝试分词工具的时候，大多数时候会使用工具包自带模型测试。为了直接对比“初始”性能，我们也比较了各个工具包的默认模型在不同领域的测试效果。请注意，这样的比较只是为了说明默认情况下的效果，并不一定是公平的。\r\n\r\n| Default | MSRA  | CTB8  | PKU   | WEIBO | All Average |\r\n| ------- | :---: | :---: | :---: | :---: | :---------: |\r\n| jieba  | 81.45 | 79.58 | 81.83 | 83.56 | 81.61       |\r\n| THULAC |\t85.55 | 87.84 | 92.29 | 86.65 | 88.08 |\r\n| pkuseg | 87.29 | 91.77 | 92.68 | 93.43 | **91.29**   |\r\n\r\n其中，`All Average`显示的是在所有测试集上F-score的平均。\r\n\r\n更多详细比较可参见[和现有工具包的比较](readme/comparison.md)。\r\n\r\n## 使用方式\r\n\r\n#### 代码示例\r\n\r\n以下代码示例适用于python交互式环境。\r\n\r\n代码示例1：使用默认配置进行分词（**如果用户无法确定分词领域，推荐使用默认模型分词**）\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg()           # 以默认配置加载模型\r\ntext = seg.cut(\'我爱北京天安门\')  # 进行分词\r\nprint(text)\r\n```\r\n\r\n代码示例2：细领域分词（**如果用户明确分词领域，推荐使用细领域模型分词**）\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg(model_name=\'medicine\')  # 程序会自动下载所对应的细领域模型\r\ntext = seg.cut(\'我爱北京天安门\')              # 进行分词\r\nprint(text)\r\n```\r\n\r\n代码示例3：分词同时进行词性标注，各词性标签的详细含义可参考 [tags.txt](https://github.com/lancopku/pkuseg-python/blob/master/tags.txt)\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg(postag=True)  # 开启词性标注功能\r\ntext = seg.cut(\'我爱北京天安门\')    # 进行分词和词性标注\r\nprint(text)\r\n```\r\n\r\n\r\n代码示例4：对文件分词\r\n```python3\r\nimport pkuseg\r\n\r\n# 对input.txt的文件分词输出到output.txt中\r\n# 开20个进程\r\npkuseg.test(\'input.txt\', \'output.txt\', nthread=20)     \r\n```\r\n\r\n其他使用示例可参见[详细代码示例](readme/interface.md)。\r\n\r\n\r\n\r\n#### 参数说明\r\n\r\n模型配置\r\n```\r\npkuseg.pkuseg(model_name = "default", user_dict = "default", postag = False)\r\n\tmodel_name\t\t模型路径。\r\n\t\t\t        "default"，默认参数，表示使用我们预训练好的混合领域模型(仅对pip下载的用户)。\r\n\t\t\t\t"news", 使用新闻领域模型。\r\n\t\t\t\t"web", 使用网络领域模型。\r\n\t\t\t\t"medicine", 使用医药领域模型。\r\n\t\t\t\t"tourism", 使用旅游领域模型。\r\n\t\t\t        model_path, 从用户指定路径加载模型。\r\n\tuser_dict\t\t设置用户词典。\r\n\t\t\t\t"default", 默认参数，使用我们提供的词典。\r\n\t\t\t\tNone, 不使用词典。\r\n\t\t\t\tdict_path, 在使用默认词典的同时会额外使用用户自定义词典，可以填自己的用户词典的路径，词典格式为一行一个词（如果选择进行词性标注并且已知该词的词性，则在该行写下词和词性，中间用tab字符隔开）。\r\n\tpostag\t\t        是否进行词性分析。\r\n\t\t\t\tFalse, 默认参数，只进行分词，不进行词性标注。\r\n\t\t\t\tTrue, 会在分词的同时进行词性标注。\r\n```\r\n\r\n对文件进行分词\r\n```\r\npkuseg.test(readFile, outputFile, model_name = "default", user_dict = "default", postag = False, nthread = 10)\r\n\treadFile\t\t输入文件路径。\r\n\toutputFile\t\t输出文件路径。\r\n\tmodel_name\t\t模型路径。同pkuseg.pkuseg\r\n\tuser_dict\t\t设置用户词典。同pkuseg.pkuseg\r\n\tpostag\t\t\t设置是否开启词性分析功能。同pkuseg.pkuseg\r\n\tnthread\t\t\t测试时开的进程数。\r\n```\r\n\r\n模型训练\r\n```\r\npkuseg.train(trainFile, testFile, savedir, train_iter = 20, init_model = None)\r\n\ttrainFile\t\t训练文件路径。\r\n\ttestFile\t\t测试文件路径。\r\n\tsavedir\t\t\t训练模型的保存路径。\r\n\ttrain_iter\t\t训练轮数。\r\n\tinit_model\t\t初始化模型，默认为None表示使用默认初始化，用户可以填自己想要初始化的模型的路径如init_model=\'./models/\'。\r\n```\r\n\r\n\r\n\r\n#### 多进程分词\r\n\r\n当将以上代码示例置于文件中运行时，如涉及多进程功能，请务必使用`if __name__ == \'__main__\'`保护全局语句，详见[多进程分词](readme/multiprocess.md)。\r\n\r\n\r\n\r\n## 预训练模型\r\n\r\n从pip安装的用户在使用细领域分词功能时，只需要设置model_name字段为对应的领域即可，会自动下载对应的细领域模型。\r\n\r\n从github下载的用户则需要自己下载对应的预训练模型，并设置model_name字段为预训练模型路径。预训练模型可以在[release](https://github.com/lancopku/pkuseg-python/releases)部分下载。以下是对预训练模型的说明：\r\n\r\n- **news**: 在MSRA（新闻语料）上训练的模型。\r\n\r\n- **web**: 在微博（网络文本语料）上训练的模型。\r\n\r\n- **medicine**: 在医药领域上训练的模型。\r\n\r\n- **tourism**: 在旅游领域上训练的模型。\r\n\r\n- **mixed**: 混合数据集训练的通用模型。随pip包附带的是此模型。\r\n\r\n我们还通过领域自适应的方法，利用维基百科的未标注数据实现了几个细领域预训练模型的自动构建以及通用模型的优化，这些模型目前仅可以在release中下载：\r\n\r\n- **art**: 在艺术与文化领域上训练的模型。\r\n\r\n- **entertainment**: 在娱乐与体育领域上训练的模型。\r\n\r\n- **science**: 在科学领域上训练的模型。\r\n\r\n- **default_v2**: 使用领域自适应方法得到的优化后的通用模型，相较于默认模型规模更大，但泛化性能更好。\r\n\r\n\r\n\r\n欢迎更多用户可以分享自己训练好的细分领域模型。\r\n\r\n\r\n\r\n## 版本历史\r\n\r\n详见[版本历史](readme/history.md)。\r\n\r\n\r\n## 开源协议\r\n1. 本代码采用MIT许可证。\r\n2. 欢迎对该工具包提出任何宝贵意见和建议，请发邮件至jingjingxu@pku.edu.cn。\r\n\r\n\r\n\r\n## 论文引用\r\n\r\n该代码包主要基于以下科研论文，如使用了本工具，请引用以下论文：\r\n* Ruixuan Luo, Jingjing Xu, Yi Zhang, Zhiyuan Zhang, Xuancheng Ren, Xu Sun. [PKUSEG: A Toolkit for Multi-Domain Chinese Word Segmentation](https://arxiv.org/abs/1906.11455). Arxiv. 2019.\r\n\r\n```\r\n\r\n@article{pkuseg,\r\n  author = {Luo, Ruixuan and Xu, Jingjing and Zhang, Yi and Zhang, Zhiyuan and Ren, Xuancheng and Sun, Xu},\r\n  journal = {CoRR},\r\n  title = {PKUSEG: A Toolkit for Multi-Domain Chinese Word Segmentation.},\r\n  url = {https://arxiv.org/abs/1906.11455},\r\n  volume = {abs/1906.11455},\r\n  year = 2019\r\n}\r\n```\r\n\r\n## 其他相关论文\r\n\r\n* Xu Sun, Houfeng Wang, Wenjie Li. Fast Online Training with Frequency-Adaptive Learning Rates for Chinese Word Segmentation and New Word Detection. ACL. 2012.\r\n* Jingjing Xu and Xu Sun. Dependency-based gated recursive neural network for chinese word segmentation. ACL. 2016.\r\n* Jingjing Xu and Xu Sun. Transfer learning for low-resource chinese word segmentation with a novel neural network. NLPCC. 2017.\r\n\r\n## 常见问题及解答\r\n\r\n\r\n1. [为什么要发布pkuseg？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#1-为什么要发布pkuseg)\r\n2. [pkuseg使用了哪些技术？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#2-pkuseg使用了哪些技术)\r\n3. [无法使用多进程分词和训练功能，提示RuntimeError和BrokenPipeError。](https://github.com/lancopku/pkuseg-python/wiki/FAQ#3-无法使用多进程分词和训练功能提示runtimeerror和brokenpipeerror)\r\n4. [是如何跟其它工具包在细领域数据上进行比较的？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#4-是如何跟其它工具包在细领域数据上进行比较的)\r\n5. [在黑盒测试集上进行比较的话，效果如何？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#5-在黑盒测试集上进行比较的话效果如何)\r\n6. [如果我不了解待分词语料的所属领域呢？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#6-如果我不了解待分词语料的所属领域呢)\r\n7. [如何看待在一些特定样例上的分词结果？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#7-如何看待在一些特定样例上的分词结果)\r\n8. [关于运行速度问题？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#8-关于运行速度问题)\r\n9. [关于多进程速度问题？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#9-关于多进程速度问题)\r\n\r\n\r\n## 致谢\r\n\r\n感谢俞士汶教授（北京大学计算语言所）与邱立坤博士提供的训练数据集！\r\n\r\n## 作者\r\n\r\nRuixuan Luo （罗睿轩）,  Jingjing Xu（许晶晶）, Xuancheng Ren（任宣丞）, Yi Zhang（张艺）, Zhiyuan Zhang（张之远）, Bingzhen Wei（位冰镇）， Xu Sun （孙栩）  \r\n\r\n北京大学 [语言计算与机器学习研究组](http://lanco.pku.edu.cn/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n']
PaddleX,PaddlePaddle End-to-End Development Toolkit（『飞桨』深度学习全流程开发工具）,4173,https://github.com/PaddlePaddle/PaddleX,develop,['<p align="center">\n  <img src="./docs/gui/images/paddlex.png" width="360" height ="55" alt="PaddleX" align="middle" />\n</p>\n <p align= "center"> PaddleX -- 飞桨全流程开发工具，以低代码的形式支持开发者快速实现产业实际项目落地 </p>\n\n<p align="left">\n    <a href="./LICENSE"><img src="https://img.shields.io/badge/license-Apache%202-red.svg"></a>\n    <a href="https://github.com/PaddlePaddle/PaddleX/releases"><img src="https://img.shields.io/github/release/PaddlePaddle/PaddleX.svg"></a>\n    <a href=""><img src="https://img.shields.io/badge/python-3.6+-orange.svg"></a>\n    <a href=""><img src="https://img.shields.io/badge/os-linux%2C%20win%2C%20mac-yellow.svg"></a>\n    <a href=""><img src="https://img.shields.io/badge/QQ_Group-957286141-52B6EF?style=social&logo=tencent-qq&logoColor=000&logoWidth=20"></a>\n</p>\n\n\n\n## 近期动态\n\n2021.12.10 PaddleX发布2.1.0版本\n* 新增超轻量分类模型PPLCNet，在Intel CPU上，单张图像预测速度约5ms，ImageNet-1K数据集上Top1识别准确率达到80.82%，超越ResNet152的模型效果 [欢迎体验](./tutorials/train/image_classification/pplcnet.py)\n* 新增轻量级检测特色模型PP-PicoDet，第一个在1M参数量之内mAP(0.5:0.95)超越30+(输入416像素时)，网络预测在ARM CPU下可达150FPS [欢迎体验](./tutorials/train/object_detection/picodet.py)\n* 升级PaddleX Restful API，支持飞桨动态图开发模式 [欢迎体验](docs/Resful_API/docs/readme.md)\n* 新增检测模型负样本训练策略 [欢迎体验](docs/data/format/detection.md#3)\n* 新增python轻量级服务化部署 [欢迎体验](./docs/hub_serving_deploy.md)\n\n\n详情内容请参考[版本更新文档](./docs/CHANGELOG.md)。\n\n## 产品介绍\n:hugs: PaddleX 集成飞桨智能视觉领域**图像分类**、**目标检测**、**语义分割**、**实例分割**任务能力，将深度学习开发全流程从**数据准备**、**模型训练与优化**到**多端部署**端到端打通，并提供**统一任务API接口**及**图形化开发界面Demo**。开发者无需分别安装不同套件，以**低代码**的形式即可快速完成飞桨全流程开发。\n\n:factory: **PaddleX** 经过**质检**、**安防**、**巡检**、**遥感**、**零售**、**医疗**等十多个行业实际应用场景验证，沉淀产业实际经验，**并提供丰富的案例实践教程**，全程助力开发者产业实践落地。\n\n<p align="center">\n  <img src="./docs/paddlex_whole.png" width="800"  />\n</p>\n\n## 安装与快速体验\nPaddleX提供了图像化开发界面、本地API、Restful-API三种开发模式。用户可根据自己的需求选择任意一种开始体验\n- [PadldeX GUI开发模式](./docs/quick_start_GUI.md)\n- [PaddleX API开发模式](./docs/quick_start_API.md)\n- [PaddleX Restful API开发模式](./docs/Resful_API/docs/readme.md)\n- [快速产业部署](#4-模型部署)\n\n## 产业级应用示例\n\n- 安防\n    - [安全帽检测](./examples/helmet_detection)    |  [火灾/烟雾检测](./examples/fireSmoke_detection)\n- 工业视觉\n    - [表计读数](./examples/meter_reader)  |  [钢筋计数](./examples/rebar_count)  |  [视觉辅助定位抓取](./examples/robot_grab)\n\n\n\n## PaddleX 使用文档\n本文档介绍了PaddleX从数据准备、模型训练到模型剪裁量化，及最终部署的全流程使用方法。\n<p align="center">\n  <img src="./docs/process.png" width="600"  />\n</p>\n\n### 1. 数据准备\n\n- [数据准备流程说明](./docs/data)\n- [数据标注](./docs/data/annotation/README.md)\n- [数据格式转换](./docs/data/convert.md)\n- [数据划分](./docs/data/split.md)\n\n### 2. 模型训练/评估/预测\n\n- [GUI开发模式](./docs/quick_start_GUI.md)\n  - 视频教程：[图像分类](./docs/quick_start_GUI.md/#视频教程) | [目标检测](./docs/quick_start_GUI.md/#视频教程) | [语义分割](./docs/quick_start_GUI.md/#视频教程) | [实例分割](./docs/quick_start_GUI.md/#视频教程)\n- API开发模式\n  - [API文档](./docs/apis)\n    - [数据集读取API](./docs/apis/datasets.md)\n    - [数据预处理和数据增强API](./docs/apis/transforms/transforms.md)\n    - [模型API/模型加载API](./docs/apis/models/README.md)\n    - [预测结果可视化API](./docs/apis/visualize.md)\n  - [模型训练与参数调整](tutorials/train)\n    - [模型训练](tutorials/train)\n    - [训练参数调整](./docs/parameters.md)\n  - [VisualDL可视化训练指标](./docs/visualdl.md)\n  - [加载训好的模型完成预测及预测结果可视化](./docs/apis/prediction.md)\n- [Restful API开发模式](./docs/Resful_API/docs)\n  - [使用说明](./docs/Resful_API/docs)\n\n\n### 3. 模型压缩\n\n- [模型剪裁](tutorials/slim/prune)\n- [模型量化](tutorials/slim/quantize)\n\n### 4. 模型部署\n\n- [部署模型导出](./docs/apis/export_model.md)\n- [部署方式概览](./deploy/README.md)\n  - 本地部署\n    - C++部署\n      - [C++源码编译](./deploy/cpp/README.md)\n      - [C#工程化示例](./deploy/cpp/docs/csharp_deploy)\n    - [Python部署](./docs/python_deploy.md)\n  - 服务化部署\n    - [HubServing部署（Python）](./docs/hub_serving_deploy.md)\n  - [基于ONNX部署（C++）](./deploy/cpp/docs/compile/README.md)\n    - [OpenVINO推理引擎](./deploy/cpp/docs/compile/openvino/README.md)\n    - [Triton部署](./deploy/cpp/docs/compile/triton/docker.md)\n- [模型加密](./deploy/cpp/docs/demo/decrypt_infer.md)\n\n### 5. 附录\n\n- [PaddleX模型库](./docs/appendix/model_zoo.md)\n- [PaddleX指标及日志](./docs/appendix/metrics.md)\n- [无联网模型训练](./docs/how_to_offline_run.md)\n\n## 常见问题汇总\n- [GUI相关问题](./docs/FAQ/FAQ.md/#GUI相关问题)\n- [API训练相关问题](./docs/FAQ/FAQ.md/#API训练相关问题)\n- [推理部署问题](./docs/FAQ/FAQ.md/#推理部署问题)\n\n## 交流与反馈\n\n- 项目官网：https://www.paddlepaddle.org.cn/paddle/paddlex\n- PaddleX用户交流群：169608643 (手机QQ扫描如下二维码快速加入)  \n  <p align="center">\n    <img src="./docs/gui/images/QR3.png" width="180" height ="180" alt="QR" align="middle" />\n  </p>\n\n## :hugs: 贡献代码:hugs:\n\n我们非常欢迎您为PaddleX贡献代码或者提供使用建议。如果您可以修复某个issue或者增加一个新功能，欢迎给我们提交Pull Requests。\n\n### 开发者贡献项目\n\n* [工业相机实时目标检测GUI](https://github.com/xmy0916/SoftwareofIndustrialCameraUsePaddle)\n（windows系统，基于pyqt5开发）\n* [工业相机实时目标检测GUI](https://github.com/LiKangyuLKY/PaddleXCsharp)\n（windows系统，基于C#开发）\n* 基于QT实现的跨平台图形化部署工具，支持Windows、Linux系统和X86、ARM架构[欢迎体验](https://github.com/cjh3020889729/The-PaddleX-QT-Visualize-GUI)\n* 从0-1构建工业级部署线程池，[欢迎体验](https://github.com/ximitiejiang/model_infer_multiThreads)\n']
qa_match,A simple effective ToolKit for short text matching,318,https://github.com/wuba/qa_match,master,['# 项目介绍\nqa_match是一款基于深度学习的问答匹配工具，支持一层和两层结构知识库问答。qa_match通过意图匹配模型支持一层结构知识库问答，通过融合领域分类模型和意图匹配模型的结果支持两层结构知识库问答。qa_match同时支持无监督预训练功能，通过轻量级预训练语言模型（SPTM，Simple Pre-trained Model）可以提升基于知识库问答等下游任务的效果。\n\n## 知识库问答\n在实际场景中，知识库一般是通过人工总结、标注、机器挖掘等方式进行构建，知识库中包含大量的标准问题，每个标准问题有一个标准答案和一些扩展问法，我们称这些扩展问法为扩展问题。对于一层结构知识库，仅包含标准问题和扩展问题，我们把标准问题称为意图。对于两层结构知识库，每个标准问题及其扩展问题都有一个类别，我们称为领域，一个领域包含多个意图。\n\nqa_match支持知识库结构如下：\n\n![知识库结构](docs/kg_demo.png)\n\n对于输入的问题，qa_match能够结合知识库给出三种回答：\n1. 唯一回答（识别为用户具体的意图）\n2. 列表回答（识别为用户可能的多个意图）\n3. 拒识（没有识别出具体的用户意图）\n\n在两种知识库结构下，qa_match的使用方式存在差异，以下分别说明：\n\n### 基于两层结构知识库的自动问答\n\n![两层结果融合](docs/lstm_dssm_bagging.png)  \n\n对于两层结构知识库问答，qa_match会对用户问题先进行领域分类和意图识别，然后对两者的结果进行融合，获取用户的真实意图进行相应回答（唯一回答、列表回答、拒绝回答）。\n举个例子：如上述知识库问答中[知识库结构图](#知识库问答)所示，我们有一个两层结构知识库，它包括”信息“和”账号“两个领域”。其中“信息”领域下包含两个意图：“如何发布信息”、“如何删除信息”，“账号”领域下包含意图：“如何注销账号”。当用户输入问题为：“我怎么发布帖子？”时，qa_match会进行如下问答逻辑：\n\n1. 分别用LSTM领域分类模型和DSSM意图匹配模型对输入问题进行打分，如：领域分类模型最高打分为0.99且识别为“信息”领域，意图匹配模型最高打分为0.98且识别为“如何发布信息”意图。由于领域分类模型最高打分对应的label为信息类，所以进入判断为某一类分支。\n2. 进入判断为某一分类分支后，用领域分类模型的最高打分0.99与两层结构知识库问答图中阈值b1（如b1=0.9）进行对比，由于0.99>=b1,判断为走“严格DSSM意图匹配”子分支。\n3. 进入“严格DSSM意图匹配”分支后，用意图匹配模型的最高打分0.98与阈值x1(例如x1=0.8),x2(如x2=0.95)做比较，发现0.98>x2,由此用如何发布信息对应的答案进行唯一回答（其他分支回答类似）。\n\n### 基于一层结构知识库的自动问答\n\n实际场景中，我们也会遇到一层结构知识库问答问题，用DSSM意图匹配模型与SPTM轻量级预训练语言模型均可以解决此类问题，两者对比：\n\n| 模型                     | 使用方法                                       | 优点                                                         | 缺点                                                         |\n| ------------------------ | ---------------------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| DSSM意图匹配模型         | DSSM匹配模型直接匹配                           | ①使用简便，模型占用空间小<br/>②训练/预测速度快               | 无法利用上下文信息                                           |\n| SPTM轻量级预训练语言模型 | 预训练LSTM/Transformer语言模型<br/>+微调LSTM/Transformer匹配模型 | ①能够充分利用无监督预训练数据提升效果<br/>②语言模型可用于其他下游任务 | ①预训练需要大量无标签数据<br/>②操作较复杂（需两个步骤得到匹配模型） |\n\n#### 基于DSSM模型的自动问答\n![一层结果融合](docs/dssm.png)\n\n对于一层结构知识库问答，只需用DSSM意图匹配模型对输入问题进行打分，根据意图匹配的最高分值与上图中的x1，x2进行比较决定回答类型（唯一回答、列表回答、拒识）。\n\n#### 基于SPTM模型的自动问答\n\n##### 轻量级预训练语言模型（SPTM，Simple Pre-trained Model）介绍\n\n考虑到实际使用中往往存在大量的无标签数据，在知识库数据有限时，可使用无监督预训练语言模型提升匹配模型的效果。参考[BERT](https://github.com/google-research/bert)预训练过程，2019年5月我们开发了SPTM模型，该模型相对于BERT主要改进了三方面：一是去掉了效果不明显的NSP（Next Sentence Prediction），二是为了提高线上推理性能将Transformer替换成了LSTM，三是为了保证模型效果降低参数量也提供了BLOCK间共享参数的Transformer，模型原理如下：\n\n###### 数据预处理\n\n预训练模型时，生成训练数据需要使用无标签单句作为数据集，并参考了BERT来构建样本：每个单句作为一个样本，句子中15%的字参与预测，参与预测的字中80%进行mask，10%随机替换成词典中一个其他的字，10%不替换。\n\n###### 预训练\n\n预训练阶段的模型结构如下图所示：\n\n\n\n![模型结构](docs/sptm.png)\n\n为提升模型的表达能力，保留更多的浅层信息，引入了残差Bi-LSTM网络（Residual LSTM）作为模型主体。该网络将每一层Bi-LSTM的输入和该层输出求和归一化后，结果作为下一层的输入。此外将最末层Bi-LSTM输出作为一个全连接层的输入，与全连接层输出求和归一化后，结果作为整个网络的输出。\n\n预训练任务耗时示例如下表所示： \n\n| **指标名称**     | **指标值**                       | **指标值**                                    | **指标值**                           |\n| ---------------- | -------------------------------- | ----------------------------------------------- | ----------------------------------------------- |\n|模型结构          | LSTM                             | 共享参数的Transformer                          | 共享参数的Transformer          |\n| 预训练数据集大小 | 10Million                        | 10Million                                      | 10Million                             |\n| 预训练资源       | 10台Nvidia K40   / 12G Memory       | 10台Nvidia K40   / 12G Memory                     | 10台Nvidia K40   / 12G Memory |\n| 预训练参数       | step = 100000 / batch size = 128 | step = 100000 / batch size = 128 / 1 layers / 12 heads | step = 100000 / batch size = 128 / 12 layers / 12 heads |\n| 预训练耗时       | 8.9 hours              | 13.5 hours                                             | 32.9 hours                                              |\n| 预训练模型大小   | 81M                            | 80.6M                                        | 121M                                    |\n\n##### SPTM自动问答流程\n\n![预训练语言模型](docs/pretrain.png)\n\n引入SPTM后，对于一层结构知识库问答，先使用基于语言模型微调的意图匹配模型对输入问题进行打分，再根据与DSSM意图匹配模型相同的策略决定回答类型（唯一回答、列表回答、拒识）。\n\n## 如何使用\n### 数据介绍\n需要使用到的数据文件（data_demo文件夹下）格式说明如下，这里为了不泄露数据，我们对标准问题和扩展问题原始文本做了编码，在实际应用场景中直接按照以下格式准备数据即可。  \n- std_data：类别和标准问题对应关系，包含类别ID、标准问题ID、标准问题文本三列\n- pre_train_data：无标签的预训练数据集，每行是一段文本\n- vocab：预训练数据字典，每行是一个词（字典应包含`<PAD>`、<UNK>`、`<MASK>`）\n- train_data：训练集，包含标准问题ID、扩展问题ID、扩展问题文本三列\n- valid_data：验证集，包含标准问题ID、扩展问题ID、扩展问题文本三列\n- test_data：测试集，包含标准问题ID、扩展问题ID、扩展问题文本三列\n\n数据以\\t分隔，问题编码以空格分隔，字之间以空格分隔。注意在本项目的数据示例中，对原始文本做了编码，将每个字替换为一个数字, 例如`205 19 90 417 41 44` 对应的实际文本是`如何删除信息`，**在实际使用时不需要做该编码操作**；若知识库结构为一级，需要把std_data文件中的类别id全部设置为`__label__0`。\n\n### 知识库半自动挖掘流程\n\n知识库半自动挖掘流程，是在qa match自动问答流程的基础上（参考qa match 基于一层知识库结构的自动问答）构建的一套知识库半自动挖掘方案，帮助提升知识库规模与知识库质量，一方面提高线上匹配的能力；一方面提高离线模型训练数据的质量，进而提高模型性能。知识库半自动挖掘流程可以用于冷启动挖掘和模型上线后迭代挖掘两个场景。详情参见[知识库挖掘说明文档](./dec_mining/README.md)\n\n### 怎么运行\n详情见[运行说明](docs/RUNDEMO.md)\n\n### tips\n1. 由于DSSM模型训练选取负样本时是将原样本对应标签随机打散，所以模型参数需要满足`batch_size >= negitive_size`，否则模型无法有效训练。\n2. 模型融合参数选取方法：目前参数的选取是基于统计的，首先在测试集上计算同一参数（如两层结构知识库问答图中a1）不同值所对应的模型label（如拒识）的f1值，然后选取较大的f1值对应的数值做为该参数的取值。如：在选取两层结构知识库问答图中参数a1的最终取值时,首先会在测试集上得到不同a1候选值对应的模型label（如拒识，非拒识），然后根据样本的真实label计算f1值，最后选取合适的f1值（根据项目需求可偏重准确率/召回率）对应的候选值作为a1的最终取值。\n\n## 运行环境\n```\ntensorflow 版本>r1.8 <r2.0, python3\n```\n\n## 版本\nv1.0:https://github.com/wuba/qa_match/tree/v1.0\n\nv1.1:https://github.com/wuba/qa_match/tree/v1.1\n\nv1.2:https://github.com/wuba/qa_match/tree/v1.2\n\nv1.3:https://github.com/wuba/qa_match/tree/v1.3\n\n## 未来规划\n未来我们会继续优化扩展qa_match的能力，计划开源如下：\n1. 目前tensorflow已发版到2.4版本，后续我们会根据需求发布tensorflow 2.X版本或pytorch版本的qa_match。\n\n## 如何贡献&问题反馈\n我们诚挚地希望开发者向我们提出宝贵的意见和建议。您可以挑选以下方式向我们反馈建议和问题：\n1. 在 github上 提交 PR 或者 Issue\n2. 邮件发送至 ailab-opensource@58.com\n']
bootstrap-italia,Bootstrap Italia è un tema basato su Bootstrap 5 conforme alle "Linee guida di design per i siti internet e i servizi digitali della Pubblica Amministrazione",266,https://github.com/italia/bootstrap-italia,main,['# Bootstrap Italia\n\n[![Versione](https://img.shields.io/npm/v/bootstrap-italia.svg?logo=npm)](https://github.com/italia/bootstrap-italia/releases)\n[![Build](https://github.com/italia/bootstrap-italia/actions/workflows/build.yml/badge.svg)](https://github.com/italia/bootstrap-italia/actions)\n[![GitHub issues](https://img.shields.io/github/issues/italia/bootstrap-italia.svg)](https://github.com/italia/bootstrap-italia/issues)\n[![License](https://img.shields.io/github/license/italia/bootstrap-italia.svg)](https://github.com/italia/bootstrap-italia/blob/main/LICENSE)\n[![Join the #design channel](https://img.shields.io/badge/Slack%20channel-%23design-blue.svg)](https://developersitalia.slack.com/messages/C7VPAUVB3/)\n[![Get invited](https://slack.developers.italia.it/badge.svg)](https://slack.developers.italia.it/)\n\n_🇬🇧 [English version](README.EN.md)_\n\n_⚠️ [La versione 1.x di Bootstrap Italia (basata su Bootstrap 4) è stata ufficialmente deprecata](https://github.com/italia/bootstrap-italia/tree/1.x)_\n\nBootstrap Italia è un tema basato su [Bootstrap 5](https://getbootstrap.com/docs/5.1/getting-started/introduction/) conforme alle [linee guida di design per i siti internet e i servizi digitali delle Pubbliche Amministrazioni](https://docs.italia.it/italia/design/lg-design-servizi-web/).\n\nBootstrap Italia eredita tutte le funzionalità, componenti, mixins, grid system, e altro già presenti in Bootstrap 5, e le personalizza secondo le "Linee guida di design per i siti internet e i servizi digitali della PA" e le indicazioni presenti nel manuale operativo di design messo a disposizione da Designers Italia. Puoi scoprire di più tramite la [pagina dedicata di Designers Italia](https://designers.italia.it/linee-guida).\n\nLa roadmap del progetto è consultabile nel [piano attività di Designers Italia](https://designers.italia.it/piano-attivita/).\n\n**[Vedi la documentazione completa »](https://italia.github.io/bootstrap-italia/)**\n\noppure\n\n**[Scarica l\'ultima versione della libreria »](https://github.com/italia/bootstrap-italia/releases)**\n\n## Indice\n\n- [Segnalazione bug e richieste](#segnalazione-bug-e-richieste-di-aiuto)\n- [Come contribuire](#come-contribuire)\n- [Licenze software dei componenti di terze parti](#licenze-software-dei-componenti-di-terze-parti)\n\n## Segnalazione bug e richieste di aiuto\n\nVuoi segnalare un bug o fare una richiesta?\n\nPrima di tutto assicurati che sia un problema relativo al tema Bootstrap Italia e non alla libreria Bootstrap da cui deriva\n(in tal caso puoi fare riferimento al [repository di Bootstrap](https://github.com/twbs/bootstrap)), poi\ndai un\'occhiata a come [creare una issue](https://github.com/italia/bootstrap-italia/blob/main/CONTRIBUTING.md#creare-una-issue).\n\n## Come contribuire\n\nVorresti dare una mano su Bootstrap Italia? **Sei nel posto giusto!**\n\nSe non l\'hai già fatto, inizia spendendo qualche minuto per approfondire la tua conoscenza sulle "Linee guida di design per i siti internet e i servizi digitali della PA" e del manuale operativo di design a supporto partendo dalla [pagina dedicata di Designers Italia](https://designers.italia.it/linee-guida), e fai riferimento alle [indicazioni su come contribuire a Bootstrap Italia](https://github.com/italia/bootstrap-italia/blob/main/CONTRIBUTING.md).\n\nA questo punto, è necessario impostare il tuo ambiente locale per la compilazione dei file sorgente e la generazione\ndella documentazione. Puoi usare [Docker](https://docs.docker.com/get-started/) per far partire l\'ambiente di sviluppo.\n\n```sh\ndocker-compose up\n```\n\n## Licenze software dei componenti di terze parti\n\n### Componenti distribuiti con Bootstrap Italia\n\nVengono di seguito elencati i componenti distribuiti con Bootstrap Italia che hanno una propria licenza diversa da CC0.\n\n- [Bootstrap 5](https://getbootstrap.com) © Twitter, Inc., licenza MIT\n- [Popper.js](https://popper.js.org) © Floating UI contributors, licenza MIT\n- [SplideJS](https://splidejs.com) © Naotoshi Fujita, licenza MIT\n- [Accessible Autocomplete](https://alphagov.github.io/accessible-autocomplete) © Crown Copyright (Government Digital Service), licenza MIT\n- [AnimeJS](https://animejs.com) © Julian Garnier, licenza MIT\n- [Just Validate](https://just-validate.dev) © Horprogs, licenza MIT\n- [Masonry Layout](https://masonry.desandro.com) © David DeSandro, licenza MIT\n- [Progressbar.js](https://kimmobrunfeldt.github.io/progressbar.js) © Kimmo Brunfeldt, licenza MIT\n\n### Principali dipendenze per la fase di compilazione e sviluppo\n\n- Generatore di siti statici per ruby [Jekyll](https://jekyllrb.com), © Tom Preston-Werner and Jekyll contributors, licenza MIT\n- Tool per il testing della correttezza formale dell\'HTML [html-proofer](https://github.com/gjtorikian/html-proofer), © Garen Torikian, licenza MIT\n- Tool per il reload automatico del browser [Browser Sync](https://www.browsersync.io/) Apache License Version 2.0\n- Gestione del versionamento [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog/) © conventional-changelog team, ISC License\n- Build system per le librerie Javascript e CSS [Rollup.js](https://rollupjs.org/), © [questi contributori](https://github.com/rollup/rollup/graphs/contributors), licenza MIT\n- Code formatter per Javascript [Prettier](https://prettier.io/), © James Long and contributors, licenza MIT\n- Compilazione SASS [sass](https://github.com/sass/dart-sass), © Google Inc., licenza MIT\n- GitHub REST API client per JavaScript [Octokit rest.js](https://octokit.github.io/rest.js/) © Cloud9 IDE, Inc. (Mike de Boer), 2017-2018 Octokit contributors, licenza MIT\n\n### Componenti utilizzati per la documentazione\n\nDi seguito sono elencati invece i componenti utilizzati per il sito della documentazione ma non ridistribuiti nella libreria Bootstrap Italia\n\n- [tsParticles](https://particles.js.org/) © Matteo Bruni, licenza MIT\n- [clipboard.js](https://clipboardjs.com/) © Zeno Rocha, licenza MIT\n- [AnchorJS](https://www.bryanbraun.com/anchorjs/) © Bryan Braun, licenza MIT\n- [Algolia DocSearch](https://docsearch.algolia.com/) © Algolia, licenza MIT\n\n## Licenza\n\nLa licenza di Bootstrap Italia è **BSD 3-Clause** ed è visibile nel file [LICENSE](https://github.com/italia/bootstrap-italia/blob/main/LICENSE).\n\n<a href="https://www.browserstack.com/" target="_blank"><img src="docs/assets/img/browserstack-logo.png" alt="BrowserStack logo" width="270" height="79" /></a>\n\nWe are using BrowserStack for interactive cross browser testing. They are sponsoring our open source project!\n']
PaddleDetection,Object Detection toolkit based on PaddlePaddle. It supports object detection, instance segmentation, multiple object tracking and real-time multi-person keypoint detection.,9666,https://github.com/PaddlePaddle/PaddleDetection,release/2.6,['README_cn.md']
uiw,⚛️ @uiwjs A high quality UI Toolkit, A Component Library for React 16+.,660,https://github.com/uiwjs/uiw,master,['packages/uiw/README.md']
BCHackTool,HackToolKit,368,https://github.com/ByCh4n/BCHackTool,master,['![baycan (1)](https://user-images.githubusercontent.com/67187998/96374988-df9b9900-117e-11eb-9ade-9436c2859707.png)\n\nTR\n--\nBu Program ByChan Tarafından Hazırlanmıştır.\n\nInstagram 📸 : huseyinaltns\n\nKullanımı Çok Basit Shell Üzerine Yazılmış Bir Programdır Ve Siz İşlem Yapmadan Otomatik Olarak Kurulumları Yaparak Bütün Programlara Giriş Yapıcaktır. 💯\n\nHatalar Giderildi. ✔\n\nProgramı İlk Çalıştırdığınız Zaman Öncelikli Olarak [19] Otomatik Güncelleştiriciyi Çalıştırınız. ✔\n\nRoot Olarak Giriş Yapmadıysanız Root Olarak Giriş Yapınız Yada Komutların Başlarına "sudo" Komutunu Eklemeyi Unutmayınız ❕\n\n- Programın Geliştirilmesine Yardımcı Olan lastpingu Arkadaşımıza Teşekkür Ederiz. :) <3\n\nEN\n--\nThis Program Was Prepared By ByChan.\n\nInstagram 📸 : huseyinaltns\n\nIt Is Very Simple To Use, It Is Written On Shell, And You Can Log In To All The Programs By Making The Setups Automatically Without Any Action. 💯\n\nThe Errors Have Been Fixed. ✔\n\nWhen You First Run The Program, First Run The [19] Automatic Updater. ✔\n\nIf you have not logged in as Root, Please log in as Root or do not forget to add the command "sudo" to the beginning of the commands ❕\n\n- Thank You To Our Friend lastpingu Who Helped Develop The Program. :) <3\n\n--------------------------------------------------------------------------\n\nKali Linux - Installation(Kurulum):\n--\n- git clone https://github.com/ByCh4n/BCHackTool\n\n- cd BCHackTool\n\n- chmod +x bchacktool.sh\n\n- ./bchacktool.sh\n\nTermux - Installation(Kurulum):\n--\n- git clone https://github.com/ByCh4n/BCHackTool\n\n- cd BCHackTool\n\n- chmod +x bchacktool-termux.sh\n\n- ./bchacktool-termux.sh\n\n--------------------------------------------------------------------------\n\nYenilikler Ve Kullanımları :\n----\n- Renklendirildi Ve Banner Otomatik Değiştirelecek Şekilde Ayarlandı.\n\n- ./bchacktool.sh -v Parametresi Eklendi,Scriptin Sürümünü Gösterir.\n\n- ./bchacktool.sh -h Parametresi Eklendi,Scriptin Yapımcıları Hakkında Bilgi Verir.\n\n- ./bchacktool.sh -s Parametresi Eklendi,Scriptteki Programlar Çalışmaz İse Silinmesi İçin Kullanılır.\n\n- Hatalar Giderildi.\n\nInnovations And Uses :\n----\n- It\'s Colored And The Banner Is Set To Change Automatically.\n\n- . /bchacktool.sh - V parameter added, indicates the version of Scriptin.\n\n- . /bchacktool.sh -H parameter added, gives information about Scriptin makers.\n\n- . /bchacktool.sh the-s parameter is added, used to delete programs in the script if they do not work.\n\n- Bugs Fixed.\n\n![1](https://user-images.githubusercontent.com/67187998/89713271-5b1ee400-d99f-11ea-8bf1-e364204e736d.PNG)\n\n![2](https://user-images.githubusercontent.com/67187998/89713272-5c501100-d99f-11ea-8bbd-5a1eed3c9fbf.PNG)\n']
nutui,京东风格的移动端 Vue2、Vue3 组件库 、支持多端小程序(A Vue.js UI Toolkit for Mobile Web),5131,https://github.com/jdf2e/nutui,v4,['\n<p align="center">\n    <img alt="logo" src="https://img11.360buyimg.com/imagetools/jfs/t1/211965/25/7152/22022/61b16785E433119bb/aa41d7a9f7e823f3.png" width="150" style="margin-bottom: 10px;">\n</p>\n\n<p align="center">京东风格的轻量级 Vue 组件库，支持移动端 H5 和 小程序开发</p>\n\n<p align="center">\n    <a href="http://makeapullrequest.com">\n    <img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome">\n  </a>\n    <a href="https://github.com/jdf2e/nutui">\n    <img src="https://coveralls.io/repos/github/jdf2e/nutui/badge.svg?branch=master" alt="Coverage Status" />\n    </a>\n    <a href="https://github.com/jdf2e/nutui">\n    <img src="https://img.shields.io/npm/l/@nutui/nutui.svg" alt="license"/>\n    </a>\n    <a href="https://www.npmjs.com/package/@nutui/nutui">\n    <img src="https://img.shields.io/npm/v/@nutui/nutui.svg?style=flat-square">\n    </a>\n    <a href="https://www.npmjs.com/package/@nutui/nutui">\n    <img src="https://img.shields.io/npm/dt/@nutui/nutui.svg?style=flat-square">\n    </a>\n    <a href="https://travis-ci.org/jdf2e/nutui">\n    <img src="https://img.shields.io/travis/jdf2e/nutui.svg?style=flat-square">\n    </a>  \n\n</p>\n<p align="center">\n    <a href="https://github.com/jdf2e/nutui">\n    <img src="https://img.shields.io/github/contributors/jdf2e/nutui" alt="GitHub contributors">\n    </a>  \n    <a href="https://github.com/jdf2e/nutui">\n    <img src="https://img.shields.io/github/commit-activity/w/jdf2e/nutui" alt="GitHub commit activity">\n    </a>\n    <a href="https://github.com/jdf2e/nutui">\n    <img src="https://img.shields.io/github/issues-closed/jdf2e/nutui" alt="GitHub closed issues">\n    </a>  \n    <a href="https://github.com/jdf2e/nutui">\n    <img src="https://img.shields.io/github/commits-since/jdf2e/nutui/latest/v4" alt="GitHub commits since latest release (by date)">\n    </a>\n    <a href="https://github.com/jdf2e/nutui">\n    <img src="https://img.shields.io/github/release-date/jdf2e/nutui" alt="GitHub Release Date">\n  </a>\n</p>\n\n<p align="center">\n   <img src="https://img12.360buyimg.com/imagetools/jfs/t1/162421/39/13392/9425/6052ea60E592310a9/264bdff23ef5fe95.png" width="164" alt="NutUI" />\n  &nbsp;\n   <img src="https://img10.360buyimg.com/imagetools/jfs/t1/211804/23/22232/12144/634e4801Eac435cb6/cfd9e1773cf9423d.png" width="167" title="请用京东APP扫码">\n  &nbsp;\n  <img src="https://storage.360buyimg.com/jdc-article/gh_f2231eb941be_258.jpg" width="166" title="请用微信扫码">\n  &nbsp;\n   <img src="https://img12.360buyimg.com/imagetools/jfs/t1/205124/1/15643/30360/62aad730Ea5734bf9/703bb91a0b73282f.png" width="170" title="请用支付宝扫码">\n</p>\n\n---\n\n> Nut[nʌt]，源自电影《冰河世纪》里松鼠 Scrat "执迷不悟"，一生追求，即便引发大灾难也绝不松手的坚果。\n\n简体中文 | [English](./README_EN.md)\n\n##  特性\n\n* 🚀 70+ 高质量组件，覆盖移动端主流场景\n* 💪 支持一套代码同时开发 H5+多端小程序\n* 📖 基于京东APP 10.0 视觉规范\n* 🍭 支持按需引用\n* 📖 详尽的文档和示例\n* 💪 支持 TypeScript\n* 💪 支持服务端渲染（测试阶段）\n* 🍭 支持组件级别定制主题，内置 700+ 个变量\n* 🌍 国际化支持，已支持英文，印尼语和繁体中文\n* 🍭 单元测试覆盖率超过 80%，保障稳定性\n* 📖 提供 Sketch 设计资源\n\n## 安装\n\n```bash\n// Vue2 项目 \nnpm i @nutui/nutui@2\n```\n\n```bash\n// Vue3 H5 项目\nnpm i @nutui/nutui\n```\n\n```bash\n// Vue3 小程序项目\nnpm i @nutui/nutui-taro\n```\n\n## 示例\n\n```js\nimport { createApp } from "vue";\nimport App from "./App.vue";\n\n// 注意：这种方式将会导入所有组件\nimport NutUI from "@nutui/nutui";\n// 采用按需加载时  此全局css样式，需要删除\nimport "@nutui/nutui/dist/style.css";\n\ncreateApp(App).use(NutUI).mount("#app");\n```\n\n## 学习资源\n\n[NutUI 实战快速入门](https://www.bilibili.com/video/BV14r4y1e7LK/?spm_id_from=333.999.0.0&vd_source=339cf5dcca71ec2905c729fd92bba8a9)\n\n[awesome-nutui](https://github.com/jdf2e/nutui/blob/v4/awesome.md)\n\n\n## 主题\n\n我们提供了几套官方主题，来自京东内部实际业务，欢迎在项目中使用，如果不能满足需求，你也可以  <a href="https://nutui.jd.com/theme/#/base" target="_blank">自定义主题</a>\n\n* <a href="https://nutui.jd.com/#/zh-CN/component/button" target="_blank">京东APP视觉（Vue3，默认）</a>\n* <a href="https://nutui.jd.com/jdt/#/zh-CN/component/button" target="_blank">京东科技视觉（Vue3）</a>\n* <a href="https://nutui.jd.com/?jdb#/zh-CN/component/button" target="_blank">京东零售B商城主题（Vue3）</a>\n* <a href="https://nutui.jd.com/?jddkh#/zh-CN/component/button" target="_blank">京东企业业务主题（Vue3）</a>\n* <a href="https://nutui.jd.com/jdl/#/cell" target="_blank">京东物流视觉（Vue2）</a>\n\n\n## 版本说明\n\n> @nutui/nutui 和 @nutui/nutui-taro 属于并行版本，存在部分差异，版本号始终保持一致。如果兼容 ios 10 以下请使用 @nutui/nutui@2\n\n* NutUI 2x & NutUI-JDL 使用 Vue2 开发，支持现代浏览器及 Android >= 4.0、iOS >= 8.0，仅 H5 应用。\n* NutUI 3x 使用 Vue3 开发，支持现代浏览器及 Chrome >= 51、iOS >= 10.0，可输出 H5 和小程序两类应用。\n\n## 构建版本\n\n> AMD 环境、Webpack、Vite 等构建工具环境、服务端建议使用 es 版，非模块化环境（如通过 `<script>` 标签直接引用）建议使用 umd 压缩版。\n\n* es **nutui.es.js**\n\n* umd **nutui.umd.js**\n\n\n## 使用案例\n\nNutUI 已经投入了我们的生产环境中使用，业界也在广泛地使用 NutUI 开发多端应用。\n<p>\n<img src="https://raw.githubusercontent.com/jdf2e/nutui-user-cases/master/user-cases.jpg" alt="NutUI" />\n</p>\n<p><a href="https://nutui.jd.com/#/case">更多案例</a></p>\n<p><a href="https://get.jd.com/#/survey/index?id=4217247740034539">我们正在征集社区优秀案例，欢迎点击提交</a></p>\n\n## 链接\n\n<ul>\n    <li>\n        <a href="https://github.com/jdf2e/nutui/discussions">\n            Discussions  (用👍投票)\n        </a>\n    </li>\n    <li>\n        <a href="https://github.com/jdf2e/nutui/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22">\n            Feature Requests (用👍投票)\n        </a>\n    </li>\n     <li>\n        <a href="https://github.com/jdf2e/nutui/labels/bug%203.0">\n            Bugs (用👍投票)\n        </a>\n    </li>\n     <li>\n        <a href="https://github.com/jdf2e/nutui/issues?q=is%3Aissue+is%3Aopen+label%3Aquestion">\n            Question  (用👍投票)\n        </a>\n    </li>\n</ul>\n\n## 开发交流\n\n| 版本 | 微信群 |内部咚咚群 |\n| --- | --- |--- |\n| [NutUI Vue](https://github.com/jdf2e/nutui/issues) | <img src="https://storage.360buyimg.com/nutui-static/image/wx-code.png" width="100" /> 回复「NutUI」 | 82957939\n| [NutUI x Taro](https://github.com/jdf2e/nutui/issues) | <img src="https://camo.githubusercontent.com/db4276b4ee4b443158195e943e9e678cb4d2afb7580f70d4d817ef0a90413aec/687474703a2f2f73746f726167652e333630627579696d672e636f6d2f7461726f2d6a642d636f6d2f7374617469632f636f6e746163745f7461726f5f6e757475695f71722e706e67" width="100" /> 回复「NutUI」 | 1022545110 |\n\n\n## 参与共建\n\n#### NutUI 社区共建倡议\n\n[NutUI 邀您共建，Contributor 您好](https://github.com/jdf2e/nutui/issues/1789)\n\n#### 为 NutUI 贡献代码\n\nNutUI 的共建方向主要分为：解决 issue、修复 bug、新增组件、增加国际化、UI 定制、平台适配、跨端扩展等。\n\n欢迎社区开发者参与共建，在贡献您的代码之前请先阅读 [《NutUI 贡献指南》](https://github.com/jdf2e/nutui/issues/1671)。\n\n## 问题反馈与建议\n\n[给 NutUI 提 Issue](https://nutui.jd.com/nutui-issue-helper/?repo=jdf2e/nutui&lang=zh-cn)\n\n> 在反馈问题之前，推荐阅读 [《提问的智慧》](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way)、[《如何向开源社区提问题》](https://github.com/seajs/seajs/issues/545)和[《如何有效地报告 Bug》](http://www.chiark.greenend.org.uk/%7Esgtatham/bugs-cn.html)，这样您能够更容易获得理解和帮助。\n\n[参与 NutUI 社区讨论](https://github.com/jdf2e/nutui/discussions)\n\n如果您有任何想法、疑问或建议，都可以参与社区讨论分享您的观点。\n\n## 贡献者们\n\n感谢以下所有给 NutUI 贡献过代码的 [开发者](https://github.com/jdf2e/nutui/graphs/contributors)。\n\n<a href="https://github.com/jdf2e/nutui/graphs/contributors">\n  <img src="https://opencollective.com/nutui/contributors.svg?width=890&button=false" alt="contributors">\n</a>\n\n\n## Stargazers \n\n[![Stargazers repo roster for @jdf2e/nutui](https://reporoster.com/stars/jdf2e/nutui)](https://github.com/jdf2e/nutui/stargazers)\n\n## Forkers\n\n[![Forkers repo roster for @jdf2e/nutui](https://reporoster.com/forks/jdf2e/nutui)](https://github.com/jdf2e/nutui/network/members)\n\n\n## 开发计划\n\n[Milestones](https://github.com/jdf2e/nutui/projects)\n\n## 更新日志\n\n本项目遵从 [Angular Style Commit Message Conventions](https://gist.github.com/stephenparish/9941e89d80e2bc58a153)，更新日志请查阅 [Release](https://github.com/jdf2e/nutui/releases)。\n\n## github stargazers \n\n![stargazers](https://starchart.cc/jdf2e/nutui.svg)\n\n']
mix,✨ Standard Toolkit for Go fast development / Go 快速开发标准工具包,664,https://github.com/mix-go/mix,master,['> OpenMix 出品：[https://openmix.org](https://openmix.org/mix-go)\n\n<p align="center">\n    <br>\n    <br>\n    <img src="https://openmix.org/static/image/logo_go.png" width="120" alt="MixPHP">\n    <br>\n    <br>\n</p>\n\n<h1 align="center">Mix Go</h1>\n\nMixGo 是一个 Go 快速开发标准工具包；内部模块高度解耦，整体代码基于多个独立的模块构建，即便用户不使用我们的 `mixcli` 脚手架快速生成代码，也可以使用这些独立模块。例如：你可以只使用 `xcli` 来构建你的命令行交互；可以使用 `xsql` 来调用数据库；可以使用 `xwp` 来处理 MQ 队列消费；所有的模块你可以像搭积木一样随意组合。\n\n## 独立模块\n\n核心模块全部可独立使用。\n\n- [mix-go/mixcli](src/mixcli) 快速创建 Go 项目的脚手架，类似前端界的 Vue CLI。\n- [mix-go/xcli](src/xcli) 命令行交互与指挥管理工具，同时它还包括命令行参数获取、中间件、程序守护等。\n- [mix-go/xsql](src/xsql) 基于 database/sql 的轻量数据库，功能完备且支持任何数据库驱动。\n- [mix-go/xdi](src/xdi) 处理对象依赖关系的 IoC、DI 库，可以实现统一管理依赖，全局对象管理，动态配置刷新等。\n- [mix-go/xwp](src/xwp) 一个通用工作池、协程池，可动态扩容缩容。\n- [mix-go/xfmt](src/xfmt) 可以打印结构体嵌套指针地址内部数据的格式化库。\n- [mix-go/dotenv](src/dotenv) 具有类型转换功能的 DotEnv 环境配置库。\n\n## 开发文档\n\n- `V1.1` https://openmix.org/mix-go/docs/1.1/\n- `V1.0` https://www.kancloud.cn/onanying/mixgo1/content\n\n## 快速开始\n\n提供了现成的脚手架工具，快速创建项目，立即产出。\n\n- [编写一个 CLI 程序](examples/cli-skeleton#readme)\n  - [编写一个 Worker Pool 队列消费](examples/cli-skeleton#%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA-worker-pool-%E9%98%9F%E5%88%97%E6%B6%88%E8%B4%B9)\n- [编写一个 API 服务](examples/api-skeleton#readme)\n- [编写一个 Web 服务](examples/web-skeleton#readme)\n  - [编写一个 WebSocket 服务](examples/web-skeleton#%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA-WebSocket-%E6%9C%8D%E5%8A%A1)\n- [编写一个 gRPC 服务、客户端](examples/grpc-skeleton#readme)\n\n\n```bash\n# Go 1.15 及之前版本\ngo get github.com/mix-go/mixcli\n# Go 1.16 及以后版本\ngo install github.com/mix-go/mixcli@latest\n```\n\n\n```bash\n$ mixcli new hello\nUse the arrow keys to navigate: ↓ ↑ → ← \n? Select project type:\n  ▸ CLI\n    API\n    Web (contains the websocket)\n    gRPC\n```\n\n如果编译时报错，整理一下依赖\n\n~~~\ngo mod tidy\n~~~\n\n## 推荐阅读\n\n- [MixGo 在 IDE Goland 中的如何使用](https://zhuanlan.zhihu.com/p/391857663)\n\n## 视频教程\n\n[![使用 MixGo 快速开发 API 项目](https://openstr.com/cover/aa328ff33de085aa8fc87301056f3407.jpg?size=small&share=true)](https://openstr.com/watch/aa328ff33de085aa8fc87301056f3407)\n[![从 PHP 转 Go 的基础知识对比视频讲解](https://openstr.com/cover/41e9dc609cb8f9a4530fe8f7a37f1130.jpg?size=small&share=true)](https://openstr.com/watch/41e9dc609cb8f9a4530fe8f7a37f1130)\n\n## 技术交流\n\n知乎：https://www.zhihu.com/people/onanying    \n官方QQ群：[284806582](https://shang.qq.com/wpa/qunwpa?idkey=b3a8618d3977cda4fed2363a666b081a31d89e3d31ab164497f53b72cf49968a), [825122875](http://shang.qq.com/wpa/qunwpa?idkey=d2908b0c7095fc7ec63a2391fa4b39a8c5cb16952f6cfc3f2ce4c9726edeaf20) 敲门暗号：gopher\n\n## PHP 框架\n\nOpenMix 同时还有 PHP 生态的框架\n\n- https://github.com/mix-php/mix\n- https://gitee.com/mix-php/mix\n\n## License\n\nApache License Version 2.0, http://www.apache.org/licenses/\n']
wet-boew,Web Experience Toolkit (WET): Open source code library for building innovative websites that are accessible, usable, interoperable, mobile-friendly and multilingual. This collaborative open source project is led by the Government of Canada.,1504,https://github.com/wet-boew/wet-boew,master,["([Français](#boîte-à-outils-de-lexpérience-web-boew))\n\n# Web Experience Toolkit (WET)\n\n[![Build Status](https://secure.travis-ci.org/wet-boew/wet-boew.svg?branch=master)](https://travis-ci.org/wet-boew/wet-boew)\n[![devDependency Status](https://david-dm.org/wet-boew/wet-boew/dev-status.svg)](https://david-dm.org/wet-boew/wet-boew#info=devDependencies)\n\n## What is the Web Experience Toolkit?\n\n* An [award-winning](https://wet-boew.github.io/wet-boew/docs/ref/accolades-en.html#awards) front-end framework for building websites that are [accessible](https://wet-boew.github.io/wet-boew/index-en.html#accessibility), [usable](https://wet-boew.github.io/wet-boew/index-en.html#usability), [interoperable](https://wet-boew.github.io/wet-boew/index-en.html#interoperability), [mobile friendly](https://wet-boew.github.io/wet-boew/index-en.html#mobile-friendly-responsive-design) and [multilingual](https://wet-boew.github.io/wet-boew/index-en.html#multilingual)\n* A collection of [flexible and themeable templates and reusable components](https://wet-boew.github.io/wet-boew/index-en.html#themeable-and-reusable)\n* A [collaborative open source project led by the Government of Canada](https://wet-boew.github.io/wet-boew/index-en.html#collaborative-approach)\n\n## Key resources\n\n* [Documentation](https://wet-boew.github.io/wet-boew/docs/index-en.html)\n* [Downloads](https://wet-boew.github.io/wet-boew/docs/versions/dwnld-en.html)\n* [Examples](https://wet-boew.github.io/wet-boew/demos/index-en.html)\n* [Version history](https://wet-boew.github.io/wet-boew/docs/versions/index-en.html) and [roadmap](https://wet-boew.github.io/wet-boew/docs/versions/rdmp-en.html)\n* [Terms and conditions](https://wet-boew.github.io/wet-boew/License-en.html) (MIT license)\n* [Source code repository](https://github.com/wet-boew/wet-boew/) and [contributing guidelines](https://wet-boew.github.io/wet-boew/docs/start-en.html#develop)\n* [Communications material](https://wet-boew.github.io/wet-boew/docs/comms-en.html)\n* [Websites using WET](https://wet-boew.github.io/wet-boew/docs/ref/wetsites-en.html)\n\n## Benefits\n\n### Accessibility\n\n* Conforms to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) level AA\n* Leverages [WAI-ARIA](https://www.w3.org/TR/wai-aria/) to further enhance accessibility\n* Assistive technology testing (Access Working Group)\n\n### Usability\n\n* Iterative approach to design\n* Design patterns and usability testing (User Experience Working Group)\n\n### Interoperability\n\n* [HTML5](https://www.w3.org/TR/html5/)-first approach (leveraging native HTML5 support and filling support gaps with “polyfills”)\n* Supporting a wide variety of browsers (IE, Firefox, Chrome, Safari, Opera)\n* Building support for HTML data ([RDFa 1.1 Lite](https://www.w3.org/TR/rdfa-lite/), [Schema.org](https://www.schema.org/))\n\n### Mobile friendly responsive design\n\n* Adapts to different screen sizes and device capabilities\n* Touchscreen support\n* Optimized for performance\n* Building support for device-based mobile applications\n\n### Multilingual\n\n* Currently supports 33 languages (including right-to-left languages)\n  * English\n  * French\n  * Afrikaans\n  * Albanian\n  * Arabic\n  * Armenian\n  * Bulgarian\n  * Chinese\n  * Chinese (Simplified)\n  * Czech\n  * Dutch\n  * Estonian\n  * German\n  * Greek\n  * Hindi\n  * Hungarian\n  * Icelandic\n  * Indonesian\n  * Italian\n  * Japanese\n  * Korean\n  * Latvian\n  * Lithuanian\n  * Polish\n  * Portuguese\n  * Portuguese (Brazilian)\n  * Russian\n  * Slovak\n  * Spanish\n  * Thai\n  * Turkish\n  * Ukranian\n  * Vietnamese\n\n### Themeable and reusable\n\n* Flexible framework that supports custom themes\n* Includes support for [2 different themes](https://wet-boew.github.io/wet-boew/docs/ref/themesstyle-en.html)\n* Reusable templates, [plugins](https://wet-boew.github.io/wet-boew/docs/ref/plugins-en.html) and widgets\n* [Adapted to various CMS and programming frameworks](https://wet-boew.github.io/wet-boew/docs/ref/variants-en.html) (Drupal, WordPress, SharePoint (in development), DotNetNuke (in development), PHP, SSI, Java/Maven)\n\n### Reduces costs by openly sharing and collaborating\n\n* Drives down research and development costs\n* Avoids duplication of effort\n* Produces better quality results\n\n### Collaborative approach\n\n* Project managed openly on GitHub, including discussion through the issues tracker\n* Encouraging a free flow of ideas, dialogue and innovation including sharing of challenges and ideas\n* External contributions welcome\n  * Pull requests\n  * Design patterns\n  * Issues and suggestions\n  * Documentation\n  * Testing\n* Multi-level review process for contributions to ensure code integrity (combination of automated and manual reviews)\n\n## How to Contribute\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## License\n\nUnless otherwise noted, the source code of this project is covered under Crown Copyright, Government of Canada, and is distributed under the [MIT License](LICENSE).\n\nThe Canada wordmark and related graphics associated with this distribution are protected under trademark law and copyright law. No permission is granted to use them outside the parameters of the Government of Canada's corporate identity program. For more information, see [Federal identity requirements](https://www.canada.ca/en/treasury-board-secretariat/topics/government-communications/federal-identity-requirements.html).\n\n-------------------------------------------------------------------\n\n# Boîte à outils de l’expérience Web (BOEW)\n\n## Qu’est-ce que la Boîte à outils de l’expérience Web?\n\n* Une bibliothèque de code [primée](https://wet-boew.github.io/wet-boew/docs/ref/accolades-fr.html#primes) pour construire des sites Web [accessibles](https://wet-boew.github.io/wet-boew/index-fr.html#accessibilit), [faciles d'emploi](https://wet-boew.github.io/wet-boew/index-fr.html#facilit-demploi), [interopérables](https://wet-boew.github.io/wet-boew/index-fr.html#interoprabilit), [optimisés pour les appareils mobiles](https://wet-boew.github.io/wet-boew/index-fr.html#conception-optimise-pour-les-appareils-mobiles-et-ractive) et [multilingues](https://wet-boew.github.io/wet-boew/index-fr.html#multilingue)\n* [Des modèles, ainsi que des composants réutilisables, qui sont flexibles et personnalisables](https://wet-boew.github.io/wet-boew/index-fr.html#personnalisable-et-rutilisable)\n* Un [projet à source ouverte collaboratif dirigé par le Gouvernement du Canada](https://wet-boew.github.io/wet-boew/index-fr.html#approche-collaborative)\n\n## Ressources clés\n\n* [Documentation](https://wet-boew.github.io/wet-boew/docs/index-fr.html)\n* [Téléchargements](https://wet-boew.github.io/wet-boew/docs/versions/dwnld-fr.html)\n* [Exemples pratiques](https://wet-boew.github.io/wet-boew/demos/index-fr.html)\n* [Historique des versions](https://wet-boew.github.io/wet-boew/docs/versions/index-fr.html) et [feuille de route](https://wet-boew.github.io/wet-boew/docs/versions/rdmp-fr.html)\n* [Conditions régissant l'utilisation](https://wet-boew.github.io/wet-boew/Licence-fr.html) (licence MIT)\n* [Dépôt de code source](https://github.com/wet-boew/wet-boew/) et [lignes directrices pour les contributeurs](https://wet-boew.github.io/wet-boew/docs/start-fr.html#develop)\n* [Matériel de communications](https://wet-boew.github.io/wet-boew/docs/comms-fr.html)\n* [Sites Web qui se servent de la BOEW](https://wet-boew.github.io/wet-boew/docs/ref/wetsites-fr.html)\n\n## Avantages\n\n### Accessibilité\n\n* Conforme aux [Règles pour l'accessibilité des contenus Web (WCAG) 2.0](https://www.w3.org/Translations/WCAG20-fr/) niveau AA\n* S'appuie sur [WAI-ARIA](https://www.w3.org/TR/wai-aria/) pour améliorer l'accessibilité\n* Vérification avec les technologies d'assistance (Groupe de travail sur l'accessibilité)\n\n### Facilité d'emploi\n\n* Approche itérative pour la conception\n* Patrons de conception et les essais de facilité d'emploi (Groupe de travail sur l'expérience des utilisateurs)\n\n### Interopérabilité\n\n* Approche centrée sur le [HTML5](https://www.w3.org/TR/html5/) (s'appuyant sur le soutien HTML5 natif et puis les &laquo;correctifs&raquo; pour résoudre les problèmes de soutien)\n* Soutien pour plusieurs navigateurs (IE, Firefox, Chrome, Safari, Opera)\n* Soutien en développement pour les données HTML ([RDFa 1.1 Lite](https://www.w3.org/TR/rdfa-lite/), [Schema.org](https://www.schema.org/))\n\n### Conception optimisée pour les appareils mobiles et réactive\n\n* S'adapte à différentes tailles d'écran et capacités d'appareil\n* Soutien pour les écrans tactiles\n* Optimisé pour les performances\n* Soutien en développement pour les applications s’installant sur un appareil mobile\n\n### Multilingue\n\n* Soutien actuellement 33 langues (y compris les langues droite-à-gauche)\n  * Anglais\n  * Français\n  * Afrikaans\n  * Albanais\n  * Allemand\n  * Arabe\n  * Arménien\n  * Bulgare\n  * Chinois\n  * Chinois (simplifiée)\n  * Coréen\n  * Espagnol\n  * Estonien\n  * Grec\n  * Hindi\n  * Hongrois\n  * Indonésien\n  * Islandais\n  * Italien\n  * Japonais\n  * Letton\n  * Lituanien\n  * Néerlandais\n  * Polonais\n  * Portugais\n  * Portugais (brésilien)\n  * Russe\n  * Slovaque\n  * Tchèque\n  * Thaï\n  * Turc\n  * Ukrainien\n  * Vietnamien\n\n### Personnalisable et réutilisable\n\n* Cadre flexible qui supporte des thèmes personnalisés\n* Soutien [2 thèmes différents](https://wet-boew.github.io/wet-boew/docs/ref/themesstyle-fr.html)\n* Modèles, [plugiciels](https://wet-boew.github.io/wet-boew/docs/ref/plugins-fr.html) et gadgets réutilisables\n* [Adapté aux différents systèmes de gestion de contenu et cadres de programmation](https://wet-boew.github.io/wet-boew/docs/ref/variants-fr.html) (Drupal, WordPress, SharePoint (en développement), DotNetNuke (en développement), PHP, SSI, Java/Maven)\n\n### Réduit les coûts en partageant et en collaborant ouvertement\n\n* Réduit les coûts de recherche et de développement\n* Évite la duplication des efforts\n* Produit des résultats de meilleure qualité\n\n### Approche collaborative\n\n* Projet géré ouvertement sur GitHub, y compris les discussions à travers le système de suivi des questions\n* Encourage la libre circulation des idées, du dialogue et de l'innovation, y compris le partage des défis et des idées\n* Les contributions externes sont invités\n  * Soumissions de code\n  * Patrons de conception\n  * Problèmes et suggestions\n  * Documentation\n  * Évaluations\n* Processus d'examen sur plusieurs niveaux pour les contributions pour assurer l'intégrité du code (combinaison d'évaluations automatisées et manuelles)\n\n## Comment contribuer\nVoir [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Licence\nSauf indication contraire, le code source de ce projet est protégé par le droit d'auteur de la Couronne du gouvernement du Canada et distribué sous la [licence MIT](LICENSE).\n\nLe mot-symbole « Canada » et les éléments graphiques connexes liés à cette distribution sont protégés en vertu des lois portant sur les marques de commerce et le droit d'auteur. Aucune autorisation n'est accordée pour leur utilisation à l'extérieur des paramètres du programme de coordination de l'image de marque du gouvernement du Canada. Pour obtenir davantage de renseignements à ce sujet, veuillez consulter les [Exigences pour l'image de marque](https://www.canada.ca/fr/secretariat-conseil-tresor/sujets/communications-gouvernementales/exigences-image-marque.html).\n"]
Paddle3D,A 3D computer vision development toolkit based on PaddlePaddle. It supports point-cloud object detection, segmentation, and monocular 3D object detection models.,344,https://github.com/PaddlePaddle/Paddle3D,release/1.0,['# Paddle3D\n## 🌈简介\n\nPaddle3D是飞桨官方开源的端到端深度学习3D感知套件，涵盖了许多前沿和经典的3D感知模型，支持多种模态和多种任务，可以助力开发者便捷地完成 **『自动驾驶』** 领域模型 从训练到部署的全流程应用。\n\n<div align="center">\n<p align="center">\n  <img src="https://user-images.githubusercontent.com/29754889/185546875-b8296cf4-f298-494b-8c15-201a2559d7ea.gif" align="middle" width="980"/>\n</p>\n</div>\n\n<div align="center">\n<p align="center">\n  <img src="https://user-images.githubusercontent.com/29754889/185551580-828f08d0-d607-4020-9e05-b96110bce7eb.gif" align="middle" width="980"/>\n</p>\n</div>\n\n## ✨主要特性\n\n### 🧩灵活的框架设计\n\n针对各类3D数据格式，灵活构建数据处理、骨干网络等核心模块，支持基于[PaddleDetection](https://github.com/PaddlePaddle/PaddleDetection)、[PaddleSeg](https://github.com/PaddlePaddle/PaddleSeg)灵活扩展2D视觉感知能力，并提供API与脚本两种训练评估方式，满足开发者灵活定制的差异化需求。\n\n### 📱丰富的模型库\n\n聚合主流3D感知算法及精度调优策略，覆盖单目、点云等多种模态及检测、分割等多种任务类型。\n\n\n### 🎗️端到端全流程\n\n支持KITTI、nuScenes、Waymo等主流3D数据集，提供从数据处理、模型搭建、训练调优到部署落地的全流程能力，极致优化模型性能，适配多种自动驾驶主流芯片，支持计算图优化、TensorRT/OpenVINO等加速库，并提供了开箱即用的部署教程，5分钟即可完成模型部署。\n\n### 🏆无缝衔接Apollo\n\n无缝对接Apollo自动驾驶平台，支持真机与仿真平台实验效果快速验证、多模态模型高性能融合，实现自动驾驶全栈式技术方案的高效搭建。\n\n<div align="center">\n<p align="center">\n  <img src="https://user-images.githubusercontent.com/61035602/209662380-6f67d4df-12a1-43b0-a79e-424eb4f4dc75.png" align="middle" width="980"/>\n</p>\n</div>\n\n## 📣最新进展\n\n**💎稳定版本**\n\n位于[`主分支`](https://github.com/PaddlePaddle/Paddle3D)，Paddle3D v1.0正式版本发布，详情请参考[release note](https://github.com/PaddlePaddle/Paddle3D/releases/tag/v1.0)。\n\n**🧬预览版本**\n\n位于[`develop`](https://github.com/PaddlePaddle/Paddle3D/tree/develop)分支，体验最新功能请切换到[该分支](https://github.com/PaddlePaddle/Paddle3D/tree/develop)。\n## 👫开源社区\n\n- **📑项目合作：** 如果您是企业开发者且有明确的目标检测垂类应用需求，请扫描如下二维码入群，并联系`群管理员AI`后可免费与官方团队展开不同层次的合作。\n- **🏅️社区贡献：** Paddle3D非常欢迎你加入到飞桨社区的开源建设中，参与贡献方式可以参考[开源项目开发指南](https://www.paddlepaddle.org.cn/documentation/docs/zh/dev_guides/index_cn.html)。\n- **💻直播教程：** Paddle3D会定期在飞桨直播间([B站:飞桨PaddlePaddle](https://space.bilibili.com/476867757)、[微信: 飞桨PaddlePaddle](https://mp.weixin.qq.com/s/6ji89VKqoXDY6SSGkxS8NQ))，针对发新内容、以及产业范例、使用教程等进行直播分享。\n\n<div align="center">\n<img src="https://user-images.githubusercontent.com/61035602/209660514-4285abea-a855-44c4-9533-f2e90b9ca608.jpeg"  width = "150" height = "150",caption=\'\' />\n<p>Paddle3D官方技术交流群二维码</p>\n</div>\n\n- **🎈社区近期活动**\n\n  - **🎗️Paddle3D v1.0正式版解读**\n    - `文章传送门`：[Paddle3D正式版发布！BEV、单目、激光雷达3D感知算法开箱即用，无缝衔接Apollo](https://mp.weixin.qq.com/s/LL0DgKxEVsfhpFO6HedQ7Q)\n\n    <div align="center">\n    <img src="https://user-images.githubusercontent.com/61035602/210311019-bdb15ec8-e8b9-471c-aa1d-d2f953a6939a.png"  height = "250" caption=\'\' />\n    <p></p>\n    </div>\n\n  - **🚦自动驾驶感知系统揭秘**\n    - `课程录播&PPT传送门`：[自动驾驶感知系统揭秘](https://aistudio.baidu.com/aistudio/education/group/info/26961)\n\n    <div align="center">\n    <img src="https://user-images.githubusercontent.com/61035602/210315230-83ace5d1-1851-4d9b-b305-4290edf9dde8.png"  height = "300" caption=\'\' />\n    <p></p>\n    </div>\n\n\n### 📱模型库\n\n<table align="center">\n  <tbody>\n    <tr align="center" valign="center">\n      <td>\n        <b>单目3D感知</b>\n      </td>\n      <td>\n        <b>激光雷达3D感知</b>\n      </td>\n      <td>\n        <b>多相机3D感知</b>\n      </td>\n      <td>\n        <b>骨干网络</b>\n      </td>\n    </tr>\n    <tr valign="top">\n      <td>\n            </ul>\n          <li><b>检测</b></li>\n        <ul>\n      <ul>\n          <li><a href="docs/models/caddn">CaDDN</a></li>\n          <li><a href="docs/models/smoke">SMOKE</a></li>\n          <li><a href="docs/models/dd3d">DD3D</a></li>\n      </ul>\n      </td>\n      <td>\n      </ul>\n          <li><b>检测</b></li>\n        <ul>\n        <ul>\n           <li><a href="docs/models/pointpillars">PointPillars</a></li>\n            <li><a href="docs/models/centerpoint">CenterPoint</a></li>\n            <li><a href="docs/models/iassd">IA-SSD</a></li>\n            <li><a href="docs/models/pv_rcnn">PV-RCNN</a></li>\n            <li><a href="docs/models/voxel_rcnn">Voxel-RCNN</a></li>\n            <li><a href="docs/models/paconv">PAConv</a></li>\n            </ul>\n            </ul>\n          <li><b>分割</b></li>\n        <ul>\n        <ul>\n            <li><a href="docs/models/squeezesegv3">SqueezeSegV3</a></li>\n        </ul>\n      </td>\n      <td>\n        </ul>\n          <li><b>BEV-Camera</b></li>\n        <ul>\n        <ul>\n          <li><a href="docs/models/petr">PETR</a></li>\n          <li><a href="docs/models/petr">PETRv2</a></li>\n          <li><a href="docs/models/bevformer">BEVFormer</a></li>\n        </ul>\n      </td>\n      <td>\n        <ul>\n            <li><a href="paddle3d/models/backbones">DLA</a></li>\n            <li><a href="paddle3d/models/backbones">HRNet</a></li>\n            <li><a href="paddle3d/models/backbones">ResNet</a></li>\n            <li><a href="paddle3d/models/backbones">Transformer</a></li>\n        </ul>\n      </td>\n    </tr>\n</td>\n    </tr>\n  </tbody>\n</table>\n\n## 🔥使用教程\n\n* [安装](./docs/installation.md)\n\n* [全流程速览](./docs/quickstart.md)\n\n* [自定义数据准备](./docs/datasets/custom.md)\n\n* [配置文件详解](./docs/configuration.md)\n\n* [API](./docs/api.md)\n\n* Paddle3D&Apollo集成开发示例\n  * [视觉感知算法集成开发示例](https://apollo.baidu.com/community/Apollo-Homepage-Document/Apollo_Doc_CN_8_0/camera)\n  * [点云感知算法集成开发示例](https://apollo.baidu.com/community/Apollo-Homepage-Document/Apollo_Doc_CN_8_0/lidar)\n\n* [常见问题](./docs/faq.md)\n\n* [更新日志](./docs/release_note.md)\n\n## 💡产业实践范例\n\n产业实践范例是Paddle3D针对3D目标检测应用场景，提供的端到端开发示例，帮助开发者打通数据标注-模型训练-模型调优-预测部署全流程。\n针对每个范例我们都通过[AI-Studio](https://ai.baidu.com/ai-doc/AISTUDIO/Tk39ty6ho)提供了项目代码以及说明，用户可以同步运行体验。\n\n- [【自动驾驶实战】基于Paddle3D&Apollo的点云3D目标物检测](https://aistudio.baidu.com/aistudio/projectdetail/5268894)\n- [【自动驾驶实战】基于Paddle3D&Apollo的单目3D目标物检测](https://aistudio.baidu.com/aistudio/projectdetail/5269115)\n\n## 📝许可证\n\n本项目的发布受[Apache 2.0 license](./LICENSE)许可认证。\n']
NiuTensor,NiuTensor is an open-source toolkit developed by a joint team from NLP Lab. at Northeastern University and the NiuTrans Team. It provides tensor utilities to create and train neural networks.,367,https://github.com/NiuTrans/NiuTensor,master,["# NiuTensor张量计算库\n\n## NiuTensor\n\nNiuTensor是小牛开源项目所开发的一个轻量级工具包，提供了完整的张量定义及计算功能，可以被用于深度学习相关研究及工业系统的开发。NiuTensor具有以下特点：\n\n* 简单小巧，易于修改\n* C语言编写，代码高度优化\n* 同时支持CPU和GPU设备\n* 丰富的张量计算接口\n* 支持C/C++调用方式\n\n## 开发文档\n\n更多详细使用方法请见[NiuTensor开发文档](http://opensource.niutrans.com/niutensor/index.html)，包括：\n* 张量计算的调用接口及说明\n* 示例程序（如语言模型、机器翻译等）\n\n## 安装方法\n\nNiuTensor工具包的安装方式为CMake（跨平台：支持Windows、Linux以及macOS），集成开发环境支持Visual Studio（Windows平台）以及CLion（Linux和macOS平台）。\n\nNiuTensor工具包的第三方运算加速库支持：\n\n* 所创建项目如在CPU上运行，我们的系统支持高性能的数学运算库，推荐安装[MKL](https://software.intel.com/en-us/mkl)或[OpenBLAS](http://www.openblas.net/)。\n* 所创建项目如需在GPU上运行，需安装 [CUDA](https://developer.nvidia.com/cuda-downloads)，CUDA版本需求为9.2及以上，CUDA工具为创建高性能GPU加速应用程序提供了开发环境。\n\n> 注意：\n>\n> 对于第三方运算库的支持中，由于MKL和OpenBLAS二者所实现的API互有重叠，因此不支持同时使用。\n\n### 工具包的安装\n\nNiuTensor工具包可以在Windows、Linux以及macOS环境下进行安装，支持生成可执行程序以及动态链接库两种目标，具体安装方法如下。\n\n#### Windows\n\n对于Windows平台下NiuTensor工具包的使用，这里推荐通过Visual Studio集成开发环境对项目进行管理，项目配置使用CMake自动生成。\n\n##### CMake方式（Visual Studio）\n\n对于Windows平台的NiuTensor工具包安装，这里可以使用CMake工具自动生成Visual Studio项目（需要用户提前安装CMake工具以及Visual Studio集成开发环境），操作步骤如下：\n\n- 在工具包根目录新建目录以保存生成的Visual Studio项目文件（如建立build目录）。\n- 在项目根目录打开Windows平台的命令行工具（如PowerShell），执行`cd build`命令进入新建的build目录。\n- 执行CMake命令对Visual Studio项目进行生成（如果 visual studio 版本低于 2019，则在使用下列命令的时候需额外加上`-A x64`的CMake参数），如计划生成动态链接库，则仅需在命令中额外加上`-DGEN_DLL=ON`的CMake参数即可，否则默认生成可执行程序。\n  - 如项目计划启用MKL数学运算库（需用户自行安装），则仅需在CMake命令中使用`-DUSE_MKL=ON`参数，并通过`-DINTEL_ROOT='/intel/root/path'`指定MKL库（Intel工具包）的安装路径。如`cmake -DUSE_MKL=ON -DINTEL_ROOT='C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2020.2.254/windows' ..`。\n  - 如项目计划启用OpenBLAS数学运算库（需用户自行安装），则仅需在CMake命令中使用`-DUSE_OPENBLAS=ON`参数，并通过`-DOPENBLAS_ROOT='/openblas/root/path'`指定OpenBLAS库的安装路径。如`cmake -DUSE_OPENBLAS=ON -DOPENBLAS_ROOT='C:/Program Files/OpenBLAS' ..`。\n  - 如项目计划启用CUDA数学运算库（需用户自行安装），则仅需在CMake命令中使用`-DUSE_CUDA=ON`参数，并通过`-DCUDA_TOOLKIT_ROOT='/cuda/root/path'`指定CUDA库的安装路径，通过-DGPU_ARCH=ARCH指定所在GPU设备的架构（K：Kepler架构；M：Maxwell架构；P：Pascal架构；V：Volta架构；T：Turing架构；A：Ampere架构）。如`cmake -DUSE_CUDA=ON -DCUDA_TOOLKIT_ROOT='C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.2' -DGPU_ARCH=P ..`。如需在GPU设备上使用半精度浮点数进行运算，需在启用`-DUSE_CUDA=ON`参数的同时启用`-USE_HALF_PRECISION=ON`参数（需要注意的是半精度但需要注意的是，半精度操作仅在使用Pascal及更新架构的NVIDIA GPU中提供支持，该项可参考[NVIDIA GPU设备信息](https://developer.nvidia.com/cuda-gpus)进行查询）。\n- 执行成功将显示`Build files have been written to:...`。\n- 打开build目录中的NiuTensor.sln文件即可通过Visual Studio打开NiuTensor项目。\n- 打开后在解决方案管理器中选中NiuTensor，右键将其设为启动项目即可开始使用。\n\n> 注意：\n>\n> 动态链接库在编译结束后并不能直接运行，生成的库文件将保存在项目根目录的lib路径下，用户可根据自身需求将其嵌入到自己的项目中进行使用。\n\n#### Linux和macOS\n\n对于Linux和macOS平台下NiuTensor工具包的使用，这里提供两种使用方式进行项目管理，分别为基于CMake的CLion集成开发环境以及CMake工具（命令行）的方式，开发人员可任选其一。\n\n##### CMake方式（CLion）\n\n对于Linux或macOS平台的NiuTensor工具包安装，CLion集成开发环境可以通过对CMakeLists.txt文件进行解析自动获取项目信息（需要用户提前安装CMake工具以及CLion集成开发环境），操作步骤如下：\n\n- 使用CLion打开NiuTensor项目所在目录（确保CMakeLists.txt在其根目录位置），CLion将根据CMakeLists.txt文件自动读取项目信息。\n- 打开CLion首选项，点击“构建，执行，部署”选项卡中的CMake，在“CMake选项”中进行设置，设置完成后CLion将自动使用CMake对项目进行构建，如计划生成动态链接库，则仅需在在“CMake选项”中额外加上`-DGEN_DLL=ON`的CMake参数即可，否则默认生成可执行程序。\n  - 如项目计划启用MKL数学运算库（需用户自行安装），则仅需在“CMake选项”中填入`-DUSE_MKL=ON`，并通过`-DINTEL_ROOT='/intel/root/path'`指定MKL库（Intel工具包）的安装路径。如`-DUSE_MKL=ON -DINTEL_ROOT='/opt/intel/compilers_and_libraries_2020.2.254/linux'`。\n  - 如项目计划启用OpenBLAS数学运算库（需用户自行安装），则仅需在“CMake选项”中填入`-DUSE_OPENBLAS=ON`，并通过`-DOPENBLAS_ROOT='/openblas/root/path'`指定OpenBLAS库的安装路径。如`-DUSE_OPENBLAS=ON -DOPENBLAS_ROOT='/opt/OpenBLAS'`。\n  - 如项目计划启用CUDA数学运算库（需用户自行安装），则仅需在“CMake选项”中填入`-DUSE_CUDA=ON`，并通过`-DCUDA_TOOLKIT_ROOT='/cuda/root/path'`指定CUDA库的安装路径，通过-DGPU_ARCH=ARCH指定所在GPU设备的架构（K：Kepler架构；M：Maxwell架构；P：Pascal架构；V：Volta架构；T：Turing架构；A：Ampere架构）。如`-DUSE_CUDA=ON -DCUDA_TOOLKIT_ROOT='/usr/local/cuda-9.2' -DGPU_ARCH=P `。如需在GPU设备上使用半精度浮点数进行运算，需在启用`-DUSE_CUDA=ON`参数的同时启用`-USE_HALF_PRECISION=ON`参数（需要注意的是半精度但需要注意的是，半精度操作仅在使用Pascal及更新架构的NVIDIA GPU中提供支持，该项可参考[NVIDIA GPU设备信息](https://developer.nvidia.com/cuda-gpus)进行查询）。\n\n##### CMake方式（命令行）\n\n若仅需通过命令行方式对项目进行管理，开发者同样可以使用CMake快速对NiuTensor项目进行编译安装（需要用户提前安装CMake工具），操作步骤如下：\n\n- 在项目根目录打开Linux或macOS平台的命令行工具（如Terminal），在工具包内新建目录以保存生成的中间文件（如执行`mkdir build`建立build目录）。\n- 执行`cd build`命令进入新建的build目录。\n- 执行CMake命令对项目进行生成，如计划生成动态链接库，则仅需在命令中额外加上`-DGEN_DLL=ON`的CMake参数即可，否则默认生成可执行程序。\n  - 如项目计划启用MKL数学运算库（需用户自行安装），则仅需在CMake命令中使用`-DUSE_MKL=ON`参数，并通过`-DINTEL_ROOT='/intel/root/path'`指定MKL库（Intel工具包）的安装路径。如`cmake -DUSE_MKL=ON -DINTEL_ROOT='/opt/intel/compilers_and_libraries_2020.2.254/linux' ..`。\n  - 如项目计划启用OpenBLAS数学运算库（需用户自行安装），则仅需在CMake命令中使用`-DUSE_OPENBLAS=ON`参数，并通过`-DOPENBLAS_ROOT='/openblas/root/path'`指定OpenBLAS库的安装路径。如`cmake -DUSE_OPENBLAS=ON -DOPENBLAS_ROOT='/opt/OpenBLAS' ..`。\n  - 如项目计划启用CUDA数学运算库（需用户自行安装），则仅需在CMake命令中使用`-DUSE_CUDA=ON`参数，并通过`-DCUDA_TOOLKIT_ROOT='/cuda/root/path'`指定CUDA库的安装路径，通过-DGPU_ARCH=ARCH指定所在GPU设备的架构（K：Kepler架构；M：Maxwell架构；P：Pascal架构；V：Volta架构；T：Turing架构；A：Ampere架构）。如`cmake -DUSE_CUDA=ON -DCUDA_TOOLKIT_ROOT='/usr/local/cuda-9.2' -DGPU_ARCH=P ..`。如需在GPU设备上使用半精度浮点数进行运算，需在启用`-DUSE_CUDA=ON`参数的同时启用`-USE_HALF_PRECISION=ON`参数（需要注意的是半精度但需要注意的是，半精度操作仅在使用Pascal及更新架构的NVIDIA GPU中提供支持，该项可参考[NVIDIA GPU设备信息](https://developer.nvidia.com/cuda-gpus)进行查询）。\n- 执行成功将显示`Build files have been written to:...`并在该目录下生成Makefile文件。\n- 执行`make -j`命令对NiuTensor项目进行编译，执行成功将显示`Built target NiuTensor`，安装完毕。\n\n如编译目标为可执行程序，则在完成安装后将在bin目录下生成NiuTensor，如目标为动态链接库，则所生成的库文件将保存在项目根目录的lib路径下。\n\n对于生成可执行程序的安装方式，在环境配置完成后，可以使用`NiuTensor -test`命令运行本项目的测试用例，如果最后输出\n\n```shell\nOK! Everything is good!\n```\n\n则说明本项目配置成功。\n\n>注意：\n>\n>若先生成CPU上运行的可执行文件，之后如需生成GPU的可执行文件，需要先执行make clean命令，删除生成CPU时产生的中间结果，反之亦然。\n\n### 将工具包嵌入到自己的项目中\n\n若希望在自己的项目中使用NiuTensor工具包，这里建议将工具包编译为动态链接库进行使用，编译库的方式可以参考前文所述，而对于库文件的使用规则如下：\n\n* 在所创建项目中需要引用XTensor.h、core里的CHeader.h和function里的FHeader.h这三个头文件：\n  * 通过XTensor.h可以获取我们需要操作的XTensor类。\n  * 通过core里的CHeader.h可以对Tensor进行一些张量运算。\n  * 通过function里的FHeader.h可以调用一些激活函数。\n* 在所创建项目中使用命名空间nts。\n\n编译过程以单元测试以及样例程序为例（即编译NiuTensor库中的Main.cpp），假设动态链接库所在的路径为当前目录（项目根目录）的lib目录，则通过以下命令可以编译生成可执行文件：\n\n```shell\ng++ -o App ./source/Main.cpp -L./lib -lNiuTensor -std=c++11\n```\n\n然后将lib目录加入到环境变量中，可以通过以下命令进行临时修改（退出shell后则失效）：\n\n```shell\nexport LD_LIBRARY_PATH=./lib:$LD_LIBRARY_PATH\n```\n\n或者将上述命令加入到~/.bashrc配置文件中进行永久修改（需要将相对路径./lib转换为绝对路径），并执行以下这条命令使修改立即生效：\n\n```shell\nsource ~/.bashrc\n```\n\n之后就可以运行App可执行文件。\n\n```shell\n./App\n```\n\n\n## 开发团队\n\nNiuTensor张量计算库由东北大学自然语言处理实验室小牛开源团队开发，致力于为深度学习相关研究及工业系统的开发提供轻量级的张量定义及计算功能。\n\n## 更新版本\n\nNiuTensor version 0.3.3 - 2020年9月14日\n\nNiuTensor version 0.4.0 - 2021年3月13日\n\nNiuTensor version 0.4.1 - 2021年11月6日"]
CMWTAT_Digital_Edition,CloudMoe Windows 10/11 Activation Toolkit get digital license, the best open source Win 10/11 activator in GitHub. GitHub 上最棒的开源 Win10/Win11 数字权利（数字许可证）激活工具！,10712,https://github.com/TGSAN/CMWTAT_Digital_Edition,master,['# Official Site 官方网站\n\n[https://cmwtat.cloudmoe.com]\n\n# CloudMoe Windows 10+ Activation Toolkit Digital Edition\n\nThis toolkit can activate your Windows 10 and Windows 11 use digital license.\n\n一款使用`CSharp`编写的 `Windows 10` 和 `Windows 11` 数字权利激活工具。\n\n![UI界面截图][UI_image]\n\n# Usage 使用\n\n## Getting started 入门\n\n### 使用自动模式激活 `Windows 10` 或 `Windows 11`\n\n##### English Version\n\n1. Download release `.exe` file.\n\n2. Run it.\n\n3. Click `Activate` button.\n\n4. Enjoy it :)\n\n##### 中文版\n\n1. 下载 Releases 里的 `.exe` 发行文件。\n\n2. 运行它。\n\n3. 点按 `Activate` 按钮。\n\n4. 完成~\n\n## Advanced 进阶\n\n### 在不同版本 `Windows` 之间转换\n\n* 注意: 目前已知 `Windows` 的 `专业版（Professional）`、`专业工作站版（ProfessionalWorkstation）`、`教育版（Education）`、`专业教育版（ProfessionalEducation）`、`企业版（Enterprise）` 之间可以进行互相转换（N版本与LTSB版本除外），而这些版本与`家庭版（Core）`均不能直接一键转换，如需转换请使用 2.6 版本新增的 `升级到完整版 Windows` 功能或使用 `Windows设置` 中的 `更改产品密钥` 功能进行升级。  \n激活 `物联网企业版（IoTEnterprise）` 版本前需要先激活 `企业版（Enterprise）`。\n\n##### `Auto Mode` 自动模式\n\n1. 运行它。\n\n2. 选择 `Auto Mode` 。\n\n3. 在下拉列表中选择要升级到的版本。\n\n4. 点按 `Convert Versions` 按钮。\n\n5. 完成。\n\n##### `Manual Mode` 手动模式\n\n1. 运行它。\n\n2. 选择 `Manual Mode` 。\n\n3. 输入框中输入需要升级到的版本对应的OEM零售密钥（不需要产品包装上的激活密钥，而是微软官方分配的密钥，如专业版对应密钥为 `VK7JG-NPHTM-C97JM-9MPGT-3V66T`）。\n\n4. 点按 `Activate` 按钮。\n\n5. 完成。\n\n### 通过 `Manual Mode` 手动模式激活不在列表中的 `Windows` 版本\n\n* 注意:  此方法不适用于某些版本的激活，如 `专业教育版（ProfessionalEducation）` ，即使你输入了对应的OEM零售密钥。\n\n1. 运行它。\n\n2. 选择 `Manual Mode` 。\n\n3. 输入框中输入需要升级到的版本对应的OEM零售密钥（不需要产品包装上的激活密钥，而是微软官方分配的密钥，如专业版对应密钥为 `VK7JG-NPHTM-C97JM-9MPGT-3V66T`）。\n\n4. 点按 `Convert Versions` 按钮。\n\n5. 完成。\n\n## Startup Parameters 启动参数\n\n```\n-?  --help            启动后弹出启动参数帮助对话框。\n-a  --auto            启动后自动激活系统。\n-e  --expact          自动激活系统时允许使用实验性方案。（需要与 -a 或 --auto 配合使用）\n-h  --hide            以隐藏模式启动，激活进度以通知形式显示。（需要与 -a 或 --auto 配合使用）\n```\n\n# License 许可协议\n\n[GPL-2.0](./LICENSE)\n\n# Contributors 贡献者\n\n[https://github.com/TGSAN/CMWTAT_Digital_Edition/graphs/contributors]\n\n[UI_image]:./images/UI.jpg\n[https://cmwtat.cloudmoe.com]:https://cmwtat.cloudmoe.com\n[https://github.com/TGSAN/CMWTAT_Digital_Edition/graphs/contributors]:https://github.com/TGSAN/CMWTAT_Digital_Edition/graphs/contributors\n']
ttskit,text to speech toolkit. 好用的中文语音合成工具箱，包含语音编码器、语音合成器、声码器和可视化模块。,541,https://github.com/kuangdd/ttskit,main,['\n![ttskit](ttskit.png "ttskit")\n\n## ttskit\nText To Speech Toolkit: 语音合成工具箱。\n\n### 安装\n\n```\npip install -U ttskit\n```\n\n- 注意\n    * 可能需另外安装的依赖包：torch，版本要求torch>=1.6.0,<=1.7.1，根据自己的实际环境安装合适cuda或cpu版本的torch。\n    * ttskit的默认音频采样率为22.5k。\n    * 自行设置环境变量CUDA_VISIBLE_DEVICES以调用GPU，如果不设置，则默认调用0号GPU，没有GPU则使用CPU。\n    * 默认用mspk模式的多发音人的语音合成模型，griffinlim声码器。\n\n### 语音合成Demo网页\n\nhttp://119.91.208.249:9000/ttskit\n\n### 资源\n使用ttskit的过程中会自动下载模型和语音资源。\n\n如果下载太慢或无法下载，也可自行从百度网盘下载，把下载的资源合并到ttskit目录下（更新resource目录）。\n\n链接：https://pan.baidu.com/s/13RPGNEKrCX3fgiGl7P5bpw\n\n提取码：b7hw\n\n### 快速使用\n```\nimport ttskit\n\nttskit.tts(\'这是个示例\', audio=\'14\')\n\n# 参数介绍\n\'\'\'语音合成函数式SDK接口，函数参数全部为字符串格式。\ntext为待合成的文本。\nspeaker为发音人名称，可选名称为_reference_audio_dict；默认的发音人名称列表见resource/reference_audio/__init__.py。\naudio为发音人参考音频，如果是数字，则调用内置的语音作为发音人参考音频；如果是语音路径，则调用audio路径的语音作为发音人参考音频。\n注意：如果用speaker来选择发音人，请把audio设置为下划线【_】。\noutput为输出，如果以.wav结尾，则为保存语音文件的路径；如果以play开头，则合成语音后自动播放语音。\n\'\'\'\n```\n\n    ### 版本\n    v0.3.8\n    \n### sdk_api\n语音合成SDK接口。\n本地函数式地调用语音合成。\n\n+ 简单使用\n```python\nfrom ttskit import sdk_api\n\nwav = sdk_api.tts_sdk(\'文本\', audio=\'24\')\n```\n\n### cli_api\n语音合成命令行接口。\n用命令行调用语音合成。\n\n+ 简单使用\n```python\nfrom ttskit import cli_api\n\nargs = cli_api.parse_args()\ncli_api.tts_cli(args)\n# 命令行交互模式使用语音合成。\n```\n\n+ 命令行\n```\ntkcli\n\nusage: tkcli [-h] [-i INTERACTION] [-t TEXT] [-s SPEAKER] [-a AUDIO]\n             [-o OUTPUT] [-m MELLOTRON_PATH] [-w WAVEGLOW_PATH] [-g GE2E_PATH]\n             [--mellotron_hparams_path MELLOTRON_HPARAMS_PATH]\n             [--waveglow_kwargs_json WAVEGLOW_KWARGS_JSON]\n\n语音合成命令行。\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INTERACTION, --interaction INTERACTION\n                        是否交互，如果1则交互，如果0则不交互。交互模式下：如果不输入文本或发音人，则为随机。如果输入文本为exit\n                        ，则退出。\n  -t TEXT, --text TEXT  Input text content\n  -s SPEAKER, --speaker SPEAKER\n                        Input speaker name\n  -a AUDIO, --audio AUDIO\n                        Input audio path or audio index\n  -o OUTPUT, --output OUTPUT\n                        Output audio path. 如果play开头，则播放合成语音；如果.wav结尾，则保存语音。\n  -m MELLOTRON_PATH, --mellotron_path MELLOTRON_PATH\n                        Mellotron model file path\n  -w WAVEGLOW_PATH, --waveglow_path WAVEGLOW_PATH\n                        WaveGlow model file path\n  -g GE2E_PATH, --ge2e_path GE2E_PATH\n                        Ge2e model file path\n  --mellotron_hparams_path MELLOTRON_HPARAMS_PATH\n                        Mellotron hparams json file path\n  --waveglow_kwargs_json WAVEGLOW_KWARGS_JSON\n                        Waveglow kwargs json\n```\n\n\n### web_api\n语音合成WEB接口。\n构建简单的语音合成服务。\n\n+ 简单使用\n```python\nfrom ttskit import web_api\n\nweb_api.app.run(host=\'0.0.0.0\', port=2718, debug=False)\n# 用POST或GET方法请求：http://localhost:2718/tts，传入参数text、audio、speaker。\n# 例如GET方法请求：http://localhost:2718/tts?text=这是个例子&audio=2\n```\n\n+ 使用说明\n\n### http_server\n语音合成简易界面。\n构建简单的语音合成网页服务。\n\n+ 简单使用\n```python\nfrom ttskit import http_server\n\nhttp_server.start_sever()\n# 打开网页：http://localhost:9000/ttskit\n```\n\n+ 命令行\n```\ntkhttp\n\nusage: tkhttp [-h] [--device DEVICE] [--host HOST] [--port PORT]\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --device DEVICE  设置预测时使用的显卡,使用CPU设置成-1即可\n  --host HOST      IP地址\n  --port PORT      端口号\n```\n\n+ 网页界面\n![index](ttskit/templates/index.png "index")\n\n+ 注意事项\n    1. 模式mode\n        - 可选：mspk、rtvc\n        - 默认：mspk\n    2. 声码器vocoder\n        - 可选：melgan、griffinlim、waveglow\n        - 默认：melgan\n        - melgan控制参数\n            * vocoder: melgan\n        - griffinlim控制参数\n            * vocoder: griffinlim\n            * griffinlim_iters: 30\n        - waveglow控制参数\n            * vocoder: waveglow\n            * sigma: 1.0\n            * denoiser_strength: 1.2\n    3. 参考音频audio\n        - 可选：1-24的整数（内置的24个参考音频）、下划线_（）\n        - POST请求接口：可传入wav音频的base64编码的字符串。\n    4. 发音人speaker\n        - 可选：Aibao、Aicheng、Aida、Aijia、Aijing、Aimei、Aina、Aiqi、Aitong、Aiwei、Aixia、Aiya、Aiyu、Aiyue、Siyue、Xiaobei、Xiaogang、Xiaomei、Xiaomeng、Xiaowei、Xiaoxue、Xiaoyun、Yina、biaobei\n\n### resource\n模型数据等资源。\n\naudio\nmodel\nreference_audio\n\n+ 内置发音人映射表\n\n```python\n_speaker_dict = {\n    1: \'Aibao\', 2: \'Aicheng\', 3: \'Aida\', 4: \'Aijia\', 5: \'Aijing\',\n    6: \'Aimei\', 7: \'Aina\', 8: \'Aiqi\', 9: \'Aitong\', 10: \'Aiwei\',\n    11: \'Aixia\', 12: \'Aiya\', 13: \'Aiyu\', 14: \'Aiyue\', 15: \'Siyue\',\n    16: \'Xiaobei\', 17: \'Xiaogang\', 18: \'Xiaomei\', 19: \'Xiaomeng\', 20: \'Xiaowei\',\n    21: \'Xiaoxue\', 22: \'Xiaoyun\', 23: \'Yina\', 24: \'biaobei\'\n}\n```\n\n### encoder\n#### 声音编码器（encoder）\n- 把语音音频编码为指定维度的向量。\n- 向量的相似度反映音频音色的相似度。如果两个音频的编码向量相似度越高，则这两个音频的音色越接近。\n- 编码向量主要用于控制发音的音色。\n\n#### GE2E声音编码器\n- 谷歌在上发布了GE2E算法的论文，详细介绍了其声纹识别技术的核心实现方法。\n- 这是一种基于批（batch）的训练方法，这种基于批的训练，则是将同一批中每个说话者与其最相似的说话者的声纹特征变得不同。\n- 论文通过理论和实验论证了，这种始终针对最困难案例进行优化的训练方式，能够极大地提升训练速度和效果。\n\n### mellotron\n#### 语音合成器（synthesizer）\n- 把文本转为语音频谱数据。\n- 语音合成器接收声音编码向量和文本数据，然后结合这些信息把文本转为语音频谱。\n- 语音合成器的任务是把文本转为语音频谱，本质上是序列到序列的任务。\n- 可以把文本看做一个一个字组成的序列，把语音频谱看做是由一个一个语音特征组成的序列，语音合成器就是把文字序列转为语音特征序列的桥梁。\n- 语音合成器的关键就是怎样建立模型让文字准确的转为正确的读音，而且放在正确的位置，同时读音前后应当衔接自然，而且整个语音听起来也应当自然。\n- 要实现这样的目标，应当做很有针对性的模型。\n\n#### Mellotron语音合成器\n- Mellotron是英伟达团队提出的语音合成模型，主要目标是做韵律风格转换和音乐生成。\n- Mellotron可以更加精细化的调整韵律和音调，将基频信息引入模型刻画声调信息，基频是区别音高的主要元素。\n- Mellotron模型的训练完全端到端化，不需要在数据集中含有音乐数据也可以生成音乐。\n- Mellotron不需要对音调和文本进行人为的对齐就可以学到两者之间的对齐关系。\n- Mellotron可以使用外部输入的注意力映射表，从而实现韵律迁移。\n\n### waveglow\n#### 声码器（vocoder）\n- 把语音频谱数据转为语音信号。\n- 语音信号和语音频谱数据并不是简单可以相互转换的数据，语音转为频谱是有信息丢失的，但是频谱记录了语音最主要的信息，可以通过其他技术手段把语音频谱尽可能逼真地逆变为语音信号，声码器就是这样的技术。\n- 声码器是把声音特征转为语音信号的技术。\n- 在语音合成任务中，声码器是负责把语音频谱转为语音信号。\n- 通常语音频谱记录的语音信息并不是全面的，例如mel频谱只是记录了部分频段的幅度信息，缺失了相位信息，而且许多频率的信息也丢失了。\n- 而声码器模型就是要从这样的频谱中尽可能准确全面地还原出语音信号。\n- 现在通常的方案是用深度学习的方法来解决，针对语音特征和语音信号的关系进行建模。\n\n#### Waveglow声码器\n- WaveGlow是英伟达团队提出的一种依靠流的从梅尔频谱图合成高质量语音的模型。\n- Waveglow贡献是基于流的网络，结合了Glow和WaveNet的想法，因此网络称为WaveGlow 。\n- WaveGlow是一个生成模型，通过从分布采样中生成音频。\n- WaveGlow易于实施，仅使用单个网络进行训练，仅使用似然损失函数进行训练。\n- WaveGlow是兼顾生成速度快、生成质量高、稳定性强的模型。\n\n#### MelGAN声码器\n- MelGAN采用非自回归前馈卷积架构，在不引入额外蒸馏和感知损失的前提下，依然能够产生高质量的语音。\n- MelGAN是一种利用生成对抗网络（Generative Adversarial Networks，GANs）合成时域波形的方法。\n- MelGAN由于模型计算复杂度低，并行度高，因而合成速度极快。\n- MelGAN是基于GAN的生成模型，因而主要由生成器和判别器组成。\n- 生成器输入语音的压缩表示，如梅尔频谱，经过一层卷积后送入上采样层，上采样将梅尔频谱的序列长度匹配波形的频率。\n- 对于判别器，主体是由卷积层和下采样层组成，并且采用多尺度架构，也就是不但对原始音频做判别，还将降频处理之后的音频馈送到判别器中进行判断。\n']
FastDeploy,⚡️An Easy-to-use and Fast Deep Learning Model Deployment Toolkit for ☁️Cloud 📱Mobile and 📹Edge. Including Image, Video, Text and Audio 20+ main stream scenarios and 150+ SOTA models with end-to-end optimization, multi-platform and multi-framework support.,1688,https://github.com/PaddlePaddle/FastDeploy,develop,['README_EN.md\n']
toolkit,Kit de ferramentas para facilitar o entendimento das diretrizes WCAG,212,https://github.com/acessibilidade/toolkit,master,['\n\n![Logo do projeto Acessibilidade Toolkit](http://acessibilida.de/img/logo-acessibilidade-toolkit.png)\n\n![Contributions Welcome](https://img.shields.io/badge/contributions-welcome-blue.svg) ![a11y ok](https://img.shields.io/badge/a11y-ok-green.svg) ![Accessibility ok](https://img.shields.io/badge/accessibility-ok-green.svg) ![Accessibility ok](https://img.shields.io/badge/ux-ready-red.svg) ![Accessibility ok](https://img.shields.io/badge/design-ready-red.svg)\n\n# Acessibilidade Toolkit\n## Kit de ferramentas para auxiliar o entendimento das diretrizes WCAG\n\nVersão atual: 1.1.3\n[Changelog](https://github.com/acessibilidade/toolkit/wiki/Change-log)\n\n***\n**IMPORTANTE:**\n\nEste projeto está desatualizado se comparado a sua versão digital ([Guia WCAG](https://guia-wcag.com)). Todos os textos dos critérios da versão digital estão atualizados e revisados, mas a versão disponível para download aqui, ainda não recebeu essa atualização. De qualquer forma, entenda que isso não compromete o entendimento do material, a versão revisada apenas melhorou a comunicação das informações apresentadas.\n\n**Attention:**\n\nThis project is initially in brazilian portuguese (pt-br), but will also be available in English.\nFeel free to contribute translations.\n***\n\n### Sobre o projeto\n**Este material não substitui as diretrizes e recomendações WCAG!**\n\nA ideia aqui é facilitar e simplificar o seu entendimento através de uma apresentação lúdica e simplificada. Tornamos mais fácil a compreensão das diretrizes, mas para um melhor entendimento e aprofundamento, sempre será recomendado a consulta de informações nas diretrizes oficiais disponibilizadas pelo W3C.\n\nEste material pode ser usado de diferentes formas. A aplicação inicial foi pensada para a utilização em exercícios de card sorting onde as pessoas envolvidas em projetos digitais poderiam facilmente identificar gaps e atividades que precisariam contemplar durante o desenvolvimento de projetos digitais (sites e aplicativos).\n\nMas na prática um toolkit neste formato (cards) pode ser utilizado como **fonte rápida de consulta de diretrizes WCAG**, **disseminação de conhecimento**, **facilitador de discussões**, **identificador de funcionalidades** ou até mesmo como um **checklist**. Manusear algo físico ao invés de apenas consultar digitalmente estimula a criatividade em qualquer processo de desenvolvimento de produto.\n\nSe quiser ler detalhadamente sobre todo o processo criativo e o que me fez decidir criar esse material, leia este artigo:\nhttps://uxdesign.blog.br/acessibilidade-toolkit-entendendo-de-uma-vez-por-todas-a-wcag-e2714120d80\n\n### Como contribuir com o projeto?\nEste projeto é livre para que você contribua como puder, seja corrigindo informações, seja traduzindo o material, seja atualizando o layout, enfim... como quiser.\nPorém para que ocorra o correto desenvolvimento é sempre bom seguir algumas boas práticas, dessa forma contribuímos para um ambiente evolutivo saudável e efetivo para todos.\n\nAo contribuir com **traduções**, siga esses poucos passos:\n* Traduções precisam ser disponibilizadas publicamente;\n* Clone o repositório;\n\t* Crie uma "branch" para o projeto;\n\t* Crie uma pasta com as iniciais do idioma a ser inserido (por exemplo: para inglês, crie uma pasta _"en"_);\n\t* Acrescente o mesmo código como sufixo no nome do arquivo (por exemplo: _"acessibilidade-toolkit-cards_en.pdf"_;\n\t* Utilize sempre minúsculas tanto para nomes de pastas como nomes de arquivos;\n* Envie o "pull request" para que possamos conferir e efetuar o "merge" do material;\n* Não esqueça de descrever todas as alterações efetuadas para atualizarmos o changelog.\n\nSe você nunca contribuiu com projetos Open Source via GitHub e não tem a mínima ideia de como fazer isso, leia esses artigos:\n\n[Contribuindo com projetos Open Source (Parte 1)](https://medium.com/@pragmaticivan/contribuindo-em-projetos-open-source-utilizando-git-parte-1-d2b160e0abb5) | [Contribuindo com projetos Open Source (Parte 2)](https://medium.com/@pragmaticivan/forking-workflow-contribuindo-em-projetos-open-source-utilizando-git-parte-2-a1849204d02e)\n\n### Créditos\nEste material foi criado, planejado e desenvolvido por [Marcelo Sales](https://www.linkedin.com/in/msales78/), um designer que atua com UX, mas tem a acessibilidade como principal causa e disseminação de conhecimento.\n\n![Este projeto é uma iniciativa acessibilida.de](http://acessibilida.de/img/logo-acessibilidade-iniciativa.png)\n\n**Fonte utilizada**\n\nA fonte utilizada neste projeto é a [Tiresias Infofont](http://www.johngilltech.com/fonts/). Trata-se de uma fonte produzida por John Gill e criada especialmente a pedido do [RNIB](http://www.rnib.org.uk/) _(Royal National Institute of Blind People)_. Ela possui licença livre de uso pessoal e comercial e também está disponibilizada neste repositório.\n\n**Versões em outros idiomas e ambientes**\n\nEspanhol: A versão em Espanhol presente no diretório /es foi criada e disponibilizada por [Eduardo Pereyra](https://www.instagram.com/desarrollaweb/).\n\nNotion: Há uma versão para o [Notion](https://www.notion.so/Acessibilidade-Tolkit-a5b97315d5c44ad6991357f7c74f3658). \n\n### Licença de uso\nSinta-se livre para utilizar, traduzir, editar, customizar e redistribuir da forma como quiser, inclusive modificando o layout e características dos cards e da caixinha para armazenar. Desde que cite a fonte e inclua um link para este projeto, e também efetue a distribuição utilizando o mesmo tipo de licença.\n\nO trabalho <span xmlns:dct="http://purl.org/dc/terms/" property="dct:title">"Acessibilidade Toolkit"</span> está licenciado com uma Licença [Creative Commons - Atribuição-CompartilhaIgual 4.0 Internacional](https://creativecommons.org/licenses/by-sa/4.0/deed.pt_BR).\n\nBaseado no trabalho disponível em [http://acessibilida.de](http://acessibilida.de).\n']
wtool,shell toolkit,162,https://github.com/qdaxb/wtool,master,['     __    __  _____            _\n    / / /\\ \\ \\/__   \\___   ___ | |\n    \\ \\/  \\/ /  / /\\/ _ \\ / _ \\| |\n     \\  /\\  /  / / | (_) | (_) | |\n      \\/  \\/   \\/   \\___/ \\___/|_|\n# 介绍\n* 开发、运维工具及相关配置(基于mac及linux)。\n\n# 系统需求\n* Mac/Linux\n* git 1.7.4+\n* php4.0+（部分模块）\n\n# 安装\n```\ncurl -s "https://raw.githubusercontent.com/qdaxb/wtool/master/doc/get.sh" |bash -s \n```\n# 卸载\n```\nwtool uninstall\n```\n\n# 使用\n## 系统命令\n* `wtool`\n> 显示系统命令列表\n\n* `wtool list`\n> 列出所有可用命令\n\n* `wtool update`\n> 更新wtool\n\n* `wtool addmodule group/project`\n> 添加自定义模块，group/project对应github中的组名/项目名.\n\n* `wtool rmmodule group/project`\n> 删除自定义模块，group/project对应github中的组名/项目名.\n\n## 通用命令\n\n* `wtool mc ip1[:port1][,ip2[:port2]] [port] "command"`\n> 批量执行mc命令\n\n* `wtool redis ip1[:port1][,ip2[:port2]] [port] "command"`\n> 批量执行redis命令(需要redis-cli)\n\n* `wtool send filename [port]`\n> 使用nc发送文件（默认8888端口），接收方可以通过浏览器下载\n\n* `wtool encode "string" [type]`\n> 编码字符串，可选的type为url(default) | utf8 | html | base64。需要安装php。\n\n* `wtool decode "string" [type]`\n> 解码字符串，可选的type为url(default) | utf8 | html | base64。需要安装php。\n\n* `wtool hex [0x]number[b]`\n> 计算数字的10进制、16进制及2进制文本，输入参数默认为10进制，可选16进制（0x）及二进制（b）。\n\n* `sudo wtool swap [-s [-r]] [-g GREP_ARG]`\n> 查询当前服务器各个进程占用swap的情况。\n> >-s 表示对swap占用量进行排序（升序）\n> >-r 表示对swap占用量进行排序（降序），使用-r的前提是-s参数开启。\n> >-g grep命令的封装，用于查找特定类型的进程。比如我想查找带有java的进程，可以使用`sudo wtool swap -g java`\n>\n> 注意，使用该功能需要sudo权限\n\n## java命令\n* `wtool housemd pid [java_home]`\n> 使用housemd对java程序进行运行时跟踪，支持的操作有：\n> > - 查看加载类\n> > - 跟踪方法 \n> > - 查看环境变量\n> > - 查看对象属性值\n> \n> 详细信息请参考[housemd说明文档](https://github.com/qdaxb/wtool/raw/master/java/tools/housemd.lib/README.md)\n\n* `wtool jarconfict path`\n> 查找jar包间冲突的类\n\n* `wtool jarfind classname path`\n> 在jar包中查找类名\n\n* `wtool jargrep "text" <path or jarfile>`\n> 在jar包中查找文本，可查找常量字符串、类引用。\n\n* `wtool findcycle [path]`\n> 查找当前工程中是否存在循环引用（目前仅支持maven工程，默认为当前路径）\n\n* `wtool jvm pid`\n> 执行jvm debug工具，包含对java栈、堆、线程、gc等状态的查看，支持的功能有： \n><pre>\n>========线程相关=======\n>1 : 查看占用cpu最高的线程情况\n>2 : 打印所有线程\n>3 : 打印线程数\n>4 : 按线程状态统计线程数\n>========GC相关=======\n>5 : 垃圾收集统计（包含原因）可以指定间隔时间及执行次数，默认10秒\n>6 : 显示堆中各代的空间1000 5\n>7 : 垃圾收集统计。可以指定间隔时间及执行次数，默认10秒\n>8 : 打印perm区内存情况*会使程序暂停响应*\n>9 : 查看directbuffer情况\n>========堆对象相关=======\n>10 : dump heap到文件*会使程序暂停响应*默认保存到`pwd`/dump.bin,可指定其它路径\n>11 : 触发full gc。*会使程序暂停响应*\n>12 : 打印jvm heap统计*会使程序暂停响应*\n>13 : 打印jvm heap中top20的对象。*会使程序暂停响应*参数：1:按实例数量排序,2:按内存占用排序，默认为1\n>14 : 触发full gc后打印jvm heap中top20的对象。*会使程序暂停响应*参数：1:按实例数量排序,2:按内存占用排序，默认为1\n>15 : 输出所有类装载器在perm里产生的对象。可以指定间隔时间及执行次数\n>========其它=======\n>16 : 打印finalzer队列情况\n>17 : 显示classloader统计\n>18 : 显示jit编译统计\n>19 : 死锁检测\n>20 : 等待X秒，默认为1\n>q : exit\n></pre>\n>\n>  进入jvm工具后可以输入序号执行对应命令  \n>  可以一次执行多个命令，用分号";"分隔，如：1;3;4;5;6  \n>  每个命令可以带参数，用冒号":"分隔，同一命令的参数之间用逗号分隔，如：  \n>  Enter command queue:1;5:1000,100;10:/data1/output.bin  \n> 更多介绍请参考：https://github.com/qdaxb/wtool_java\n\n# 参与开发\n\n## 目录说明\n```\n.\n├── common        \n    └── tools    # 通用工具目录\n└── custom       # 自定义模块目录\n\n``` \n## 如何增加原生命令\n\n1. 在wtool根目录中创建文件夹，如：mygroup/tools\n2. 在tools文件夹中新建文件，文件名与命令名相同，如:mycommand，并对mycommand文件增加执行权限。\n3. 实现命令，每个命令是一个独立的shell脚本，如:\n\n    ```\n#!/bin/bash\n### this is desp\necho "hello world"\n```\n\n4. 测试命令是否可用\n\n    ```\n$ wtool list                                                                                                                                                  ~/dev/wtool/mygroup/tools\nAvailable commands:\nmygroup:\nmycommand      : this is desp\n$ wtool mycomomand\nhello world\n```\n\n5. 提交PR:)\n\n## 如何开发自己的模块\n1. 在github上创建工程，如<https://github.com/qdaxb/demo_module>\n2. 在工程根目录中创建文件夹tools\n2. 在tools文件夹中新建文件，文件名与命令名相同，如:mycommand，并对mycommand文件增加执行权限。\n3. 实现命令，每个命令是一个独立的shell脚本，如:\n\n    ```\n#!/bin/bash\n### this is desp\necho "hello world"\n```\n\n4. 使用方通过addmodule获取模块\n\n   ``` $ wtool addmodule qdaxb/demo_module```\n   \n5. enjoy\n\n    ```\n$ wtool list                                                                                                                                                  \nAvailable commands:\nqdaxb_demo_module:\nmycommand      : this is desp\n$ wtool mycomomand\nhello world\n```\n']
IoT-Toolkit,Toolkit is a IoT protocol client CLI for IoT developer and learners. CoAP、MQTT And NB-IoT protocol are currently supported. It supports colors, autocompletion, internationalization(chinese, english and german…) and multi-platforms,197,https://github.com/IoT-Technology/IoT-Toolkit,main,['<h2 align="center">\n    <a href="https://github.com/IoT-Technology/IoT-Toolkit/wiki" target="blank_">\n        <img height="250" alt="ToolKit" src="png/toolkit-logo.png"/>\n    </a>\n    <br>\n    ToolKit: 用户友好的IoT协议客户端命令行工具🔧\n</h2>\n\n<div align="center">\n\n[![GitHub issues](https://img.shields.io/github/issues/IoT-Technology/IoT-Toolkit)](https://github.com/IoT-Technology/IoT-Toolkit/issues)\n[![GitHub stars](https://img.shields.io/github/stars/IoT-Technology/IoT-Toolkit)](https://github.com/IoT-Technology/IoT-Toolkit/stargazers)\n![](https://img.shields.io/badge/language-java-orange.svg)\n![Chocolatey-downloads](https://img.shields.io/chocolatey/dt/toolkit)\n![GitHub release (latest by date)](https://img.shields.io/github/downloads/IoT-Technology/IoT-Toolkit/latest/total)\n\n</div>\n\n**Toolkit** 是一款支持多种物联网协议的客户端命令行工具。目前支持**CoAP**、**MQTT**和**NB-IoT**(电信AEP平台、移动OneNET平台)协议，未来将支持更多的协议。现代化的设计，提供**自动补全**、**多语言配置**且用户交互良好且易于操作。可在**linux**、**unix**和**windows**等操作系统中运行。\n\n<div align="center">\n\n<img src="png/toolkit-show_zh.gif" alt="HTTPie in action" width="100%"/>\n\n</div>\n\n[📖 English Document](README_CN.md) | 📖 中文文档\n\n----------------------------------------\n\n# 特性\n\n<table style="text-align:center">\n  <tr>\n    <td width=\'33%\'>\n     <h4>&#127932; 集成多种IoT协议</h4>\n      <p>支持MQTT、CoAP和NB-IoT协议，未来会支持更多协议，\n        更详细的协议打印信息；</p>\n    </td>\n    <td width=\'33%\'>\n     <h4>&#128064; 多操作系统支持</h4>\n      可在linux、unix、windows和树莓派上运行；\n    </td>\n    <td width=\'33%\'>\n      <h4>&#127759; 国际化服务</h4>\n      多语言配置，中文、英文、德语和法语支持；\n    </td>\n  </tr>\n  <tr>\n    <td width=\'33%\'>\n      <h4>&#128147; ANSI颜色和样式帮助</h4>\n       颜色使命令输出看起来好看，将重要元素与其余部分进行对比，\n       减少用户认知负荷；\n    </td>\n    <td width=\'33%\'>\n      <h4>&#128101; 现代化的设计</h4>\n      提供自动补全，用户交互良好且易于操作。\n    </td>\n    <td width=\'33%\'>\n      <h4>&#128175; 低内存占用和更快的启动速度</h4>\n      静态编译运行避免JIT的CPU开销。使用native image，提供了较快的vm性能和启动速度，\n      无需依赖任何运行环境\n    </td>\n  </tr>\n</table>\n\n\n# 快速开始\n\n## MacOS && Linux\n\n### HOMEBREW 安装\n\n```bash\nbrew install iot-technology/tap/toolkit\n```\n\n### SDKMAN安装\n\n安装[SDKMAN!](https://sdkman.io/), 请看[安装文档](https://sdkman.io/install)\n\n```bash\nsdk install toolkit\n```\n\n## Windows\n\n### Chocolatey安装\n\n安装[Chocolatey](), 请看[安装教程](https://chocolatey.org/install)\n\n```bash\nchoco install toolkit\n```\n\n## 直接安装\n\n| Platform     | Toolkit                                                                                    |\n|--------------|--------------------------------------------------------------------------------------------|\n| Linux-x86_64 | [toolkit-latest-linux-x86_64.zip](https://github.com/IoT-Technology/IoT-Toolkit/release)   |\n| Linux-arm64  | [toolkit-latest-linux-aarch_64.zip](https://github.com/IoT-Technology/IoT-Toolkit/release) |\n| Unix         | [toolkit-latest-osx-x86_64.zip](https://github.com/IoT-Technology/IoT-Toolkit/release)     |\n| Windows      | [toolkit-latest-windows-x86_64.zip](https://github.com/IoT-Technology/IoT-Toolkit/release) |\n\n\n\n# 多语言设置\n\n设置语言为德语，支持\n\n- [x] zh=中文\n\n- [x] de=德语\n\n- [x] en=英语\n\n- [x] fr=法语\n\n```bash\ntoolkit config -l=de \n```\n\n\n\n# IoT协议\n\n## CoAP\n\nhttps://user-images.githubusercontent.com/23117382/209827565-3a9aa5bb-75a8-42b4-a9d7-66cc4e2ef1dc.mp4\n\n```bash\n➜  ~ tookit coap -h\nCoAP 客户端工具包\nUsage: toolkit coap [-h] [COMMAND]\n用户友好的CoAP协议客户端工具包\n\n选项:\n  -h, --help   显示帮助信息.\nCommands:\n  describe, desc   CoAP协议的介绍和描述\n  media-types, mt  支持的媒体类型列表\n  discover, disc   列出可用的资源\n  get              从CoAP资源请求资源\n  post             创建/更新CoAP资源中的数据\n  put              更新CoAP资源中的数据\n  delete, del      删除CoAP资源\n\n```\n\n\n\n\n\n## MQTT\n\nhttps://user-images.githubusercontent.com/23117382/209825957-502fa489-6ff3-4f0f-a426-7c2cedc78739.mp4\n\n```bash\n➜  ~ toolkit mqtt -h\nMQTT 客户端工具包\nUsage: toolkit mqtt [-h] [COMMAND]\n用户友好的MQTT协议客户端工具包\n\n选项:\n  -h, --help   显示帮助信息.\nCommands:\n  describe, desc  MQTT协议的介绍和描述\n  settings, set   MQTT设置信息管理\n  publish, pub    向代理发布消息\n  subscribe, sub  从MQTT Broker(代理)订阅更新\n\nCopyright (c) 2019-2023, 物联网技术指南\nDeveloped by mushuwei\n```\n\n\n\n\n\n## NB-IoT\n\nhttps://user-images.githubusercontent.com/23117382/209823597-bafff54f-ec2c-4df6-99d1-5d0ad5719ed8.mp4\n\n```bash\n➜  ~ toolkit nb -h\nNB-IoT 客户端工具包\nUsage: toolkit nb [-h] [COMMAND]\n用户友好的 NB-IoT 客户端工具包\n\n选项:\n  -h, --help   显示帮助信息.\nCommands:\n  call            nb-iot 调用入口\n  settings, set   nb-iot 配置信息管理\n  describe, desc  nb-iot 介绍和描述\n```\n\n\n# 贡献\n\n可以通过解决现有的[Issues](https://github.com/IoT-Technology/IoT-Toolkit/issues)和[ Pull Requests](https://github.com/IoT-Technology/IoT-Toolkit/pulls)来踏入贡献`Toolkit`的第一步。如果您想请求一个特性或者报告bug，请使用提供的模版之一创建GitHub Issue。\n']
cvt,CVT, a Computer Vision Toolkit.,158,https://github.com/willard-yuan/cvt,master,['## CVT\n\n[![License](https://img.shields.io/badge/license-BSD-blue.svg)](../LICENSE)\n\n**CVT, a Computer Vision Toolkit**. CVT以个人计算机视觉实践经验为基础，旨在构建高效的计算机视觉常用工具集。\n\n## Docs\n\n项目使用文档见[docs](https://yongyuan.name/cvt/#/)。\n\n## Note\n\n若在使用过程中出现任何问题，请在赞赏留言中留下您的微信，收到消息后我会尽快修复。\n\n<div align="left">\n  <img width="20%" alt="A small reward is highly appreciated! (#^.^#) Thank you~" src="docs/imgs/weipayimg.jpg">\n</div>\n']
PaddleRS,Awesome Remote Sensing Toolkit based on PaddlePaddle.,185,https://github.com/PaddlePaddle/PaddleRS,develop,['README_CN.md']
wikipediaminer,An open source toolkit for mining Wikipedia,125,https://github.com/dnmilne/wikipediaminer,master,['wikipediaminer\n==============\n\nAn open source toolkit for mining Wikipedia\n']
design-react-kit,A React toolkit that implements the Italia design system,133,https://github.com/italia/design-react-kit,master,['![CircleCI](https://img.shields.io/circleci/build/github/italia/design-react-kit)\n[![Partecipa sul canale #design-devel](https://img.shields.io/badge/Slack%20channel-%23design--devel-blue.svg)](https://developersitalia.slack.com/messages/C7VPAUVB3/)\n[![Ricevi un invito a Slack](https://slack.developers.italia.it/badge.svg)](https://slack.developers.italia.it/)\n\n*Read this in other languages: [English](README.EN.md).*\n\n**Importante**: questo kit è stato progettato per funzionare con la versione 1.x di Bootstrap Italia. Non esiste al momento un kit per la versione 2.x di Bootstrap Italia.\n\n## Intro\n\n**Design React kit** è un set di componenti React che implementa [Bootstrap Italia](https://italia.github.io/bootstrap-italia/) e gli stili presenti su [Design UI Kit](https://github.com/italia/design-ui-kit), come [mostrato su InVision](https://invis.io/TWMUZS6VFP5).\n\nPer navigare la libreria e visualizzare i componenti, è stato utilizzato [Storybook](https://storybook.js.org/).\n\nLa versione pubblica dello Storybook è disponibile [qui](https://italia.github.io/design-react-kit) per l\'ultima release stabile pubblicata, mentre [qui](https://design-react-kit.vercel.app/) per la versione  di sviluppo relativa al branch `master`.\n\n## Indice\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON\'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n  - [Requisiti](#requisiti)\n- [Come usare il kit](#come-usare-il-kit)\n    - [Peer dependencies](#peer-dependencies)\n- [Come iniziare](#come-iniziare)\n- [Come creare nuovi componenti](#come-creare-nuovi-componenti)\n- [Publishing](#publishing)\n- [Continuous Integration](#continuous-integration)\n  - [Job `build`](#job-build)\n  - [Job `deploy-github-pages`](#job-deploy-github-pages)\n  - [Job `npm-publish`](#job-npm-publish)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n### Requisiti\n\n* NodeJS\n* Yarn\n\n## Come usare il kit\n\nPer utilizzare Design React come dipendenza in un\'app è possibile installarla da [npm](https://www.npmjs.com/~italia). Suggeriamo di usare `create-react-app` per creare una nuova webapp React, come segue:\n\n```sh\n$ create-react-app nome-app\n$ cd nome-app\n$ yarn add design-react-kit --save\n```\n\n## Aggiungere bootstrap-italia ed i font\n\nIl `design-react-kit` non include il CSS ed i file font, ed è quindi necessario installarli a parte:\n\n```sh\n$ yarn add bootstrap-italia typeface-lora typeface-roboto-mono typeface-titillium-web --save\n```\n\n## App.js\n\nA questo punto, è sufficiente importare esplicitamente nella app CSS e font se si è usato `create-react-app` all\'interno del file `./src/App.js`:\n\n```jsx\nimport React from \'react\';\nimport \'./App.css\';\nimport { Alert } from \'design-react-kit\';\nimport \'bootstrap-italia/dist/css/bootstrap-italia.min.css\';\nimport \'typeface-titillium-web\';\nimport \'typeface-roboto-mono\';\nimport \'typeface-lora\';\n\nconst App = () => {\n    return (\n        <Alert>This is an Alert</Alert>\n    );\n};\n\nexport default App;\n```\n\n#### Caricamento Font\n\nIl tema Bootstrap Italia utilizza un set specifico di font typeface: `titillium-web`, `roboto-mono` e `lora`. Il caricamento di questi font è lasciato al browser ma, volendo può essere controllato tramite l\'apposito componente `FontLoader`.\nÈ sufficiente dichiarare il componente `FontLoader` in cima all\'app react per permettere il caricamento.\n\nIn alternativa è necessario gestire il caricamento dei font manualmente mediante il pacchetto `webfontloader`:\n\n```js\nconst WebFont = require(\'webfontloader\')\nWebFont.load({\n    custom: {\n        families: [\n          \'Titillium Web:300,400,600,700:latin-ext\',\n          \'Lora:400,700:latin-ext\',\n          \'Roboto Mono:400,700:latin-ext\'\n        ]\n    }\n})\n```\n\n#### Peer dependencies\n\nLa libreria non include `react` e `react-dom`, evitando clashing di versioni e aumento inutile delle dimensioni del bundle.\nPer questo motivo per lo sviluppo in locale sarà necessario installare manualmente le dipendenze.\n\nIl comando da eseguire è\n```sh\n$ yarn install --peers\n```\noppure in alternativa manualmente\n```sh\n$ yarn install react react-dom\n```\n\n## Come iniziare\n\nClona il repository ed esegui `yarn` per installare le dipendenze.\nQuindi esegui `yarn storybook:serve` per avviare il server di sviluppo.\n\nStorybook sarà quindi disponibile all\'indirizzo http://localhost:9001/\n\n![storybook](/assets/storybook-screenshot.jpg?raw=true)\n\nStorybook è stato arricchito con alcuni `addons` che lo rendono più parlante.\n\n## Come creare nuovi componenti\n\nQuesta sezione guiderà alla creazione di nuovi componenti nel repository.\nTutti i componenti risiedono nella cartella `src`: ogni componente possiede una sua cartella con tutto ciò che è necessario per farlo funzionare.\nLe storie `Storybook` invece sono sotto `stories`. \nI test unitari risiedono nella cartella `test`.\nIl componente `Button` ad esempio è presente sotto il percorso `src/Button` e la sua struttura è la seguente:\n\n```\nsrc\n    └── Button\n        ├── Button.tsx\nstories\n    └── Button\n        ├── Button.stories.mdx\n        ├── Button.stories.tsx\ntest\n    ├── Button.test.tsx\n```\n\nAlcune regole di base per strutturare i componenti:\n\n* I file TSX file del componente utilizza la sintassi JSX.\n* I file `.stories.tsx` dovrebbero contenere solo quanto relativo al componente stesso.\n* I file `.stories.mdx` dovrebbero contenere solo documentazione relativa al componente stesso\n* I file `.test.tsx` dovrebbero contenere solo test relativi al componente stesso.\n\nUna volta creato un nuovo componente, con la sua story, avviando Storybook sarà  possibile controllare che tutto funzioni come dovrebbe.\n\n### Come contribuire\n\nPer inviare nuovi contenuti o bug fix è necessario fare un fork del repository, quindi partire dal branch `master` per un nuovo branch contenente la funzionalità: una volta completa la funzionalità (con relativi test ove possibile), sarà necessario fare una PR sul repository principale.\n\n#### Snapshot tests\n\nIl sistema di testing prevede un controllo delle storie presenti, mediante una tecnica chiamata "snapshot" testing: il contenuto della storia Storybook verrà copiato in un file speciale e preservato per notificare eventuali cambiamenti in futuro. Questo fa si che l\'aggiunta di nuove storie potrebbe risultare in un fallimento del task "test" in una PR.\nQualora fosse stata aggiunta una nuova storia o modificata una già presente, sarà necessario aggiornare il file di snapshot come segue:\n\n```\nyarn test -u\n```\n\nA questo punto creare un nuovo commit ed aggiornare la PR con il file di snapshot aggiornato. Controllare che le modifiche apportate siano corrette prima di aggiornare la PR.\n\n## Publishing\n\nE\' disponibile un comando per generare una versione statica del catalogo Storybook così che possa essere deployato senza utilizzo di un webserver.\n\n```sh\n$ yarn storybook:build\n```\n\nLe pagine statiche ottenute dal processo di build saranno generate sotto la folder  `storybook-static`.\n\n## Compilazione libreria\n\nPer compilare la libreria e generare i file nella cartella `dist`, è sufficiente lanciare il comando dedicato:\n\n```sh\n$ yarn build\n```\n\n## Supporto browsers\n\nIl kit segue le indicazioni riportate nelle Linee Guida di Design per i servizi web della Pubblica Amministrazione, sezione [6.3.1.2.1. Supporto browser](https://docs.italia.it/italia/designers-italia/design-linee-guida-docs/it/2020.1/doc/user-interface/lo-sviluppo-di-un-interfaccia-e-i-web-kit.html#strumenti) mediante l\'utilizzo del pacchetto `browserslist-config-design-italia`.\n\n## TypeScript typings \n\nLa libreria è stata portata a Typescript ed i tipi sono esportati con essa.\n\n## Ringraziamenti\n\n<a href="https://www.chromatic.com/"><img src="https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png" width="153" height="30" alt="Chromatic" /></a>\n\nGrazie a [Chromatic](https://www.chromatic.com/) per aver fornito la piattaforma di visual testing che ci aiuta a revisionare cambiamenti UI e intercettare regressioni visuali.']
hack-cs-tools,client side (C-S) penetration toolkit,118,https://github.com/theLSA/hack-cs-tools,master,['# hack-cs-tools：PC客户端渗透工具包\n\nUSE AT YOUR OWN RISK!\n\n工具/资源皆来源于网络\n\n欢迎大家补充和推荐！\n\nPC客户端（C-S架构）渗透测试checklist：[https://github.com/theLSA/CS-checklist](https://github.com/theLSA/CS-checklist) \n\n## 目录\n\n* [hack-cs-tools：PC客户端渗透工具包](#hack-cs-toolspc客户端渗透工具包)<br>\n      * [目录](#目录)<br>\n         * [环境（env/）](#环境env)<br>\n         * [审计（audit/）](#审计audit)<br>\n         * [dotnet反编译（dotnet/）](#dotnet反编译dotnet)<br>\n         * [java反编译（java/）](#java反编译java)<br>\n         * [逆向（reverse）](#逆向reverse) <br>\n         * [PE信息（peinfo/）](#pe信息peinfo)<br>\n         * [代理（proxy/）](#代理proxy)<br>\n         * [注册表（reg/）](#注册表reg)<br>\n         * [抓包（sniff/）](#抓包sniff)<br>\n         * [其他（misc/）](#其他misc)<br>\n\n\n### 环境（env/）\n\npython-2.7.16.msi\n\n\n\n### 审计（audit/）\n\nBinScope_x64.msi\n\nVCG-Setup.msi\n\n\n### dotnet反编译（dotnet/）\n\nde4dot\n\ndnspy\n\nDotNet Id_查看.net代码混淆所用的工具.exe\n\nildasm.exe\n\nilspy\n\nJetBrains.dotPeek.2019.2.2.web.exe\n\nsae14.4\n\n\n\n### java反编译（java/）\n\njad158g.win.zip\n\njadx\n\njd-gui\n\n### 逆向（reverse）\n\nollydbg\n\n\n\n### PE信息（peinfo/）\n\nCFF_Explorer.zip\n\nExeinfoPe.zip\n\nPEiD 0.95.zip\n\nPESecurity-master.zip\n\nStudyPE+ x64 109b0.rar\n\n\n\n### 代理（proxy/）\n\nproxifier\n\n\n\n### 注册表（reg/）\n\nregfromapp-x64.zip\n\nRegshot-1.9.0.7z\n\n\n\n### 抓包（sniff/）\n\nBurp_Suite_Pro_v1.7.37_Loader_Keygen.zip\n\nEchoMirage-3.1.exe\n\nWireshark-win32-1.10.14.exe\n\nWSExplorer_jb51.rar\n\n\n\n### 其他（misc/）\n\ndvta-master.zip\n\nExplorerSuite.exe\n\nprocesshacker-2.39-bin.zip\n\nreflexil.for.ILSpy.2.3.bin.zip\n\n\n\n']
THUCKE,THU Chinese Keyphrase Extraction Toolkit,119,https://github.com/thunlp/THUCKE,master,['# THUCKE： 中文关键词抽取工具包\n\n\n## 目录\n* [项目介绍](#项目介绍)\n* [编译安装](#编译安装)\n* [使用方法](#使用方法)\n* [与其它关键词抽取工具结果对比](#与其它关键词抽取工具结果对比)\n* [THUCKE工程介绍](#THUCKE工程介绍)\n* [THUCKE模型介绍](#THUCKE模型介绍)\n* [开源协议](#开源协议)\n* [相关论文](#相关论文)\n* [作者](#作者)\n\n## 项目介绍\n  THUCKE（THU Chinese Keyphrase Extraction）由清华大学自然语言处理与社会人文计算实验室研制推出的中文关键词抽取工具包。采用WAM（Word Alignment Model）模型，引入翻译的方法，将关键词和正文作为翻译对，使用IBM-Model1进行训练，获得“关键词-正文词”翻译概率表，综合该翻译概率表和TFIDF方法，进行关键词抽取。\n  训练语料采用网易新闻最近的新闻近40000条，并且我们将不断更新语料库，训练新的模型，在模型下载界面可以选择不同版本模型。\n\n## 编译安装：\n  在当前目录执行make，编译完成会在当前目录生成可执行文件thucke\n\n\n## 使用方法\n### 1.下载模型文件（[下载地址](http://thucke.thunlp.org)）：\n  将模型下载并解压到./res/，解压后目录结构应为：\n\n    - res\n      - thucke_models\n      - thulac_models\n\n### 2.参数介绍：\n|参数|解析| \n|:----------|:----------:|\n| -i | 需要提取关键词的文本文件路径 |\n| -n | 需要提取关键词的最大个数 |\n| -m | 模型文件路径 |\n\n### 3.运行示例：\n\n#### 3.1 准备抽取文本\n  使用演示文本test1.txt或test2.txt，或者使用自己的文本替换该文件内容\n#### 3.2.运行工具\n  执行./thucke -i ./test1.txt -n 5 -m ./res\n#### 3.3 输出结果为json格式\n\n\n    {\n      "result": [\n        {\n          "keyword": "财政",\n          "score": 1000\n        },\n        {\n          "keyword": "企业",\n          "score": 875\n        },\n        {\n          "keyword": "政策",\n          "score": 625\n        },\n        {\n          "keyword": "减税",\n          "score": 541\n        },\n        {\n          "keyword": "支出",\n          "score": 374\n        }\n      ],\n      "timeuse": 0.10199,\n      "info": "success",\n      "status": 0\n    }\n\n#### 3.4 结果内容介绍：\n| key | value |\n|:------------|:-------------:| \n| result | 返回结果:keyword(关键词)，score(对应评分，结果按评分排序，最高分1000)) |\n| timeuse | 运行时间/s，仅为关键词抽取时间，不包括模型加载时间 |\n| status | 返回状态码 |\n| info | 状态码注释 |\n\n\n## 与其它关键词抽取工具结果对比\n我们与其它常见的关键词抽取工具（[jieba](https://github.com/fxsjy/jieba)）进行对比，采用了两篇新闻作为抽取文本，抽取的结果对比如下：\n\n1.测试文本[test1.txt](https://github.com/thunlp/THUCKE/blob/master/test1.txt)\n\n|THUCKE|评分（最高1000）|jieba-TFIDF|评分（最高1）|jieba-TextRank|评分（最高1）\n|:------------|:-------------|:-------------|:------------|:-------------|:-------------|\n|耳机|1000|耳机|0.2455|耳机|1.0|\n|辐射|521|蓝牙|0.2163|蓝牙|0.7364|\n|人体|391|苹果|0.1688|苹果|0.7210|\n|表示|376|AirPods|0.1488|表示|0.5163|\n|使用|318|iPhone7|0.1339|使用|0.4901|\n|iPhone7|318|辐射|0.1067|没有|0.4808|\n|手机|304|Plus|0.1042|辐射|0.4750|\n|AirPods|289|无线耳机|0.1042|传送|0.3215|\n|电波|217|健康|0.0743|人体|0.3186|\n|研究|202|传送|0.0722|问题|0.2980|\n\n2.测试文本[test2.txt](https://github.com/thunlp/THUCKE/blob/master/test2.txt)\n\n|THUCKE|评分（最高1000）|jieba-TFIDF|评分（最高1）|jieba-TextRank|评分（最高1）\n|:------------|:-------------|:-------------|:------------|:-------------|:-------------|\n|财政|1000|减税|0.2445|经济|1.0|\n|企业|875|财政政策|0.1313|减税|0.8912|\n|政策|625|企业|0.1033|企业|0.8254|\n|减税|541|税收收入|0.0968|增长|0.6250|\n|支出|374|经济|0.0875|增加|0.5322|\n|增长|291|数据|0.0780|扩大|0.4892|\n|税收|250|降费|0.0731|税收|0.4434|\n|政府|250|负担|0.07198|数据|0.4217|\n|增加|250|税收|0.0698|财政|0.4134|\n|扩大|208|税率|0.0693|财政政策|0.4092|\n\n\n## THUCKE工程介绍\n\n```\n  - Makefile //makefile配置文件\n  - README.md //文档\n  - head //头文件\n    - thulac //thulac分词和词性标注相关头文件\n    - thucke //thucke关键词抽取相关头文件\n        - articleSpliter.h //输入文本分割相关\n        - keyword.h //关键词相关\n        - trie.h //trie树相关\n  - res //资源文件，主要是模型文件放置目录\n  - src //源代码存放目录\n      - thucke.cpp //主程序入口，如需进行任何形式的改造，从此文件开始\n      - keywordLoad.cpp //模型加载\n      - articleSpliter.cpp //输入文本切分预处理\n      - thulac_segment.cpp //分词和词性标注\n      - keywordExtract.cpp //关键词抽取核心算法实现 \n      - trie.cpp //trie搜索树实现\n  - test1.txt //测试文本1\n  - test2.txt //测试文本2\n```\n\n## THUCKE模型介绍\n1. THUCKE采用WAM方法，将新闻标题和新闻内容作为翻译对，生成“标题词语”-“内容词语”翻译概率矩阵，综合该词语翻译概率矩阵和tfidf，对给定文本进行关键词抽取，算法详细情况请查看“相关论文”部分；\n2. 训练语料采用从网易新闻爬取的最近一段时间的新闻数据大概40000条，因此该关键词抽取模型对于新闻类文本效果较好；\n3. 下载的模型除了thucke关键词抽取模型之外，还包含thulac分词词性标注模型，thulac同为thunlp推出的中文词法分析工具包，具有分词和词性标注功能；\n4. THUCKE将一直不断更新训练数据，生成最新的模型，同时保留旧模型，可以根据需要进行下载。\n\n\n## 开源协议\n1. THUCKE面向国内外大学、研究所、企业以及个人用于研究目的免费开放源代码。\n2. 如有机构或个人拟将THUCKE用于商业目的，请发邮件至thunlp@gmail.com洽谈技术许可协议。\n3. 欢迎对该工具提出任何宝贵意见和建议，请发邮件至thunlp@gmail.com提出意见和建议。\n4. 如果您在THUCKE基础上发表论文或取得科研成果，请您在发表论文和申报成果时声明“使用了清华大学THUCKE”，并按如下格式引用：\n\n\t* Zhiyuan Liu, Xinxiong Chen, Maosong Sun. A Simple Word Trigger Method for Social Tag Suggestion. The Conference on Empirical Methods in Natural Language Processing (EMNLP 2011).\n\n\n## 相关论文\n* Zhiyuan Liu, Xinxiong Chen, Maosong Sun. A Simple Word Trigger Method for Social Tag Suggestion. The Conference on Empirical Methods in Natural Language Processing (EMNLP 2011).\\[[pdf](http://nlp.csai.tsinghua.edu.cn/~lzy/publications/emnlp2011.pdf)\\]\n* Zhiyuan Liu, Xinxiong Chen, Yabin Zheng, Maosong Sun. Automatic Keyphrase Extraction by Bridging Vocabulary Gap. The 15th Conference on Computational Natural Language Learning (CoNLL 2011).\\[[pdf](http://nlp.csai.tsinghua.edu.cn/~lzy/publications/conll2011.pdf)\\]\n\n\n## 作者\n* Zhipeng Guo（郭志芃，本科生）, Yunshan Ma（马云山，本科生）, Zhiyuan Liu（刘知远，助理教授）, Maosong Sun（孙茂松，教授）\n']
web-toolkit,A web UI framework based on GTK's Adwaita theme,158,https://github.com/romgrk/web-toolkit,master,['./packages/web-toolkit/README.md']
public,util toolkit for go.golang 通用函数包,152,https://github.com/xxjwxc/public,master,['# public\ngolang 工具包。\n\n- 里面包含很多公共函数\n\n包括：\n\n`文件功能`,`leveldb`,`restful风格消息包头定义`,`cache缓存`,`绘图函数`,`elastic`,`echarts`,`http`,`日志`,`nsq抽取`,`线程安全队列`,`签名`,`gorm封装`,`时间函数`,`国际化i18n`,`gocui 界面类`,`驼峰命名转换工具`,`大驼峰到网络标准json串自动转换`,`剪切板`,`微信`,`ast`,`swagger 文档支持`,`mindoc/markdown 文档支持`,`分布式全局唯一id(myglobal)`,`ssh(支持tab自动补全)`,`zap logger`,`快递鸟`,`redis`\n......\n']
TCP-UDP-Flood,TCP/UDP Flood tool,106,https://github.com/Leeon123/TCP-UDP-Flood,master,['# TCP-UDP-Flood\nPython3 TCP/UDP Flood script\n\nUsage:\n\n    python3 flood.py\n']
Fl,A Js/Html/Css Toolkit That Support Template,106,https://github.com/welefen/Fl,master,['## 说明\n\nFl是一个支持模版语法（如：Smarty）的Js/Html/Css处理工具，处理功能包括：词法分析、美化、代码规范检测、压缩等功能\n\n目前所有功能已经在多个大公司进行了大规模使用，趋于稳定。\n\n### 功能列表\n\n### CSS\n* CSS词法分析，CSS Selector词法分析（支持模版语法）\n* CSS压缩（支持模版语法，比当前出现其他的CSS压缩引擎压缩率都要高）\n* CSS美化\n* CSS安全过滤\n* CSS自动完成（css3和filter等）\n* CSS DATA URI（将包含的图片转为DATA URI）\n\n### HTML\n* HTML词法分析，HTML标签词法分析\n* HTML美化\n* HTML压缩\n* HTML安全过滤\n* XSS自动修复\n\n### JS\n* JS词法分析（支持模版语法）\n* JS语法分析\n\n\n']
Bootstrap-Skin,Bootstrap Skin for MediaWiki. Bootstrap is an excellent toolkit by Twitter. This is a MediaWiki skin based off of that template.,100,https://github.com/aaronpk/Bootstrap-Skin,master,['A work in progress.\n\n![MediaWiki Bootstrap Skin](http://aaronpk.github.com/mediawiki-bootstrap-screenshot.png "MediaWiki Bootstrap Skin")\n\n![MediaWiki Bootstrap Skin Grid System](http://aaronpk.github.com/mediawiki-bootstrap-grid-system.png "MediaWiki Bootstrap Skin Grid System")']
InsideWorld,二次元老司机专用的本地媒体文件管理器，支持音视频、本子、图集、小说、哔哩哔哩视频、游戏甚至mod等各类资源,193,https://github.com/anobaka/InsideWorld,main,['Inside World 是一款离线媒体管理库，用于本地媒体快速搜寻、预览与播放。\n\n目前支持动画、漫画、音声、本子、电影、图集等媒体的管理，老司机食用效果更加哦~\n\n本人自用软件，目前提供公开测试版本供大家使用，喜欢本软件的话请右上角star，并大力推荐给自己的朋友，感谢大家的支持。\n\n更多内容请访问<a href="https://inside-world.anobaka.com/" target="_blank">项目首页</a>\n']
ewa,Enhanced Wechat App Development Toolkit (微信小程序增强开发工具)。不同于 wepy 或者 mpvue，是一个轻量级小程序开发框架。支持原生小程序所有功能，无需学习，极易上手。支持转换为百度/字节跳动/QQ/支付宝小程序。,178,https://github.com/lyfeyaj/ewa,master,['EWA (微信小程序增强开发工具)\n=========================\n\nEnhanced Wechat App Development Toolkit (微信小程序增强开发工具)\n\n## 为什么开发这个工具？\n\n厌倦了不停的对比 [taro](https://github.com/NervJS/taro)、[wepy](https://github.com/Tencent/wepy) 或者 [mpvue](https://github.com/Meituan-Dianping/mpvue) 的特性，间歇性的踩雷，构建和运行速度慢以及 `code once, run everywhere` 的幻想。只想给小程序开发插上效率的翅膀 ~\n\n## 功能特性\n\n1. Async/Await 支持\n2. Javascript ES2020 语法\n3. 原生小程序所有功能，无需学习，极易上手\n4. 微信接口 Promise 化\n5. 支持安装 NPM 包\n6. 支持 SCSS(或 LESS) 以及 小于 16k 的 background-image\n7. 支持 source map, 方便调试\n8. 添加新页面或新组件无需重启编译\n9. 允许自定义编译流程\n10. 自动兼容旧版本手机中的显示样式\n11. 支持 WXSS 和 SCSS(或 LESS) 混用\n12. 代码混淆及高度压缩，节省包大小\n13. Typescript 支持\n14. 支持转换成 百度 / 字节跳动 / QQ / 支付宝小程序\n15. 多种小程序开发插件，为小程序开发减负，解放生产力\n\n[更多特性正在赶来 ... 敬请期待](./TODOS.md)\n\n## 安装\n\n***需要 node 版本 >= 10.13***\n\n```bash\nnpm i -g ewa-cli 或者 yarn global add ewa-cli\n```\n\n## 如何使用\n\n### 创建新项目\n\n```bash\newa new your_project_name\n```\n\n### 集成到现有小程序项目，仅支持小程序原生开发项目转换\n\n***注意：使用此方法，请务必对项目代码做好备份！！！***\n\n```bash\ncd your_project_dir && ewa init\n```\n\n### 启动\n\n运行 `npm start` 即可启动实时编译\n\n运行 `npm run build` 即可编译线上版本（相比实时编译而言，去除了 source map 并增加了代码压缩混淆等，体积更小）\n\n上述命令运行成功后，可以看到本地多了个 `dist` 目录，这个目录里就是生成的小程序相关代码。\n\n使用[微信开发者工具](https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/devtools.html)选择 `dist` 目录打开，即可预览项目\n\n### 目录结构\n\n```\n├── .ewa                         特殊占位目录，用于检查是否为 ewa 项目\n├── dist                         小程序运行代码目录（该目录由ewa的start 或者 build指令自动编译生成，请不要直接修改该目录下的文件）\n├── node_modules                 外部依赖库\n├── src                          代码编写的目录（该目录为使用ewa后的开发目录）\n│\xa0\xa0 ├── components               小程序组件目录\n│\xa0\xa0 ├── pages                    小程序页面目录\n│\xa0\xa0 │\xa0\xa0 ├── index\n│\xa0\xa0 │\xa0\xa0 │\xa0\xa0 ├── index.js\n│\xa0\xa0 │\xa0\xa0 │\xa0\xa0 ├── index.wxml\n│\xa0\xa0 │\xa0\xa0 │\xa0\xa0 └── index.wxss\n│\xa0\xa0 │\xa0\xa0 └── logs\n│\xa0\xa0 │\xa0\xa0     ├── logs.js\n│\xa0\xa0 │\xa0\xa0     ├── logs.json\n│\xa0\xa0 │\xa0\xa0     ├── logs.wxml\n│\xa0\xa0 │\xa0\xa0     └── logs.wxss\n│\xa0\xa0 ├── templates                小程序模版目录\n│\xa0\xa0 ├── utils\n│\xa0\xa0 │\xa0\xa0 └── util.js\n│\xa0\xa0 ├── app.js                   小程序入口文件\n│\xa0\xa0 ├── app.json                 小程序全局配置文件\n│\xa0\xa0 ├── app.wxss                 小程序全局样式文件\n│\xa0\xa0 └── project.config.json      微信开发者工具小程序项目配置文件\n├── ewa.config.js                ewa 配置文件\n├── .gitignore\n├── .eslintrc.js                 eslint 配置\n└── package.json\n```\n\n### 命令行说明\n\n#### 概览\n\n```\newa <cmd> [args]\n\n命令：\n  ewa new <projectName>       创建新的微信小程序项目           [别名: create]\n  ewa init                    在现有的小程序项目中初始化 EWA\n  ewa start                   启动 EWA 小程序项目实时编译         [别名: dev]\n  ewa build                   编译小程序静态文件\n  ewa clean                   清理小程序静态文件\n  ewa upgrade                 升级 EWA 工具\n  ewa generate <type> <name>  快速生成模版                          [别名: g]\n\n选项：\n  -v, --version  当前版本号                                               [布尔]\n  -h, --help     获取使用帮助                                             [布尔]\n```\n\n#### 实时编译\n\n```\newa start\n\n启动 EWA 小程序项目实时编译\n\n选项：\n  -v, --version  当前版本号                                               [布尔]\n  -h, --help     获取使用帮助                                             [布尔]\n  -t, --type     构建目标 `weapp` 或 `swan` 或 `alipay` 或 `tt` 或 `qq`\n            [字符串] [可选值: "weapp", "swan", "alipay", "tt", "qq"] [默认值: "weapp"]\n```\n\n#### 构建\n\n```\newa build\n\n编译小程序静态文件\n\n选项：\n  -v, --version  当前版本号                                               [布尔]\n  -h, --help     获取使用帮助                                             [布尔]\n  -t, --type     构建目标 `weapp` 或 `swan` 或 `alipay` 或 `tt` 或 `qq`\n            [字符串] [可选值: "weapp", "swan", "alipay", "tt", "qq"] [默认值: "weapp"]\n```\n\n#### 快速生成样板文件\n\n```\newa generate <type> <name>\n\n快速生成模版\n\n位置：\n  type  类型 `page` 或 `component` 或 `template`\n                       [字符串] [必需] [可选值: "page", "component", "template"]\n  name  名称                                                     [字符串] [必需]\n\n选项：\n  -v, --version     当前版本号                                            [布尔]\n  -h, --help        获取使用帮助                                          [布尔]\n  -d, --target-dir  目标文件夹，默认为 src，也可以指定为 src 中的某个子目录\n                                                                        [字符串]\n  -i, --index       生成的文件名称为 [name]/index，默认为 [name]/[name]   [布尔]\n```\n\n#### 清理 dist 目录\n\n```\newa clean\n\n清理小程序静态文件\n\n选项：\n  -v, --version  当前版本号                                               [布尔]\n  -h, --help     获取使用帮助                                             [布尔]\n  -t, --type     构建目标 `weapp` 或 `swan` 或 `alipay` 或 `tt` 或 `qq`\n      [字符串] [可选值: "weapp", "swan", "alipay", "tt", "qq"] [默认值: "weapp"]\n```\n\n## 多端支持和环境变量\n\n### 多端支持\n\n目前 EWA 支持 **微信** / **百度** / **字节跳动** / **QQ** / **支付宝** 5个平台的小程序。\n\n只需要基于`微信小程序`开发，可以通过命令行工具自动构建为不同平台的小程序，具体参见上方的命令行说明。\n\n多端构建的 dist 目录分别为:\n\n```\n微信: dist\n百度: dist-swan\n字节跳动: dist-tt\nQQ: dist-qq\n支付宝: dist-alipay\n```\n\n### 环境变量\n\nEWA 会提供 `process.env.EWA_ENV` 和 `process.env.NODE_ENV` 来辅助开发同学判断多端和不同的开发环境\n\n可以在 .js 或 .ts 文件中直接使用，可选值见下方说明：\n\n```\nprocess.env.EWA_ENV: 多端支持的环境变量\n可选值为 "weapp"、"swan"、"alipay"、"tt"、"qq", 默认是 "weapp"\n\nprocess.env.NODE_ENV: 开发环境变量\n可选值为 "development" 和 "production", 分别对应 ewa start 和 ewa build 命令\n```\n\n## 功能插件\n\n### 微信接口 Promise 化\n\n```javascript\n// 引入\nconst { api } = require(\'ewa\');\n\n// 例：\nPage({\n  async onLoad() {\n    let { data } = await api.request({ url: \'http://your_api_endpoint\' });\n  }\n})\n```\n\n### 插件: `enableState`\n\n#### 用途\n\n在 `Page` 和 `Component` 中引入 `this.setState(data, callback)` 方法, 并根据 data 数据自动 diff 出变更, 减少单次 data 提交的数据量，避免超过小程序 1mb 的限制\n\n#### 常见问题\n\n1. 由于小程序本身的 bug, 当增量更新数组元素的时候, wxml 中无法正确获取到数组元素的 length\n\n#### 使用示例\n\n```javascript\n// 在 app.js 中引入插件，并初始化\nconst { enableState } = require(\'ewa\');\n\n// 参数支持：\n//   opts: 参数对象\n//     debug: 是否开启 debug 模式，支持3种参数： true, \'page\', \'component\', 默认为 false\n//     component: 是否开启 component 支持, 默认为 true\n//     page: 是否开启 page 支持, 默认为 true\n//     overwriteArrayOnDeleted: 是否在数组发生删除操作是覆盖整个数组 true 或者 false, 默认为 true\n//     autoSync: 是否在 调用 setData 时自动同步 state, 默认为 true; 如果关闭此操作，在同一个页面或组件中混用 setState 或 setData 的时候，可能会导致BUG, 也可以手动调用 this.syncState() 来手动同步\nenableState({\n  debug: true,\n  component: true,\n  page: true,\n  overwriteArrayOnDeleted: true,\n  autoSync: true\n});\n\n// 上述插件会引入 this.setState 方法，在 Page 和 Component 中均可调用\n// setState 方法会自动 diff 并仅提交数据变更\n// 例：\nPage({\n  data: { a: 1, b: 1, c: { d: 1, e: 1 } }\n  async onLoad() {\n    // 自动 diff 变化\n    // 相当于 this.setData({ b: 2, \'c.d\': 2 });\n    this.setState({ a: 1, b: 2, c: { d: 2, e: 1 } });\n\n    // this.setState 支持使用 promise 来代替回调函数，如\n    this.setState({ info: { name: \'My Page Title\' } }).then(() => {\n      // 数据已更新到视图, 这里写完成视图更新后的逻辑\n    });\n\n    // 同理，这里可以使用 await 来简化\n    await this.setState({ info: { name: \'My Page Title\' } });\n    // 数据已更新到视图, 这里写完成视图更新后的逻辑\n  }\n})\n```\n\n### 插件: `createStore`\n\n#### 用途\n\n支持设置全局响应式对象, 能够监听对象属性并自动更新到 data 中\n\n#### 使用示例\n\n```javascript\n// 1. 创建 store: 对任意纯对象调用 createStore 使其响应式化（以 app.js 中 globalData 为例）\n//    app.js 中引入\nconst { createStore } = require(\'ewa\');\n\nApp({\n  ...\n  globalData: createStore (\n    // 全局响应式对象\n    {\n      a: \'old1\',\n      b: {\n        c: \'old2\'\n      }\n    },\n\n    // 可以自定义注入到 Page 或 Component 中的方法和属性，也可以不设置\n    // 如果设置了自定义的方法和变量\n    // 那么实际在 Page 或 Component 中引用的时候需要相应的替换成 自定义的名称，示例如下：\n    {\n      $set: \'yourCustomSet\',\n      $on: \'yourCustomOn\',\n      $emit: \'yourCustomEmit\',\n      $off: \'yourCustomOff\',\n      $once: \'yourCustomOnce\',\n      $watch: \'yourCustomWatch\'\n    }\n  )\n})\n\n// 2. 改变 globalData 以及全局状态更新（支持嵌套属性和数组下标修改）\n\n// pageA.js\nPage({\n  data: {\n    a: \'\',\n    b: {\n      c: \'\'\n    }\n  }\n})\n\nonLoad() {\n  App().globalData.a = \'new1\'\n  console.log(this.data.a === \'new1\')  // true\n\n  App().globalData.b.c = \'new2\'\n  console.log(this.data.b.c === \'new2\') // true\n}\n\n\n// 3. 注入全局方法 使用示例:\nthis.$on(\'test\', (val) => { console.log(val) })\n\n// 发射数据变化\nthis.$emit(\'test\', \'value\');\n\n// 使用方法同 this.$on 只会触发一次\nthis.$once(\'test\', (val) => {});\n\n// 解绑当前实例通过 this.$on(...) 注册的事件\nthis.$off(\'test\');\n\n// 以上方法适用于\n// 1. 页面与页面\n// 2. 页面与组件\n// 3. 组件与组件\n\n// 注: 所有页面或组件销毁时会自动解绑所有的事件(无需手动调用 `this.$off(...)`)\n// `this.$set(\'coinName\', \'金币\')` 更新所有页面和组件 data 中 \'coinName\' 的值为 \'金币\'（支持嵌套属性和数组下标修改）\n\n// $watch 监听页面或组件 data 中属性 支持监听属性路径形式如 \'a[1].b\'\n\n// 使用示例：\nPage({\n  data: {\n     prop: \'\',\n     obj: {\n       key: \'\'\n     }\n   },\n   $watch: {\n     // 方式一\n     \'prop\': function(newVal, oldVal) {\n     },\n     // 方式二\n     \'obj\': {\n       handler: function(newVal, oldVal) {\n       },\n       deep: Boolean, // 深度遍历\n       immediate: Boolean // 立即触发\n     }\n   }\n});\n```\n\n## 配置\n\newa 通过 `ewa.config.js` 来支持个性化配置。如下所示：\n\n``` javascript\n// ewa.config.js\n\nmodule.exports = {\n  // 公用代码库 (node_modules 打包生成的文件)名称，默认为 vendors.js\n  commonModuleName: \'vendors.js\',\n\n  // 通用模块匹配模式，默认为 /[\\\\/](node_modules|utils|vendor)[\\\\/].+\\.js/\n  // 如需添加多个文件夹，可自定义正则，如 /[\\\\/](node_modules|utils|custom_dirname)[\\\\/].+\\.js/\n  commonModulePattern: /[\\\\/](node_modules|utils|vendor)[\\\\/].+\\.js/,\n\n  // 是否简化路径，作用于 page 和 component，如 index/index.wxml=> index.wxml，默认为 false\n  simplifyPath: false,\n\n  // 文件夹快捷引用\n  aliasDirs: [\n    \'apis\',\n    \'assets\',\n    \'constants\',\n    \'utils\'\n  ],\n\n  // 需要拷贝的文件类型\n  copyFileTypes: [\n    \'png\',\n    \'jpeg\',\n    \'jpg\',\n    \'gif\',\n    \'svg\',\n    \'ico\'\n  ],\n\n  // webpack loader 规则\n  rules: [],\n\n  // webpack 插件\n  plugins: [],\n\n  // 开发环境下是否自动清理无用文件，默认为 true\n  autoCleanUnusedFiles: true,\n\n  // css 解析器，sass 或者 less，默认为 sass\n  cssParser: \'sass\',\n\n  // 是否开启 hashed module id\n  hashedModuleIds: true,\n\n  // 是否开启缓存，默认为 true\n  cache: true,\n\n  // 自定义环境变量, 默认为 [\'NODE_ENV\', \'EWA_ENV\']\n  customEnvironments: [],\n\n  // 嫌不够灵活？直接修改 webpack 配置\n  webpack: function(config) {\n    return config;\n  }\n};\n```\n\n\n## 更新日志\n\n本项目遵从 [Angular Style Commit Message Conventions](https://gist.github.com/stephenparish/9941e89d80e2bc58a153)，更新日志请查阅 [Release](https://github.com/lyfeyaj/ewa/releases)。\n\n## 常见问题 & Tips\n\n1. 可以使用 `@` 来代替 **源代码根目录** 来引入代码或样式，如 `const utils = require(\'@/utils/util\')`\n2. WXSS 中可以直接编写 SCSS 样式代码\n3. WXSS 或 SCSS 中引用绝对路径需要在路径前加 `~` 符号，如：`@import "~@/assets/styles/common.scss";`，具体原因参见: [sass-loader](https://github.com/webpack-contrib/sass-loader#imports)\n4. `ewa build` 后如果无法正常运行小程序，可检查下是否关闭了微信开发者工具中的 `ES6 转 ES5` 和 `增强编译` 选项。原因是：ewa 打包时会将 ES6 转换为 ES5 并混淆压缩，此功能和微信开发者工具自带的 `ES6 转 ES5` 和 `增强编译` 功能有部分重复，多次转换会导致代码无法运行，所以只要关闭即可。\n5. 其他问题欢迎直接在 Github 上提交 issue，也可以添加下方微信反馈(请注明来意 ^_^)\n\n![lyfeyaj](https://raw.githubusercontent.com/lyfeyaj/ewa/master/docs/_media/wechat-qrcode.jpg)\n']
