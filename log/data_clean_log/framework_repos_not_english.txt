framework,ThinkPHP Framework,2558,https://github.com/top-think/framework,6.1,['![](https://box.kancloud.cn/5a0aaa69a5ff42657b5c4715f3d49221) \n\nThinkPHP 6.1\n===============\n\n[![Build Status](https://travis-ci.org/top-think/framework.svg?branch=6.0)](https://travis-ci.org/top-think/framework)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/top-think/framework/badges/quality-score.png?b=6.0)](https://scrutinizer-ci.com/g/top-think/framework/?branch=6.0)\n[![Code Coverage](https://scrutinizer-ci.com/g/top-think/framework/badges/coverage.png?b=6.0)](https://scrutinizer-ci.com/g/top-think/framework/?branch=6.0)\n[![Total Downloads](https://poser.pugx.org/topthink/framework/downloads)](https://packagist.org/packages/topthink/framework)\n[![Latest Stable Version](https://poser.pugx.org/topthink/framework/v/stable)](https://packagist.org/packages/topthink/framework)\n[![PHP Version](https://img.shields.io/badge/php-%3E%3D7.1-8892BF.svg)](http://www.php.net/)\n[![License](https://poser.pugx.org/topthink/framework/license)](https://packagist.org/packages/topthink/framework)\n\n\n[官方服务](https://www.topthink.com) | [`ThinkAPI`——官方统一API](https://doc.topthink.com/think-api)\n\n## 主要新特性\n\n* 采用`PHP7`强类型（严格模式）\n* 支持更多的`PSR`规范\n* 原生多应用支持\n* 系统服务注入支持\n* ORM作为独立组件使用\n* 全新的事件系统\n* 模板引擎分离出核心\n* 内部功能中间件化\n* SESSION机制改进\n* 日志多通道支持\n* 规范扩展接口\n* 更强大的控制台\n* 对Swoole以及协程支持改进\n* 对IDE更加友好\n* 统一和精简大量用法\n\n\n> ThinkPHP6.1的运行环境要求PHP7.2.5+，最高兼容PHP8.2\n\n## 安装\n\n~~~\ncomposer create-project topthink/think tp\n~~~\n\n启动服务\n\n~~~\ncd tp\nphp think run\n~~~\n\n然后就可以在浏览器中访问\n\n~~~\nhttp://localhost:8000\n~~~\n\n如果需要更新框架使用\n~~~\ncomposer update topthink/framework\n~~~\n\n## 文档\n\n[完全开发手册](https://www.kancloud.cn/manual/thinkphp6_0/content)\n\n## 命名规范\n\n`ThinkPHP6`遵循PSR-2命名规范和PSR-4自动加载规范。\n\n## 参与开发\n\n直接提交PR或者Issue即可\n\n## 版权信息\n\nThinkPHP遵循Apache2开源协议发布，并提供免费使用。\n\n本项目包含的第三方源码和二进制文件之版权信息另行标注。\n\n版权所有Copyright © 2006-2021 by ThinkPHP (http://thinkphp.cn) All rights reserved。\n\nThinkPHP® 商标和著作权所有者为上海顶想信息科技有限公司。\n\n更多细节参阅 [LICENSE.txt](LICENSE.txt)\n']
hsweb-framework,hsweb (haʊs wɛb) 是一个基于spring-boot 2.x开发 ,首个使用全响应式编程的企业级后台管理系统基础项目。,8006,https://github.com/hs-web/hsweb-framework,master,['# hsweb4 基于spring-boot2,全响应式的后台管理框架\n\n[![Codecov](https://codecov.io/gh/hs-web/hsweb-framework/branch/4.0.x/graph/badge.svg)](https://codecov.io/gh/hs-web/hsweb-framework/branch/master)\n[![Build Status](https://api.travis-ci.com/hs-web/hsweb-framework.svg?branch=4.0.x)](https://travis-ci.com/hs-web/hsweb-framework)\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?style=flat-square)](https://www.apache.org/licenses/LICENSE-2.0.html)\n\n# 功能,特性\n\n- [x] 基于[r2dbc](https://github.com/r2dbc) ,[easy-orm](https://github.com/hs-web/hsweb-easy-orm/tree/4.0.x) 的通用响应式CRUD\n    - [x] H2,Mysql,SqlServer,PostgreSQL\n- [x] 响应式r2dbc事务控制\n- [x] 响应式权限控制,以及权限信息获取\n    - [x] RBAC权限控制\n    - [x] 数据权限控制\n    - [ ] 双因子验证\n- [x] 多维度权限管理功能\n- [x] 响应式缓存\n- [ ] 非响应式支持(mvc,jdbc)\n- [ ] 内置业务功能\n    - [x] 权限管理\n        - [x] 用户管理\n        - [x] 权限设置\n        - [x] 权限分配\n    - [ ] 文件上传\n        - [x] 静态文件上传\n        - [ ] 文件秒传\n    - [x] 数据字典\n\n# 示例\n\nhttps://github.com/zhou-hao/hsweb4-examples\n\n## 应用场景\n\n1. 完全开源的后台管理系统.\n2. 模块化的后台管理系统.\n3. 功能可拓展的后台管理系统.\n4. 集成各种常用功能的后台管理系统.\n5. 前后分离的后台管理系统.\n\n注意:\n项目主要基于`spring-boot`,`spring-webflux`. 在使用`hsweb`之前,你应该对 [project-reactor](https://projectreactor.io/) ,\n[spring-boot](https://github.com/spring-projects/spring-boot) 有一定的了解.\n\n项目模块太多?不要被吓到.我们不推荐将本项目直接`clone`后修改,运行.而是使用maven依赖的方式使用`hsweb`. 选择自己需要的模块进行依赖,正式版发布后,所有模块都将发布到maven中央仓库.\n\n## 文档\n\n各个模块的使用方式查看对应模块下的 `README.md`,在使用之前, 你可以先粗略浏览一下各个模块,对每个模块的作用有大致的了解.\n\n## 核心技术选型\n\n1. Java 8\n2. Maven3\n3. Spring Boot 2.x\n4. Project Reactor 响应式编程框架\n5. hsweb easy orm 对r2dbc的orm封装\n\n## 模块简介\n\n| 模块       |     说明     |  \n| ------------- |:----------:| \n|[hsweb-authorization](hsweb-authorization)|    权限控制    |\n|[hsweb-commons](hsweb-commons) |   基础通用功能   | \n|[hsweb-concurrent](hsweb-concurrent)|  并发包,缓存,等  | \n|[hsweb-core](hsweb-core)| 框架核心,基础工具类 | \n|[hsweb-datasource](hsweb-datasource)|    数据源     | \n|[hsweb-logging](hsweb-logging)|     日志     |  \n|[hsweb-starter](hsweb-starter)|   模块启动器    | \n|[hsweb-system](hsweb-system)| **系统常用功能** |\n\n## 核心特性\n\n1. 响应式,首个基于spring-webflux,r2dbc,从头到位的响应式.\n2. DSL风格,可拓展的通用curd,支持前端直接传参数,无需担心任何sql注入.\n\n```java\n  //where name = #{name}\n  createQuery()\n          .where("name",name)\n          .fetch();\n\n          //update s_user set name = #{user.name} where id = #{user.id}\n          createUpdate()\n          .set(user::getName)\n          .where(user::getId)\n          .execute();\n\n```\n\n3. 类JPA增删改\n\n```java\n\n@Table(name = "s_entity")\npublic class MyEntity {\n    \n    @Id\n    private String id;\n    \n    @Column\n    private String name;\n\n    @Column\n    private Long createTime;\n}\n\n```\n\n直接注入即可实现增删改查\n\n```java\n\n@Autowire\nprivate ReactiveRepository<MyEntity, String> repository;\n\n```\n\n2. 灵活的权限控制\n\n```java\n\n@PostMapping("/account")\n@SaveAction\npublic Mono<String> addAccount(@RequestBody Mono<Account> account){\n     return accountService.doSave(account);\n}\n\n```\n\n## License\n\n[Apache 2.0](https://github.com/spring-projects/spring-boot/blob/main/LICENSE.txt)']
guide-rpc-framework,A custom RPC framework implemented by Netty+Kyro+Zookeeper.（一款基于 Netty+Kyro+Zookeeper 实现的自定义 RPC 框架-附详细实现过程和相关教程。）,2964,https://github.com/Snailclimb/guide-rpc-framework,master,['# guide-rpc-framework\n\n> [该 RPC 框架配套教程已经更新在我的星球，点击此链接了解详情。](https://javaguide.cn/zhuanlan/handwritten-rpc-framework.html)\n\n<div align="center">\n  <p> 中文| <a href="./README-EN.md">English</a>\n  </p>\n  <p>\n    <a href="https://github.com/Snailclimb/guide-rpc-framework">Github</a> | <a href="https://gitee.com/SnailClimb/guide-rpc-framework ">Gitee</a>\n  </p>\n</div>\n\n## 前言\n\n虽说 RPC 的原理实际不难，但是，自己在实现的过程中自己也遇到了很多问题。[guide-rpc-framework](https://github.com/Snailclimb/guide-rpc-framework) 目前只实现了 RPC 框架最基本的功能，一些可优化点都在下面提到了，有兴趣的小伙伴可以自行完善。\n\n通过这个简易的轮子，你可以学到 RPC 的底层原理和原理以及各种 Java 编码实践的运用。\n\n你甚至可以把 [guide-rpc-framework](https://github.com/Snailclimb/guide-rpc-framework) 当做你的毕设/项目经验的选择，这是非常不错！对比其他求职者的项目经验都是各种系统，造轮子肯定是更加能赢得面试官的青睐。\n\n如果你要将 [guide-rpc-framework](https://github.com/Snailclimb/guide-rpc-framework) 当做你的毕设/项目经验的话，我希望你一定要搞懂，而不是直接复制粘贴我的思想。你可以 fork 我的项目，然后进行优化。如果你觉得的优化是有价值的话，你可以提交 PR 给我，我会尽快处理。\n\n## 介绍\n\n [guide-rpc-framework](https://github.com/Snailclimb/guide-rpc-framework) 是一款基于 Netty+Kyro+Zookeeper 实现的 RPC 框架。代码注释详细，结构清晰，并且集成了 Check Style 规范代码结构，非常适合阅读和学习。\n\n由于 Guide哥自身精力和能力有限，如果大家觉得有需要改进和完善的地方的话，欢迎 fork 本项目，然后 clone 到本地，在本地修改后提交 PR 给我，我会在第一时间 Review 你的代码。\n\n**我们先从一个基本的 RPC 框架设计思路说起！**\n\n### 一个基本的 RPC 框架设计思路\n\n> **注意** ：我们这里说的 RPC 框架指的是：可以让客户端直接调用服务端方法就像调用本地方法一样简单的框架，比如我前面介绍的 Dubbo、Motan、gRPC 这些。 如果需要和 HTTP 协议打交道，解析和封装 HTTP 请求和响应。这类框架并不能算是“RPC 框架”，比如 Feign。\n\n一个最简单的 RPC 框架使用示意图如下图所示,这也是 [guide-rpc-framework](https://github.com/Snailclimb/guide-rpc-framework) 目前的架构 ：\n\n![](./images/rpc-architure.png)\n\n服务提供端 Server 向注册中心注册服务，服务消费者 Client 通过注册中心拿到服务相关信息，然后再通过网络请求服务提供端 Server。\n\n作为 RPC 框架领域的佼佼者[Dubbo](https://github.com/apache/dubbo)的架构如下图所示,和我们上面画的大体也是差不多的。\n\n<img src="./images/dubbo-architure.jpg" style="zoom:80%;" />\n\n**一般情况下， RPC 框架不仅要提供服务发现功能，还要提供负载均衡、容错等功能，这样的 RPC 框架才算真正合格的。**\n\n**简单说一下设计一个最基本的 RPC 框架的思路：**\n\n![](./images/rpc-architure-detail.png)\n\n1. **注册中心** ：注册中心首先是要有的，推荐使用 Zookeeper。注册中心负责服务地址的注册与查找，相当于目录服务。服务端启动的时候将服务名称及其对应的地址(ip+port)注册到注册中心，服务消费端根据服务名称找到对应的服务地址。有了服务地址之后，服务消费端就可以通过网络请求服务端了。\n2. **网络传输** ：既然要调用远程的方法就要发请求，请求中至少要包含你调用的类名、方法名以及相关参数吧！推荐基于 NIO 的 Netty 框架。\n3. **序列化** ：既然涉及到网络传输就一定涉及到序列化，你不可能直接使用 JDK 自带的序列化吧！JDK 自带的序列化效率低并且有安全漏洞。 所以，你还要考虑使用哪种序列化协议，比较常用的有 hession2、kyro、protostuff。\n4. **动态代理** ： 另外，动态代理也是需要的。因为 RPC 的主要目的就是让我们调用远程方法像调用本地方法一样简单，使用动态代理可以屏蔽远程方法调用的细节比如网络传输。也就是说当你调用远程方法的时候，实际会通过代理对象来传输网络请求，不然的话，怎么可能直接就调用到远程方法呢？\n5. **负载均衡** ：负载均衡也是需要的。为啥？举个例子我们的系统中的某个服务的访问量特别大，我们将这个服务部署在了多台服务器上，当客户端发起请求的时候，多台服务器都可以处理这个请求。那么，如何正确选择处理该请求的服务器就很关键。假如，你就要一台服务器来处理该服务的请求，那该服务部署在多台服务器的意义就不复存在了。负载均衡就是为了避免单个服务器响应同一请求，容易造成服务器宕机、崩溃等问题，我们从负载均衡的这四个字就能明显感受到它的意义。\n6. ......\n\n### 项目基本情况和可优化点\n\n为了循序渐进，最初的是时候，我是基于传统的 **BIO** 的方式 **Socket** 进行网络传输，然后利用 **JDK 自带的序列化机制** 来实现这个 RPC 框架的。后面，我对原始版本进行了优化，已完成的优化点和可以完成的优化点我都列在了下面 👇。\n\n**为什么要把可优化点列出来？** 主要是想给哪些希望优化这个 RPC 框架的小伙伴一点思路。欢迎大家 fork 本仓库，然后自己进行优化。\n\n- [x] **使用 Netty（基于 NIO）替代 BIO 实现网络传输；**\n- [x] **使用开源的序列化机制 Kyro（也可以用其它的）替代 JDK 自带的序列化机制；**\n- [x] **使用 Zookeeper 管理相关服务地址信息**\n- [x] Netty 重用 Channel 避免重复连接服务端\n- [x] 使用 `CompletableFuture` 包装接受客户端返回结果（之前的实现是通过 `AttributeMap` 绑定到 Channel 上实现的） 详见：[使用 CompletableFuture 优化接受服务提供端返回结果](./docs/使用CompletableFuture优化接受服务提供端返回结果.md)\n- [x] **增加 Netty 心跳机制** : 保证客户端和服务端的连接不被断掉，避免重连。\n- [x] **客户端调用远程服务的时候进行负载均衡** ：调用服务的时候，从很多服务地址中根据相应的负载均衡算法选取一个服务地址。ps：目前实现了随机负载均衡算法与一致性哈希算法。\n- [x] **处理一个接口有多个类实现的情况** ：对服务分组，发布服务的时候增加一个 group 参数即可。\n- [x] **集成 Spring 通过注解注册服务**\n- [x] **集成 Spring 通过注解进行服务消费** 。参考： [PR#10](https://github.com/Snailclimb/guide-rpc-framework/pull/10)\n- [x] **增加服务版本号** ：建议使用两位数字版本，如：1.0，通常在接口不兼容时版本号才需要升级。为什么要增加服务版本号？为后续不兼容升级提供可能，比如服务接口增加方法，或服务模型增加字段，可向后兼容，删除方法或删除字段，将不兼容，枚举类型新增字段也不兼容，需通过变更版本号升级。\n- [x] **对 SPI 机制的运用** \n- [ ] **增加可配置比如序列化方式、注册中心的实现方式,避免硬编码** ：通过 API 配置，后续集成 Spring 的话建议使用配置文件的方式进行配置\n- [x] **客户端与服务端通信协议（数据包结构）重新设计** ，可以将原有的 `RpcRequest`和 `RpcReuqest` 对象作为消息体，然后增加如下字段（可以参考：《Netty 入门实战小册》和 Dubbo 框架对这块的设计）：\n  - **魔数** ： 通常是 4 个字节。这个魔数主要是为了筛选来到服务端的数据包，有了这个魔数之后，服务端首先取出前面四个字节进行比对，能够在第一时间识别出这个数据包并非是遵循自定义协议的，也就是无效数据包，为了安全考虑可以直接关闭连接以节省资源。\n  - **序列化器编号** ：标识序列化的方式，比如是使用 Java 自带的序列化，还是 json，kyro 等序列化方式。\n  - **消息体长度** ： 运行时计算出来。\n  - ......\n- [ ] **编写测试为重构代码提供信心**\n- [ ] **服务监控中心（类似dubbo admin）**\n- [x] **设置 gzip 压缩**\n\n### 项目模块概览\n\n![](./images/RPC框架各个模块介绍.png)\n\n## 运行项目\n\n### 导入项目\n\nfork 项目到自己的仓库，然后克隆项目到自己的本地：`git clone git@github.com:username/guide-rpc-framework.git`，使用 IDEA 打开，等待项目初始化完成。\n\n### 初始化 git hooks\n\n**这一步主要是为了在 commit 代码之前，跑 Check Style，保证代码格式没问题，如果有问题的话就不能提交。**\n\n> 以下演示的是 Mac/Linux 对应的操作，Window 用户需要手动将 `config/git-hooks` 目录下的`pre-commit` 文件拷贝到 项目下的 `.git/hooks/` 目录。\n\n执行下面这些命令：\n\n```shell\n➜  guide-rpc-framework git:(master) ✗ chmod +x ./init.sh\n➜  guide-rpc-framework git:(master) ✗ ./init.sh\n```\n\n`init.sh` 这个脚本的主要作用是将 git commit 钩子拷贝到项目下的 `.git/hooks/` 目录，这样你每次 commit 的时候就会执行了。\n\n### CheckStyle 插件下载和配置\n\n`IntelliJ IDEA-> Preferences->Plugins->搜索下载 CheckStyle 插件`，然后按照如下方式进行配置。\n\n![CheckStyle 插件下载和配置](./images/setting-check-style.png)\n\n配置完成之后，按照如下方式使用这个插件！\n\n![插件使用方式](./images/run-check-style.png)\n\n### 下载运行 zookeeper\n\n这里使用 Docker 来下载安装。\n\n下载：\n\n```shell\ndocker pull zookeeper:3.5.8\n```\n\n运行：\n\n```shell\ndocker run -d --name zookeeper -p 2181:2181 zookeeper:3.5.8\n```\n\n## 使用\n\n### 服务提供端\n\n实现接口：\n\n```java\n@Slf4j\n@RpcService(group = "test1", version = "version1")\npublic class HelloServiceImpl implements HelloService {\n    static {\n        System.out.println("HelloServiceImpl被创建");\n    }\n\n    @Override\n    public String hello(Hello hello) {\n        log.info("HelloServiceImpl收到: {}.", hello.getMessage());\n        String result = "Hello description is " + hello.getDescription();\n        log.info("HelloServiceImpl返回: {}.", result);\n        return result;\n    }\n}\n\t\n@Slf4j\npublic class HelloServiceImpl2 implements HelloService {\n\n    static {\n        System.out.println("HelloServiceImpl2被创建");\n    }\n\n    @Override\n    public String hello(Hello hello) {\n        log.info("HelloServiceImpl2收到: {}.", hello.getMessage());\n        String result = "Hello description is " + hello.getDescription();\n        log.info("HelloServiceImpl2返回: {}.", result);\n        return result;\n    }\n}\n```\n\n发布服务(使用 Netty 进行传输)：\n\n```java\n/**\n * Server: Automatic registration service via @RpcService annotation\n *\n * @author shuang.kou\n * @createTime 2020年05月10日 07:25:00\n */\n@RpcScan(basePackage = {"github.javaguide.serviceimpl"})\npublic class NettyServerMain {\n    public static void main(String[] args) {\n        // Register service via annotation\n        new AnnotationConfigApplicationContext(NettyServerMain.class);\n        NettyServer nettyServer = new NettyServer();\n        // Register service manually\n        HelloService helloService2 = new HelloServiceImpl2();\n        RpcServiceProperties rpcServiceConfig = RpcServiceProperties.builder()\n                .group("test2").version("version2").build();\n        nettyServer.registerService(helloService2, rpcServiceConfig);\n        nettyServer.start();\n    }\n}\n```\n\n### 服务消费端\n\n```java\n@Component\npublic class HelloController {\n\n    @RpcReference(version = "version1", group = "test1")\n    private HelloService helloService;\n\n    public void test() throws InterruptedException {\n        String hello = this.helloService.hello(new Hello("111", "222"));\n        //如需使用 assert 断言，需要在 VM options 添加参数：-ea\n        assert "Hello description is 222".equals(hello);\n        Thread.sleep(12000);\n        for (int i = 0; i < 10; i++) {\n            System.out.println(helloService.hello(new Hello("111", "222")));\n        }\n    }\n}\n```\n\n```java\nClientTransport rpcRequestTransport = new SocketRpcClient();\nRpcServiceProperties rpcServiceConfig = RpcServiceProperties.builder()\n        .group("test2").version("version2").build();\nRpcClientProxy rpcClientProxy = new RpcClientProxy(rpcRequestTransport, rpcServiceConfig);\nHelloService helloService = rpcClientProxy.getProxy(HelloService.class);\nString hello = helloService.hello(new Hello("111", "222"));\nSystem.out.println(hello);\n```\n\n## 相关问题\n\n### 为什么要造这个轮子？Dubbo 不香么？\n\n写这个 RPC 框架主要是为了通过造轮子的方式来学习，检验自己对于自己所掌握的知识的运用。\n\n实现一个简单的 RPC 框架实际是比较容易的，不过，相比于手写 AOP 和 IoC 还是要难一点点，前提是你搞懂了 RPC 的基本原理。\n\n我之前从理论层面在我的知识星球分享过如何实现一个 RPC。不过理论层面的东西只是支撑，你看懂了理论可能只能糊弄住面试官。咱程序员这一行还是最需要动手能力，即使你是架构师级别的人物。当你动手去实践某个东西，将理论付诸实践的时候，你就会发现有很多坑等着你。\n\n大家在实际项目上还是要尽量少造轮子，有优秀的框架之后尽量就去用，Dubbo 在各个方面做的都比较好和完善。\n\n### 如果我要自己写的话，需要提前了解哪些知识\n\n**Java** ：\n\n1. 动态代理机制；\n2. 序列化机制以及各种序列化框架的对比，比如 hession2、kyro、protostuff。\n3. 线程池的使用；\n4. `CompletableFuture` 的使用\n5. ......\n\n**Netty** ：\n\n1. 使用 Netty 进行网络传输；\n2. `ByteBuf` 介绍\n3. Netty 粘包拆包\n4. Netty 长连接和心跳机制\n\n**Zookeeper** :\n\n1. 基本概念；\n2. 数据结构；\n3. 如何使用 Netflix 公司开源的 zookeeper 客户端框架 Curator 进行增删改查；\n\n## 教程\n\nGuide 的星球正在更新《从零开始手把手教你实现一个简单的 RPC 框架》。扫描下方二维码关注“**JavaGuide**”后回复 “**星球**”即可。\n\n![我的公众号](https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-6/167598cd2e17b8ec.png)\n\n']
understand-plugin-framework,demos to help understand plugin framwork,2570,https://github.com/tiann/understand-plugin-framework,master,['# understand-plugin-framework\n\n分析[DroidPlugin][1]，深入理解插件化框架，内容如下：\n\n- [Hook机制之动态代理][2]\n- [Hook机制之Binder Hook][3]\n- [Hook机制之AMS&PMS][4]\n- [Activity生命周期管理][5]\n- [插件加载机制][6]\n- [广播的处理方式][7]\n- [Service的管理][8]\n- [ContentProvider的管理][9]\n- DroidPlugin插件通信机制\n- 插件机制之资源管理\n- 不同插件框架方案对比\n- 插件化的未来\n\n2018/8/27 更新：\n\n从我写下 [Android插件化原理解析](http://weishu.me/2016/01/28/understand-plugin-framework-overview/) 系列第一篇文章至今，已经过去了两年时间。这期间，插件化技术也得到了长足的发展；与此同时，React Native，PWA，App Bundle，以及最近的Flutter也如火如荼。由于实现插件化需要太多的黑科技，它给项目的维护成本和稳定性增加了诸多不确定性；我个人认为，2017年手淘Atlas插件化项目的开源标志着插件化的落幕，2018年Android 9.0上私有API的限制几乎称得上是盖棺定论了——曾经波澜壮阔的插件化进程必将要退出历史主流。如今的插件化技术朝两个方向发展：其一，插件化的工程特性：模块化/解耦被抽离，逐渐演进为稳定、务实的的组件化方案；其二，插件化的黑科技特性被进一步发掘，inline hook/method hook大行其道，走向双开，虚拟环境等等。\n\n虽然插件化终将落幕，但是它背后的技术原理包罗万象，值得每一个希望深入Android的小伙伴们学习。\n\n很遗憾曾经的系列文章没有写完，现在已经没机会甚至可以说不可能去把它完结了；不过幸运的是，我的良师益友包老师（我习惯称呼他为包哥）写了一本关于插件化的书——《Android插件化开发指南》，书中讲述了过去数年浩浩荡荡的插件化历程以及插件技术的方方面面；有兴趣的小伙伴可以买一本看看。\n\n[![点击购买](http://7xp3xc.com1.z0.glb.clouddn.com/201605/1535348090511.png)][10]\n\n[1]: https://github.com/DroidPluginTeam/DroidPlugin\n[2]: http://weishu.me/2016/01/28/understand-plugin-framework-proxy-hook/\n[3]: http://weishu.me/2016/02/16/understand-plugin-framework-binder-hook/\n[4]: http://weishu.me/2016/03/07/understand-plugin-framework-ams-pms-hook/\n[5]: http://weishu.me/2016/03/21/understand-plugin-framework-activity-management/\n[6]: http://weishu.me/2016/04/05/understand-plugin-framework-classloader/\n[7]: http://weishu.me/2016/04/12/understand-plugin-framework-receiver/\n[8]: http://weishu.me/2016/05/11/understand-plugin-framework-service/\n[9]: http://weishu.me/2016/07/12/understand-plugin-framework-content-provider/\n[10]: https://item.m.jd.com/product/31188356430.html?utm_source=iosapp&utm_medium=appshare&utm_campaign=t_335139774&utm_term=Wxfriends\n']
VirtualApp,Virtual Engine for Android(Support 12.0 in business version),9173,https://github.com/asLody/VirtualApp,master,['\n[English Doc](README_eng.md "English")\n\n<h1><p align="center">VA产品说明&开发指导</p></h1> \n\n## VA是什么? ##\nVirtualApp(简称：VA)是一款运行于Android系统的沙盒产品，可以理解为轻量级的“Android虚拟机”。其产品形态为高可扩展，可定制的集成SDK，您可以基于VA或者使用VA定制开发各种看似不可能完成的项目。VA目前被广泛应用于APP多开、小游戏合集、手游加速器、手游租号、手游手柄免激活、VR程序移植、区块链、移动办公安全、军队政府数据隔离、手机模拟信息、脚本自动化、插件化开发、无感知热更新、云控等技术领域。<br> **Github上代码已在2017年12月份停止更新，商业版代码在持续更新中，如需授权获得最新代码，请联系微信：10890**\n\n\n## VA中的术语 ##\n术语 | 解释\n---- | ---\n宿主 | 集成VirtualApp类库（lib）的App叫做宿主  \n宿主插件 | 用于在同一个手机,运行另一种ABI的宿主包,又称做插件包,扩展包,宿主插件包,宿主扩展包\n虚拟App/VApp | VA的虚拟环境多开的app\n外部App | 手机真实环境安装的app\n<br/>\n\n## VA技术架构 ##\n![](https://cdn.jsdelivr.net/gh/xxxyanchenxxx/temp@1.0/doc/va_architecture.jpg)  \nVA技术一共涉及到了Android的APP层，Framework层以及Native层。  \n一个APP想要在Android系统上运行，必须要安装后系统才会接纳。安装到VA内部的APP实际上并没有安装到系统中，所以正常情况下是无法运行的。那如何才能让它运行呢？  \n答：那就只有“欺骗”系统，让系统认为已经安装。而这个“欺骗”过程就是VA Framework的核心工作内容，也是整个VA的核心技术原理。  \n\n**下面介绍下在这3个层次分别做了什么事情：**\n\n层次 | 主要工作\n---- | ---\nVA Space | 由VA提供了一个内部的空间，用于安装要在其内部运行的APP，这个空间是系统隔离的。\nVA Framework | 这一层主要给Android Framework和VAPP做代理，这也是VA的核心。VA提供了一套自己的VA Framework，处于Android Framework与VA APP之间。</br>1. 对于VAPP，其访问的所有系统Service均已被 `VA Framework` 代理，它会修改VAPP的请求参数，将其中与VAPP安装信息相关的全部参数修改为宿主的参数之后发送给Android Framework（有部分请求会发送给自己的VA Server直接处理而不再发送给Android系统）。这样Android Framework收到VAPP请求后检查参数就会认为没有问题。</br>2. 待Android系统对该请求处理完成返回结果时，VA Framework同样也会拦截住该返回结果，此时再将原来修改过的参数全部还原为VAPP请求时发送的。</br>这样VAPP与Android系统的交互也就能跑通了。\nVA Native | 在这一层主要为了完成2个工作，IO重定向和VA APP与Android系统交互的请求修改。</br>1. IO重定向是因为可能有部分APP会通过写死的绝对路径访问，但是如果APP没有安装到系统，这个路径是不存在的，通过IO重定向，则将其转向VA内部安装的路径。</br>2. 另外有部分jni函数在VA Framework中无法hook的，所以需要在native层来做hook。\n</br>\n\n总结：\n通过上面技术架构可以看到，VA内部的APP实际是跑在VA自己的VA Framework之上。\nVA已将其内部APP的全部系统请求进行拦截，通过这项技术也能对APP进行全面控制，而不仅仅只是多开。并且为了方便开发者，VA还提供了SDK以及Hook SDK。  \n\n\n## VA进程架构 #\n![](https://cdn.jsdelivr.net/gh/xxxyanchenxxx/temp@1.0/doc/va_process.jpg)    \nVA运行时有5类进程：CHILD进程，VA Host Main进程，VA Host Plugin进程，VAPP Client进程，VAServer进程。\nVA为了同时支持32位APP与64位APP，需要安装2个包：一个主包，一个插件包(在本文档中主包是32位，插件包是64位)。\n2个包也是必须的，因为一个包只能运行在一种模式下，要么32位，要么64位。所以对于32位的APP，VA使用32位的主包去运行，对于64位的APP，VA则使用64位的插件包去运行。\n在主包中含了VA的所有代码，插件包中只有一段加载主包代码执行的代码，无其他代码。所以插件包几乎不用更新，只需要更新主包即可。\n另外主包是选择用32位还是64位，可以在配置文件中修改(比如对于要上GooglePlay的用户，会修改为主包64位，插件包32位)。\n\n**各类进程的作用与解释如下：**</br>\n\n进程类型 | 作用\n---- | ---\nCHILD | 由VA Host集成的其他进程，比如：保活进程，推送进程等。\nVA Host Main | VA主包的UI主界面所在的进程。默认主包是32位，插件包是64位，可在配置文件中修改切换。\nVA Host Plugin | 支持64位APP的插件包所在进程。默认主包是32位，插件包是64位，可在配置文件中修改切换。\nVAPP Client | 安装到VA中的APP启动后产生的进程，在运行时会将io.busniess.va:pxxx进程名修改VAPP的真实进程名。\nVAServer | VA Server的所在的进程，用于处理VA中不交予系统处理的请求。比如APP的安装处理。\n<br/>\n\n## VA几乎能满足您的一切需求 ##\n通过上面的技术架构，我们可以了解到VA可以对APP进行全面的控制，并且提供了Hook SDK，几乎能满足您在各个领域的一切需求：  \n1. 可以满足您的**双开/多开**需求    \nVA可以让您在同一部手机上安装多个微信/QQ/WhatsApp/Facebook等APP，实现一部手机，多个账号同时登录。  \n\n2. 可以满足您的**移动安全**需求  \nVA提供了一整套内部与外部的隔离机制，包括但不限于(文件隔离/组件隔离/进程通讯隔离)，简单的说VA内部就是一个“完全独立的空间”。\n通过VA可将工作事务与个人事务安全的隔离，互不干扰。稍作定制即可实现应用行为审计、数据加密、数据采集、数据防泄漏、防攻击泄密等移动安全相关的需求。    \n    **2.1 应用行为审计**  \n通过VA提供的HOOK能力可以实现实时监测用户使用行为，将违规信息上传到服务器；并能轻易实现诸如时间围栏(在某个时间段内能否使用应用的某个功能)、地理围栏(在某个区域内能否使用应用的某个功能)、敏感关键字过滤拦截等功能需求。  \n\t**2.2 数据加密**  \n通过VA提供的HOOK能力可以实现对应用的全部数据/文件加密，保证数据/文件落地安全。   \n\t**2.3 数据采集**  \n通过VA提供的HOOK能力可以实现应用数据的实时无感上传需求，如聊天记录、转账记录等，防止事后删除无法追溯。  \n\t**2.4 数据防泄漏**  \n通过VA提供的HOOK能力可以实现应用防复制/粘贴、防截屏/录屏、防分享/转发、水印溯源等需求。   \n\t**2.5 防攻击泄密**  \n通过VA提供的应用管控能力可以将APP获取短信/通讯录/通话记录/后台录音/后台拍照/浏览历史/位置信息等隐私相关的行为完全控制在沙盒中，防止木马/恶意APP获取到用户真实的隐私数据，造成泄密等严重后果。  \n\n3. 可以满足您的**免ROOT HOOK**需求  \nVA提供了Java与Native的Hook能力，通过VA，您可以轻易实现诸如虚拟定位、改机、APP监控管理、移动安全等各种场景需要的功能。  \n\n4. 可以满足您的**APP静默安装**需求  \nVA提供了APP静默安装，静默升级，静默卸载的能力。如应用商店或游戏中心在集成VA后可以避免需要用户手动点击确认安装的操作，做到下载后立即安装到VA内，给用户带来“小程序”搬的体验，彻底避免了应用不易被用户安装上的问题。  \n\n5. 可以满足您的**APP管控**需求  \n您可以通过VA清楚的掌握APP访问了哪些系统API，哪些敏感数据，哪些设备信息等。比如APP是否访问了联系人，相册，通话记录，是否访问了用户的地理位置等信息。\n当然，您还可以通过VA控制或者构造自定义的信息给这些APP。不仅于此，您还可以获取到APP的私有数据，比如聊天数据库等。总之通过VA提供的应用管控能力，您可以轻易控制APP的一切行为，甚至修改APP与服务器交互内容等。  </br>\n\n\n6. 可以满足您的**海外市场**需求  \nVA实现了对Google服务的支持，以支持海外的App运行，比如Twitter、Messenger、WhatsApp、Instagram、FaceBook、Youtube等。  \n\n\n7. 可以满足您的**VR程序移植**需求  \n可以通过VA的Hook能力拦截VR设备的API，让您无需改动代码即可将VR程序移植到新的设备。  \n\n8. 可以满足您**几乎一切能想到**的需求  \nVA对于内部的App具有完全的监管和控制能力，几乎能满足您的一切需求！\n\n9. 同时VA也是该技术领域**唯一一款**对外商业授权的产品    \n截止目前已有**上百家**授权客户在付费使用VirtualApp商业版代码，集成VirtualApp代码的APP**日启动**次数**超过2亿次**，众多安卓工程师向我们提供不同场景下的用户反馈，通过我们技术团队不断优化迭代，不断提升产品性能与兼容性！\n\n\nVA的特有能力\n---\n\n- 克隆能力<br/>\n可以克隆外部系统中已经安装的App，并在内部运行，互不干扰。典型应用场景为App双开。\n\n- 免安装能力<br/>\n除了克隆已安装之外，VA可以直接在内部安装(外部无感知)apk，并在内部直接运行。典型应用场景为插件化，独立应用市场等。\n\n- 多开能力<br/>\nVA不仅可以“双开”，独特的多用户模式支持用户在内部无限多开同一个App。\n\n- 内外隔离能力<br/>\nVA是一个标准的沙盒，或者说“虚拟机”，提供了一整套内部与外部的隔离机制，包括但不限于(文件隔离/组件隔离/进程通讯隔离)，简单的说VA内部就是一个“完全独立的空间”。在此基础之上，稍作定制即可实现一部手机上的“虚拟手机”。当然您也可以发挥想象，定制成应用于数据加密，数据隔离，隐私保护，企业管理的应用系统。\n\n- 对于内部App的完全控制能力<br/>\nVA对于内部的App具有完全的监控和控制能力，这点在未Root的外部环境中是绝对无法实现的。\n<details>\n<summary>详细(下拉打开)</summary>\n  1. 服务请求控制，首先VA直接提供了一些服务请求的拦截，您可以在集成VA的时候方便的定制这些服务请求，包括但远不限于(App请求安装apk/App请求打开某些文件/App请求定位数据/App请求手机信息等等)<br/><br/>\n  2. 系统API控制，VA虚拟并实现了整个安卓系统框架，这也是VA可以免安装在内部运行apk的原理，您可以对虚拟框架的实现进行修改以动态监测分析App的行为等；除此之外，您还可模拟一些系统行为以实现一些在外部难以实现的需求(例如游戏手柄)。<br/><br/>\n  3. 内存读写，VA可以无需Root读写内部App进程的内存。<br/><br/>\n  4. 免Root调试，VA可以免Root调试(ptrace)内部的App进程，基于此您还可以实现免Root的进程注入。<br/><br/>\n  5. 加载任意“插件”和“行为”，VA内部的App进程由VA的框架Client端代码派生而来，所以您可以在进程的入口代码插入任何“加载”以及“控制”逻辑。这些实现都非常简单。<br/><br/>\n  6. 方法Hook，VA内置了一套运行于Android各个版本(直到AndroidQ)的Xposed框架以及native hook框架，基于此您可以方便的Hook任意内部App的任意Java/Native方法。可以轻松实现一个免Root的Xposed环境(有实例代码)。<br/><br/>\n  7. 文件控制，VA内置了完整的文件重定向，可以方便的控制内部App的文件的读写，基于此可以实现对文件的保护加密等功能。<br/><br/>\n  8. 注：以上控制能力均有实现代码或者实例以作参考。\n</details>\n\n\nVA的其他特性\n---\n\n- 高性能<br/>\n进程级“虚拟机”，VA独特的实现方式让其性能几乎于原生App一致，更不需要普通虚拟机漫长的启动。\n\n- 全版本支持<br/>\n支持5.0-13.0，支持32位/64位app，支持ARM以及X86处理器。并且支持未来将更新的Android版本。\n\n- 易扩展与集成<br/>\nVA 的集成方式与普通Android库类似，即使您的App已经完成上线，您也方便的可以集成VA，享受VA带来的能力。\n\n- 支持Google服务<br/>\n提供Google服务的支持，以支持海外的App\n\n\n## VA与其他技术方案对比 ##\n在做企业级移动安全时，往往需要对APP进行管控，以下是列出的可能技术方案对比： \n\n技术方案 | 原理简介 | 点评 |  运行性能 | 兼容稳定性 | 项目维护成本\n---- | --- | ---  | ---  | ---  | --- \n二次打包 | 通过反编译目标APP，加入自己的控制代码，重新打包 | 1.现在的APP几乎都有加固或防篡改保护，重打包已是一件非常困难的事</br> 2.手机系统也会检测APP是否被重打包，如果重打包，会直接提示用户存在安全风险，甚至不让安装</br>3.针对每一个APP，甚至每一个版本都要深入去逆向分析，耗时耗力，难于维护  | 优秀  | 差  | 高\n定制ROM | 通过定制系统源码，编译刷到指定手机 | 只能针对指定的内部手机，局限性太大，无法扩展  | 优秀  | 优秀  | 高\nROOT手机 | 通过ROOT手机，刷入xposed等类似框架 | 1.ROOT手机现在本身已是一件不太可能的事</br> 2.现实中也很难让用户能去ROOT自己的手机  | 优秀  | 差  | 高\nVA | 轻量级虚拟机，速度快，对设备要求低 | 无上述风险点  | 优秀  | 优秀，有上百家企业在同时测试反馈  | 低，VA提供了API并有专业的技术团队保障项目稳定运行\n<br/>\n通过以上对比可以看出，VA是一款优秀的产品，并且能降低您的开发维护成本！\n\n## 集成VA步骤 ##\n第1步：在您的Application中调用VA接口```VirtualCore.get().startup()```来启动VA引擎  \n第2步:调用VA接口```VirtualCore.get().installPackageAsUser(userId, packageName)```将目标APP安装到VA中  \n第3步:调用VA接口```VActivityManager.get().launchApp(userId, packageName)```启动APP    \n**仅通过以上3个API就完成了基础使用，VA已屏蔽了复杂的技术细节，并提供了接口API，让您的开发变得很简单！**\n\n## VA的兼容稳定性 ##\nVA已被**上百家**企业进行了广泛测试，包含**数十家上市公司高标准**的测试及反馈，几乎涵盖了海内外的各种机型设备和场景！\n为您的稳定运行提供了充分的保障！  \n\n截止目前，支持的系统版本:\n\n系统版本 | 是否支持\n---- | ---\n5.0 | 支持\n5.1 | 支持\n6.0 | 支持\n7.0 | 支持\n8.0 | 支持\n9.1 | 支持\n10.0 | 支持\n11.0 | 支持\n12.0 | 支持\n13.0 | 支持\n<br/>\n\n\n支持的APP类型:\n\nAPP类型 | 是否支持\n---- | ---\n32位APP | 支持\n64位APP | 支持\n<br/>\n\n支持的HOOK类型:\n\nHook类型 | 是否支持\n---- | ---\nJava Hook | 支持\nNative Hook | 支持\n\n支持的CPU类型:\n\nHook类型 | 是否支持\n---- | ---\nARM 32 | 支持\nARM 64 | 支持\n<br/>\n\n## 集成VA遇到问题如何反馈？ ##\n购买授权后我们会建立微信群，有任何问题可以随时反馈给我们，并根据优先级在第一时间处理！\n\n## VA开发文档 ##\nVA开发文档请参考：[开发文档](doc/VADev.md)\n\n\n\n授权说明\n------\nVirtualApp虚拟机技术归属于：济宁市罗盒网络科技有限公司，于2015年至2021年申请多项VirtualApp知识产权，`受中华人民共和国知识产权法保护`。当您需要使用Github上的代码时，**请购买商业授权**，获取商业授权后将可以收到最新VirtualApp商业版全部源代码。上百家授权客户在付费使用VirtualApp商业版代码，集成VirtualApp代码的APP日启动次数超过2亿次，众多安卓工程师向我们提供不同场景下的用户反馈，通过我们技术团队不断优化迭代，VirtualApp商业版代码性能更好、兼容性更高。`当您的公司获取授权后，将成为其中一员，享受这些不断迭代完善后的技术成果。并可以和我们的授权客户进行运营、技术及商业上的互动合作。`\n\n<br/>\n负责人：张总 <br/>\n微信：10890 <br/>\n<br/>\n\n\n严重声明\n------\n您如果未经授权将VirtualApp用于**内部使用、商业牟利或上传应用市场**，我们将取证后报警（侵犯著作权罪）或起诉，这将对您所属公司造成刑事责任及法律诉讼，影响到您公司的商誉和投资。`购买商业授权为您节省大量开发、测试和完善兼容性的时间，让您更多时间用于创新及盈利。`罗盒科技已在2020年报警和起诉了一些个人及公司。<br/>\n\n**为响应国家对于知识产权的保护号召！凡举报自己所在公司或其他公司未经授权，违法使用VirtualApp代码开发产品的，一经核实给予现金奖励。我们会对举报人身份保密！举报联系微信：10890**\n\n  <br/>\n\n商业版主要更新\n------\n\n1. 兼容最新Android 13.0\n2. 不易被杀毒软件误报\n3. 框架优化，性能大幅提升\n4. 手机系统及APP兼容性大幅提升\n5. 完美运行Google服务\n6. 支持运行纯64位App\n7. 内置`XPosed Hook`框架\n8. 增加定位模拟代码\n9. 增加改机代码\n10. 其他400+项问题的修复和改进，详情请见下表\n\n<br>\n\n2017年-2023年商业版代码更新详细\n------\n\n**2023年1月27号 至 2023年 2月16号 商业版代码更新内容**\n\n437、修复mOpPackageName空指针<br/>\n436、修复13.0上PackageManager几个flags参数导致的crash<br/>\n435、修复VAPP返回主页的Intent crash<br/>\n434、TelecomManagerStub API适配<br/>\n\n**2022年12月9号 至 2023年 1月26号 商业版代码更新内容**\n\n433、修复PendingIntent flag处理问题<br/>\n\n**2022年11月9号 至 2022年 12月8号 商业版代码更新内容**\n\n432、修复Facebook在某些情况下无法启动的问题<br/>\n431、启动外部App时，排除对VA自身的判断<br/>\n430、修复queryIntentServices过滤规则<br/>\n\n\n<details>\n<summary>2017年 12月 至 2022年 11 月 8 日 商业版代码更新内容(下拉打开)</summary>\n\n**2022年10月9号 至 2022年 11月8号 商业版代码更新内容**\n\n429、修复当VA_AUTHORITY_PREFIX不等于包名时找不到Provider的问题："Failed to find provider info ..."<br/>\n428、getPermissionActivityIntent处理<br/>\n427、修复特殊情况下,检查权限无限弹窗<br/>\n426、强调Intent使用外部通讯录(如果被第三方接管,建议使用外部可见)<br/>\n425、新增几个Java API适配<br/>\n424、修复修复部分后台Activity跳转问题<br/>\n423、修复在10.0+上后台Activity无法启动的问题<br/>\n\n\n**2022年 8月20号 至 2022年 10月8号 商业版代码更新内容**\n\n422、新功能:增加启动插件Activity代理，绕过后台5s限制<br/>\n421、修复Provider在10.0+上crash的问题<br/>\n420、适配最新版微信<br/>\n419、适配克隆时不显示sdcard上的APK<br/>\n418、适配12.0+上PendingIntent Flags必须为FLAG_UPDATE_CURRENT/FLAG_IMMUTABLE<br/>\n417、修复MediaProvider因为ACCESS_MEDIA_LOCATION 权限检查导致的crash<br/>\n416、修复12.0+上debug模式下hook失败的问题<br/>\n415、适配在Multi User账户下crash的问题<br/>\n414、适配由于后台限制导致VA Core启动插件中Activity失败的问题<br/>\n\n\n**2022年 7月27号 至 2022年 8月19号 商业版代码更新内容**\n\n413、Android 13.0继续适配<br/>\n412、主版调整为64bit<br/>\n411、修复某些华为手机上App无法打开的问题<br/>\n410、修复OPPO 13.0上无法打开应用的问题<br/>\n409、修复百度语音TTS的调用问题<br/>\n408、修复数据隔离后仍可以访问sdcard根目录的问题<br/>\n407、修复鸿蒙手机上的崩溃问题<br/>\n406、修复Debug模式下Hook失效问题<br/>\n405、添加对BinderInvocationStub的混淆处理，避免混淆后崩溃问题<br/>\n404、修复Native层调用free函数可能导致崩溃的问题<br/>\n403、修复微信由于虚拟文件系统导致的崩溃问题<br/>\n\n\n**2022年 7月9号 至 2022年 7月26号 商业版代码更新内容**\n\n402、Android 13.0适配<br/>\n401、修复开启虚拟储存后文件路径的处理问题<br/>\n400、修复12.0上Notification没有提示的问题<br/>\n\n\n**2022年 4月28号 至 2022年 5月31号 商业版代码更新内容**\n\n399、修复onGetCallingUid hook引起的崩溃问题<br/>\n398、修复微信8.0.22启动崩溃的问题<br/>\n\n\n**2022年 4月5号 至 2022年 4月27号 商业版代码更新内容**\n\n397、去掉sandhook中一些多余的hook代码，避免某些APP无法启动<br/>\n\n\n**2022年 3月13号 至 2022年 4月5号 商业版代码更新内容**\n\n396、新增功能:在VA中实现内置media provider，以支持媒体库隔离等需求<br/>\n395、修复微信/QQ使用语音时崩溃<br/>\n394、蓝牙崩溃问题适配<br/>\n393、增加部分Log<br/>\n392、删除一些无用代码<br/>\n\n\n**2022年 1月22号 至 2022年 3月12号 商业版代码更新内容**\n\n391、修复华为手机上StorageManager没有被hook的问题<br/>\n390、修复最新版微信无法从SD卡启动的问题<br/>\n389、PackageInfo中增加对requestedPermissionsFlags字段的处理<br/>\n388、新增VSettingsProvider，避免内置应用没有权限操作settings provider导致异常<br/>\n387、修复微信等APP启动黑屏，ANR等问题<br/>\n386、新增对MediaProvider的hook<br/>\n385、新增对插件shareUserId的处理，从而可以配置将插件的数据放到主包中<br/>\n384、新增可以配置是否将Tinker禁用<br/>\n383、修复Android 12权限处理适配<br/>\n\n\n**2021年 12月30号 至 2022年 1月21号 商业版代码更新内容**\n\n382、Sandhook适配12.0<br/>\n381、修复Sandhook在部分11.0上不生效的问题<br/>\n380、增加编译选项VA_FULL_EXT控制是否将VA源码编译到插件,满足加固场景。<br/>\n\n\n**2021年 11月24号 至 2021年 12月29号 商业版代码更新内容**\n\n379、Android 12.0第一轮适配已完成<br/>\n378、Demo App在11.0上增加文件权限检测<br/>\n377、修复静态广播接收者在独立进程无法接收广播的问题<br/>\n376、修复微信第一次登录可能crash问题<br/>\n375、修复部分APP无法显示头像问题<br/>\n374、修复在部分OPPO手机上打不开问题<br/>\n\n\n**2021年 9月21号 至 2021年 11月23号 商业版代码更新内容**\n\n373、修复WhatsApp在360手机上黑屏问题<br/>\n372、增加VA内外广播通信测试demo<br/>\n371、修复抖音极速版兼容性问题<br/>\n370、修复readlinkat返回值精度<br/>\n369、修复从外部安装app,没有引用org.apache.http.legacy的问题<br/>\n368、修复华为Nova 5i, 64位主包兼容性<br/>\n367、修复11.0上外部存储重定向问题<br/>\n366、修复11.0上GMS登录问题<br/>\n365、修复11.0 部分APP读写sdcard报错的问题<br/>\n364、修复va core进程死亡后，APP可能打不开的问题<br/>\n363、增加未安装插件时无法启动的错误日志<br/>\n\n**2021年 8月22号 至 2021年 9月20号 商业版代码更新内容**\n\n362、横屏重新适配<br/>\n361、修复部分APP通过file协议安装后无法打开的问题<br/>\n360、修复传递给JobIntentService中Intent数据丢失问题<br/>\n359、修复JobIntentService第二次调用无法工作的问题<br/>\n358、修复华为手机上某些APP奔溃的问题<br/>\n357、修复小米手机上游戏登录问题<br/>\n356、修复某些应用加固后无法打开的问题<br/>\n355、增加对关联启动权限检测<br/>\n354、targetSdk 30适配<br/>\n353、修复targetSdk为30时，某些应用无法上网的问题<br/>\n352、修复targetSdk为30时，sdcard无法访问的问题<br/>\n351、编译脚本中使用cmake替换gradle task<br/>\n350、移除过时文档<br/>\n\t\n**2021年 8月7号 至 2021年 8月21号 商业版代码更新内容**\n\n349、调整优化gradle脚本<br/>\n348、hidedenApiBypass支持Android R+<br/>\n347、targetSdk 30 支持<br/>\n346、修复VIVO系统服务bug<br/>\n345、修复VIVO手机无法使用摄像头的bug<br/>\n344、修复dex加载异常状态的获取<br/>\n343、修复Android R上libart.so路径问题<br/>\n342、修复Andoid Q+ 删除通知的bug<br/>\n341、修复APN uri的权限检查<br/>\n340、修复Android R暂停恢复线程状态<br/>\n339、修复debug模式下部分hook失效情况<br/>\n338、修复hook在R之后的一些bug<br/>\n\n**2021年 4月25号 至 2021年 8月6号 商业版代码更新内容**\n\n337、修复探探部分手机不能上传头像问题<br/>\n336、修复Android 10 华为设备IO重定向问题<br/>\n335、调整横竖屏逻辑,减少异常情况发生<br/>\n334、添加Activity生命周期的回调接口<br/>\n333、修复Android 12的广播问题<br/>\n332、修复微信部分界面状态异常的BUG<br/>\n331、修复Outlook、One drive、Teams、Zoom等海外app的支持<br/>\n330、修复Android 11 一个权限请求BUG<br/>\n329、修复部分cocos2d引擎只显示半屏的问题<br/>\n328、修复微信在多用户下不能发送文件的问题<br/>\n327、split apk 支持<br/>\n326、Android S 支持<br/>\n\n**2021年 2月24号 至 2021年 4月24号 商业版代码更新内容**\n\n325、适配多用户环境<br/>\n324、修复新版微信的兼容问题<br/>\n323、兼容更多企业级加固<br/>\n322、支持VAPP设置电源优化<br/>\n321、修复缺失权限声明<br/>\n320、修复Android 11上android.test.base库的引用<br/>\n319、优化ext插件判断<br/>\n318、优化安装时ABI的选择<br/>\n317、修复Google文档在Android 11上崩溃的问题<br/>\n\n**2020年 10月15号 至 2021年 2月23号 商业版代码更新内容**\n\n316、解决新版爱加密、邦邦等加固的兼容性<br/>\n315、修复WhatsApp不显示冷启动Splash的问题<br/>\n314、优化对系统app的识别<br/>\n313、完善多用户环境下的支持<br/>\n312、解决ext插件部分情况下卡死的问题<br/>\n311、支持Google Play在容器中下载APP<br/>\n310、修复Android 11 QQ无法显示图片的问题<br/>\n309、兼容Android 11运行Google Service<br/>\n308、解决Android 11无法运行chromium<br/>\n307、支持Hook @CriticalNative Method<br/>\n306、修复JDK 13无法编译运行的问题<br/>\n305、修复Service部分情况可能crash的问题<br/>\n304、修复Android 11无法加载外部存储私有数据的问题<br/>\n303、修复低版本app无法使用org.apache.http.legacy的问题<br/>\n302、修复某些情况系统任务栈只显示最后一个的问题<br/>\n301、完善不同平台的构建脚本<br/>\n300、修复Android 11无法读取obb的问题<br/>\n299、解决软件无法向后兼容的问题<br/>\n298、重构VApp安装框架<br/>\n297、重构virtual文件系统<br/>\n296、修复某些情况下WebView无法启动的问题<br/>\n295、修复VApp卸载重装的BUG<br/>\n294、修复LOL手游的登录异常问题<br/>\n293、支持安装Splits APK<br/>\n292、支持动态配置主包环境<br/>\n291、修复32位QQ调用64位微信卡顿的问题<br/>\n290、修复Messenger调用Facebook崩溃的问题<br/>\n289、优化对Google服务框架的支持<br/>\n288、实现新的扩展包同步机制<br/>\n287、修复Android 11正式版的异常问题<br/>\n286、添加系统Package缓存，优化性能<br/>\n285、修复disabled组件还能被PMS查询的BUG<br/>\n284、修复微信部分界面Launch行为异常的问题<br/>\n283、修复ContentProvider.getCallingPackage返回Host包名的BUG<br/>\n282、修复uid虚拟化的BUG，解决部分app权限检查失败的问题<br/>\n281、重写PendingIntent, IntentSender的实现<br/>\n280、优化进程管理，修复长期存在的概率性进程死锁问题<br/>\n279、重写Service实现，Service生命周期更准确，不容易被杀死<br/>\n\n\n**2020年 9月13号 至 2020年 10月15号 商业版代码更新内容**\n\n278、修复 64 位 App 无法调用 32 位 App 的问题<br/>\n277、修复 Android R 加载 HttpClient 的问题 <br/>\n276、修复 Android R debug 模式下的崩溃问题<br/>\n\n**2020年 8月23号 至 2020年 9月12号 商业版代码更新内容**\n\n275、添加缺失的 service hook<br/>\n274、修复百度翻译无法启动的问题 <br/>\n273、修复 GP 下载的 split app 无法启动的问题<br/>\n\n**2020年 7月10号 至 2020年 8月22号 商业版代码更新内容**\n\n272、修复 Service 创建<br/>\n271、添加 NotificationService 缺失的 Hook<br/>\n270、修复 Yotube 崩溃<br/>\n\n**2020年 5月19号 至 2020年 7月9号 商业版代码更新内容**\n\n269、初步适配 Android 11 beta1<br/>\n268、修复小红书多开闪退的问题<br/>\n267、修复某些 App 多开报“应用签名被篡改”的问题<br/>\n\n**2020年 4月24号 至 2020年 5月18号 商业版代码更新内容**\n\n266、修复 sh 调用错误<br/>\n265、修复 9.0 以上最新版 Facebook 无法登陆的问题<br/>\n264、帮助企业微信修复启动虚拟存储的情况下无法拍照的问题<br/>\n263、修复某些情况下 64位 app 打不开 Activity 的问题<br/>\n\n**2020年 3月24号 至 2020年 4月23号 商业版代码更新内容**\n\n262、修复 Vivo 设备提示安装游戏 SDK 的问题<br/>\n261、修复 Android Q 无法加载部分系统 so 的问题<br/>\n260、修复华为设备微博未响应<br/>\n259、忽略不必要的权限检查造成的崩溃<br/>\n258、修复 WPS 分享文件崩溃的问题<br/>\n257、部分 10.0 设备的闪退问题<br/>\n\n**2020年 3月7号 至 2020年 3月23号 商业版代码更新内容**\n\n256、修复微信同时打开两个页面问题<br/>\n255、修复微信登陆成功但是返回登陆页面的问题<br/>\n254、修复最新版 QQ 无法下载附件的问题<br/>\n253、更新 SandHook 版本<br/>\n252、修复 9.0 以上安装未签名Apk问题 <br/>\n251、修复 10.0 的定位问题<br/>\n\n**2020年 1月16号 至 2020年 3月6号 商业版代码更新内容**\n\n250、调整 lib 重定向逻辑<br/>\n249、修复三星 10.0 系统上的崩溃问题<br/>\n248、修复 release build 的 hook 异常<br/>\n247、增加 SandHook 的 proguard 规则<br/>\n246、修复对部分 App 中 VirtualApk 的兼容问题 <br/>\n245、修复 VA 内部请求安装 apk 失败的问题<br/>\n\n**2019年 12月26号 至 2020年 1月15号 商业版代码更新内容**\n\n244、修复 Android Q 遗漏的 hook<br/>\n243、禁用 Emui10 的 AutoFill<br/>\n242、增加新 api 结束所有 activity<br/>\n\n**2019年 12月15号 至 2019年 12月25号 商业版代码更新内容**\n\n241、修复 Emui10 上企业微信等 App 无法启动的问题<br/>\n240、修复在 4.x 可能导致的崩溃<br/>\n239、升级 SandHook 修复对 Thread 类的 Hook<br/>\n238、修复 Android Q 某些接口导致的权限问题<br/>\n\n**2019年 11月20号 至 2019年 12月14号 商业版代码更新内容**\n\n237、修复 Notification 缓存导致的崩溃<br/>\n236、修复高版本 Notification 的 classloader 问题<br/>\n\n**2019年 11月9号 至 2019年 11月19号 商业版代码更新内容**\n\n235、修复 Android 5.x 的 ART Hook <br/>\n234、修复 ART Hook 可能导致的死锁问题 <br/>\n\n**2019年 11月2号 至 2019年 11月8号 商业版代码更新内容**\n\n233、修复 WPS, 网易邮箱等在 Q 设备上崩溃的问题 <br/>\n232、修复汤姆猫跑酷在部分 Q 设备上崩溃的问题 <br/>\n231、修复 QQ 在部分 Q 设备上崩溃的问题 <br/>\n\n**2019年 10月25号 至 2019年 11月1号 商业版代码更新内容**\n\n230、修复克隆 Google Play 下载的 64位 App<br/>\n229、修复企业微信 <br/>\n228、修复 Telegram <br/>\n\n**2019年 10月8号 至 2019年 10月24号 商业版代码更新内容**\n\n227、修复 Android P 下 AppOspManager 的异常 <br/>\n226、添加 Android P 下 ActivityTaskManager 丢失的 Hook <br/>\n225、修复 Android P 下 Activity Top Resume 异常 <br/>\n224、支持在系统多用户模式下运行! <br/>\n\n**2019年 10月8号 商业版代码更新内容**\n\n223、修复Android P 以上内部 app 返回桌面异常的问题 <br/>\n222、64位分支支持 Android Q <br/>\n\n**2019年 9月20号 至 2019年 10月7号 商业版代码更新内容**\n\n221、修复安装在扩展插件中的 apk 无法正确显示图标和名称的问题 <br/>\n220、修复 twitter 无法打开的问题 <br/>\n219、正式兼容 Android Q 正式版! <br/>\n218、修复 Android Q 某些 Activity 无法再次打开的问题 <br/>\n217、初步适配 Android Q 正式版 <br/>\n216、修复数个64位分支的 Bug <br/>\n215、新增加支持32位插件的64位分支，该分支支持32位旧设备并且64位设备在32位插件的情况下可以支持32位旧应用 <br/>\n\n**2017年 12月 至 2019年 7月 30 日 商业版代码更新内容**\n\n214、改进 App 层提示信息 <br/>\n213、改进部分编码 <br/>\n212、修复从宿主向插件发送广播的方法 <br/>\n211、兼容最新版 gradle 插件 <br/>\n210、增加广播命名空间以避免多个使用 VA 技术的 App 互相干扰 <br/>\n209、修复 IMO 打不开的问题 <br/>\n208、修复部分 ContentProvider 找不到的问题 <br/>\n207、支持纯32位模式，以兼容老设备 <br/>\n206、初步支持纯64位模式，以应对8月份的谷歌市场的策略变化 <br/>\n205、适配到 Android Q beta4 <br/>\n204、修复了货拉拉无法安装的问题<br/>\n203、优化了64位apk的判定逻辑<br/>\n202、修复配置网络证书的 App 的联网<br/>\n201、重构组件状态管理<br/>\n200、优化 MIUI/EMUI ContentProvider 兼容性<br/>\n199、修复 StorageStats Hook<br/>\n198、修复快手无法登陆<br/>\n197、修复 YY 无法启动，更好的兼容插件化框架<br/>\n196、修复 Facebook 登陆<br/>\n195、修复 Google Play 下载的 App 无法找到 so 的问题(皇室战争)<br/>\n194、修复 split apk 支持<br/>\n193、修复 Youtube 无法启动<br/>\n192、修复优酷无法启动的问题<br/>\n191、修复多开时app间可能存在广播namespace冲突的BUG<br/>\n190、采用新的策略绕过Android P以后的Hidden Policy API<br/>\n189、适配Android Q(beta1)<br/>\n188、修复华为设备部分app无法识别存储的问题<br/>\n187、修复启动进程可能失败导致app无法运行的问题<br/>\n186、修复4.4设备部分native符号无法找到的问题<br/>\n185、修复部分设备WebView包名获取失败的问题<br/>\n184、修复Service细节处理的问题<br/>\n183、优化启动速度<br/>\n182、修复WebView在少数机型加载失败的情况<br/>\n181、修复Lib决策的问题<br/>\n180、修复部分华为机型无法读取内存卡的问题<br/>\n179、修复Service可能存在的问题<br/>\n178、允许根据intent判断Activity是否在外部启动<br/>\n177、修复部分机型上Gms和Google Play启动到了不正确的环境<br/>\n176、修复新实现的StaticBroadcast导致的兼容性问题<br/>\n175、修复Android P上无法使用apache.http.legacy的问题<br/>\n174、实现Native trace<br/>\n173、优化IO Redirect性能<br/>\n172、修复wechat部分时候出现网络无法连接的问题<br/>\n171、修复小概率process attach不正确的BUG<br/>\n170、开始下一阶段的ROADMAP<br/>\n169、解决Android P无法注册超过1000个广播导致的问题<br/>\n168、修复可能导致ANR的DeadLock<br/>\n167、修复部分app动态加载so失败的问题<br/>\n166、修复免安装运行环境下部分机型第一次打开出现黑屏的问题<br/>\n165、兼容适配多款主流的Android模拟器<br/>\n164、优化启动性能<br/>\n163、解决多个内存泄露问题<br/>\n162、修复IO Redirect优先级的问题<br/>\n161、修复8.0以下设备Messenger无网络连接的问题<br/>\n160、修复双开时外部app卸载时内部app仍然保留的BUG<br/>\n159、修复部分腾讯加固无法运行的问题<br/>\n158、修复Instagram无法登录Facebook的BUG<br/>\n157、修复进程小概率可能重复启动的BUG<br/>\n156、修复GET_PERMISSIONS没有获取权限的BUG<br/>\n155、修复startActivityIntentSender的BUG<br/>\n154、修复vivo设备部分Activity无法启动的问题<br/>\n153、修复app无法调用外部app选择文件的问题<br/>\n152、完善Android P的兼容<br/>\n151、兼容Android P的Google服务<br/>\n150、解决Messenger部分功能异常<br/>\n149、完善IO Redirect<br/>\n148、大量适配Gms, 修复Gms运行过程中进程无限重启的问题<br/>\n147、重新实现Service的运行机制<br/>\n146、完善64bit，提供了部分ROM配置64bit Engine权限的API<br/>\n145、修复了4.4设备上的Activity启动问题<br/>\n144、支持excludeFromRecent属性<br/>\n143、修复Instagram无法Facebook登录的问题<br/>\n142、修复Facebook第一次登录闪退的问题<br/>\n141、支持以64位模式运行Gms、Google play、Play game<br/>\n140、支持在双开/免安装运行的Google play中下载和安装app<br/>\n139、修复DownloadManager的BUG<br/>\n138、修复Google play返回上层时重启界面的BUG<br/>\n137、修复免安装模式下so决策问题<br/>\n136、优化构建脚本，便于引入项目<br/>\n135、修复移动MM SDK无法启动的问题<br/>\n134、修复微信摇一摇的BUG<br/>\n133、修复中兴设备不稳定的BUG<br/>\n132、支持ARM64下的IO Redirect<br/>\n131、修复USE_OUTSIDE模式下外部app更新时，内部app没有更新的BUG<br/>\n130、兼容最新Android 9.0(代号: pie) 及正式版之前发布的四个Preview版本<br/>\n129、兼容内置houdini的x86设备<br/>\n128、WindowPreview技术，使app启动与真实app达到一样的速度<br/>\n127、新的ActivityStack以提高app运行质量<br/>\n126、解决接入Atlas Framework的app运行异常的问题<br/>\n125、现在可以定义虚拟app返回桌面的具体行为<br/>\n124、现在双开模式下app随系统动态更新，不需要手动检查<br/>\n123、支持targetSdkVersion >= 26时仍可正常运行低版本的app<br/>\n122、兼容腾讯游戏管家的QDroid虚拟引擎 (beta)<br/>\n121、大量重构底层代码，大幅提升运行速度<br/>\n120、修复网易新闻分享到微博后无法取消的问题<br/>\n119、修复App自定义权限无法识别的问题<br/>\n118、修复墨迹天气app无法启动的问题<br/>\n117、修复部分政府app无法启动的问题<br/>\n116、API的变动详见代码<br/>\n115、修复三星系列应用的相互调用问题<br/>\n114、修复小米应用在非小米系统的账号问题<br/>\n113、修复分享/发送等第三方调用，返回页面不正常<br/>\n112、修复应用宝提示不能安装<br/>\n111、调用第三方app，对uri进行加密<br/>\n110、适配前刘海<br/>\n109、适配小米rom的hook<br/>\n108、适配努比亚录音问题<br/>\n107、内部悬浮窗权限控制<br/>\n106、优化自定义通知栏的处理<br/>\n105、修复Context的INCLUDE_CODE权限问题<br/>\n104、适配华为，oppo的角标<br/>\n103、修复百度视频的进程重启问题<br/>\n102、修复某些snapchat的无法启动问题<br/>\n101、适配autofill服务，例如piexl系列<br/>\n100、完善64位的io hook<br/>\n99、优化hook库的兼容性，加回dlopen<br/>\n98、64位扩展包的so移到32位主包。（jni代码改动后，在Run之前，请先build一次）<br/>\n97、通知栏改动：适配8.1的通知渠道；移除应用时，移除应用的全部通知<br/>\n96、兼容部分app，需要设置android:largeHeap=true<br/>\n95、修复ffmpeg库的视频无法播放问题<br/>\n94、优化横竖屏切换<br/>\n93、降低通过Intent.ACTION_VIEW调用外部Activity限制。<br/>\n92、兼容MG SDK<br/>\n91、64位支持还在开发阶段<br/>\n90、更新混淆配置app/proguard-rules.pro，必须加规则-dontshrink<br/>\n89、优化模拟机型，例如：模拟后，某些app不出现设备验证<br/>\n88、提高dex2oat兼容性<br/>\n87、优化模拟定位<br/>\n86、移除dlopen<br/>\n85、targetVersion可以改为26：支持targetVersion<23的app动态权限申请，支持targetVersion<24的文件Uri<br/>\n84、installPackage改为默认异步形式<br/>\n83、为了支持64位模式，换回aidl<br/>\n82、去掉SettingHandler现在可以动态设置特殊规则，规则会存储，不需要重复设置<br/>\n81、增加2个native_setup<br/>\n80、提高jobService兼容性<br/>\n79、ShortcutService相关：关联VASettings.ENABLE_INNER_SHORTCUT<br/>\n78、为了稳定性和运行效率，去掉上个版本的蓝牙，wifi，不声明权限的适配。<br/>\n77、增加app启动异常的广播Constants.ACTION_PROCESS_ERROR<br/>\n76、修复少数游戏横屏判断问题<br/>\n75、demo增加机型模拟<br/>\n74、适配vivo一个自定义权限（后台弹窗）VA是把一个历史acitivty返回前台，vivo需要这个权限。<br/>\n73、如果没有蓝牙权限，返回默认值（海外用）<br/>\n72、修复uid权限检查问题<br/>\n71、安全性更新，内部应用的文件权限控制<br/>\n70、提高内部app调用的兼容性，第三方登录，分享<br/>\n69、自动过滤没权限的外部ContentProvider<br/>\n68、增加功能：内部app的权限检查（默认关闭）<br/>\n67、机型模拟:Build类和build.prop<br/>\n66、提高对乐固加固的app兼容性<br/>\n65、适配三星wifimanager<br/>\n64、修复ipc框架一个参数传递问题（IPCMethod这个类必须更新）<br/>\n63、补全7.0通知栏的hook<br/>\n62、修正8.0动态快捷菜单的hook<br/>\n61、SettingHandler新增一个适配接口，主要适配各种游戏<br/>\n60、功能改动：google自动安装改为手动安装，避免第一次启动时间过久<br/>\n59、可以禁止访问外部某个ContentProvider<br/>\n58、适配华为桌面图标数量<br/>\n57、权限分类注释，标注可删除权限。<br/>\n56、增加双开模式的app跟随外部升级的开关。<br/>\n55、提高app的jni兼容性。<br/>\n54、提高对app集成其他插件框架的兼容性。<br/>\n53、增加设置接口，根据包名进行设置。<br/>\n52、增加Uri的适配范围，支持通过Uri分享和查看文件。<br/>\n51、修复一个在三星8.0的问题。<br/>\n50、提高对系统自带的app组件兼容性，更好兼容chrome webview，google service。<br/>\n49、提高ART稳定性<br/>\n48、增加相机适配范围<br/>\n47、支持内部App在8.0下的快捷方式管理<br/>\n46、修复exec异常<br/>\n45、提高稳定性（修复微信登录闪退）<br/>\n44、解决微信数据库崩溃问题<br/>\n43、修复部分4.4设备崩溃问题<br/>\n42、修复后台应用易被杀死，土豆视频黑屏，新浪微博无法打开，优酷两次返回无法退出。<br/>\n41、增加应用的保活机制，双开APP更不易被杀死。<br/>\n40、优化虚拟引擎启动性能。<br/>\n39、兼容了大部分的加固，第三方APP兼容性对比上一版提升40%+。<br/>\n38、修复某些rom下，快捷方式图标不正确<br/>\n37、兼容以前组件StubFileProvider<br/>\n36、适配部分新ROM的虚拟IMEI<br/>\n35、改善进程初始化代码，增加稳定性<br/>\n34、添加内部发送Intent.ACTION_BOOT_COMPLETED的广播，可以设置开关<br/>\n33、适配关联google play游戏，支持游戏使用google登录<br/>\n32、适配android O的google service框架<br/>\n31、适配android O 快捷方式<br/>\n30、适配耳机模式<br/>\n29、某些rom对intent的大小限制，demo添加缩放快捷方式图标代码<br/>\n28、修复多开情况下一个bug<br/>\n27、修复某些情况下MediaController的bug<br/>\n26、修复4.1.2的StubFileProvider报错<br/>\n25、分享的uri处理<br/>\n24、修复跨app调用Activity的回调<br/>\n23、前台服务的通知栏拦截开关<br/>\n22、附带doc<br/>\n21、完善VA内部的intent的CHOOSE回调<br/>\n20、Android O的通知栏适配2<br/>\n19、ipc框架优化, 提高判断binder的存活准确性<br/>\n18、jni的log开关 Android.mk:LOCAL_CFLAGS += -DLOG_ENABLE<br/>\n17、混淆配置<br/>\n16、Android O的通知栏适配<br/>\n15、修复部分app网络卡的问题<br/>\n14、适配 android 8.0的dl_open（jni加载）<br/>\n13、修复华为emui8.0的一个bug<br/>\n12、完善定位<br/>\n11、设置手机信息，imei伪装算法<br/>\n10、适配8.0某个功能（主要app：whatsapp）<br/>\n9、修复内部微信等应用，无法更新图片，视频<br/>\n8、demo增加安装监听，自动升级克隆模式的应用<br/>\n7、7.0的file provider适配<br/>\n6、增加了定位代码<br/>\n5、代码进行了架构优化<br/>\n4、与开源版不同的特征<br/>\n3、解决了微信被封的一些问题<br/>\n2、修复了部分机型兼容性<br/>\n1、修复了12个小BUG<br/>\n</details>\n\n\n\n\n\n\n']
think,ThinkPHP Framework ——十年匠心的高性能PHP框架,7745,https://github.com/top-think/think,6.1,['ThinkPHP 6.0\r\n===============\r\n\r\n> 运行环境要求PHP7.2+，兼容PHP8.1\r\n\r\n[官方应用服务市场](https://market.topthink.com) | [`ThinkAPI`——官方统一API服务](https://docs.topthink.com/think-api)\r\n\r\nThinkPHPV6.0版本由[亿速云](https://www.yisu.com/)独家赞助发布。\r\n\r\n## 主要新特性\r\n\r\n* 采用`PHP7`强类型（严格模式）\r\n* 支持更多的`PSR`规范\r\n* 原生多应用支持\r\n* 更强大和易用的查询\r\n* 全新的事件系统\r\n* 模型事件和数据库事件统一纳入事件系统\r\n* 模板引擎分离出核心\r\n* 内部功能中间件化\r\n* SESSION/Cookie机制改进\r\n* 对Swoole以及协程支持改进\r\n* 对IDE更加友好\r\n* 统一和精简大量用法\r\n\r\n## 安装\r\n\r\n~~~\r\ncomposer create-project topthink/think tp 6.0.*\r\n~~~\r\n\r\n如果需要更新框架使用\r\n~~~\r\ncomposer update topthink/framework\r\n~~~\r\n\r\n## 文档\r\n\r\n[完全开发手册](https://www.kancloud.cn/manual/thinkphp6_0/content)\r\n\r\n## 参与开发\r\n\r\n请参阅 [ThinkPHP 核心框架包](https://github.com/top-think/framework)。\r\n\r\n## 版权信息\r\n\r\nThinkPHP遵循Apache2开源协议发布，并提供免费使用。\r\n\r\n本项目包含的第三方源码和二进制文件之版权信息另行标注。\r\n\r\n版权所有Copyright © 2006-2021 by ThinkPHP (http://thinkphp.cn)\r\n\r\nAll rights reserved。\r\n\r\nThinkPHP® 商标和著作权所有者为上海顶想信息科技有限公司。\r\n\r\n更多细节参阅 [LICENSE.txt](LICENSE.txt)\r\n']
uni-app,A cross-platform framework using Vue.js,37792,https://github.com/dcloudio/uni-app,dev,['# uni-app\n\n<p>\n  简体中文 | <a href="https://github.com/dcloudio/uni-app/blob/dev/README_en-US.md">English</a>\n</p>\n\n`uni-app` 是一个使用 `Vue.js` 开发小程序、H5、App的统一前端框架。官网地址：[https://uniapp.dcloud.io](https://uniapp.dcloud.io)\n\n开发者使用 `Vue` 语法编写代码，`uni-app` 框架将其编译到 小程序（微信/支付宝/百度/字节跳动/QQ/快手/钉钉/小红书）、App（iOS/Android）、H5等多个平台，保证其正确运行并达到优秀体验。\n\n\n# uni-app的特点\n\n- 开发者和案例更多：HBuilder装机量800万台，开发者社区月活百万，70多个QQ微信群承载10万人。案例众多，uni统计月活超10亿（[详见](https://uniapp.dcloud.io/case)）\n- 性能更高（见[评测](https://juejin.im/post/5ca1736af265da30ae314248)）\n- 更丰富的周边生态，[插件市场](https://ext.dcloud.net.cn/)数千款插件\n- 提供比小程序原生开发更好的开发体验、更高的工程化效率\n- 跨端抹平度更完善，且各端特色发挥更灵活，可真正实现一套代码多端覆盖，无需各端多头维护升级\n- 权威认可：阿里小程序官方工具内置uni-app（[详见](https://docs.alipay.com/mini/ide/0.70-stable)）、腾讯课堂官方自制uni-app培训视频（[详见](https://ask.dcloud.net.cn/article/35640)）\n\n## 扫码体验\n\n开发一次，编译到14个平台。依次扫描14个二维码，亲自体验最全面的跨平台效果！\n\n<div align="center">\n  <img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-a90b5f95-90ba-4d30-a6a7-cd4d057327db/cf5727bc-fbe6-4d7e-bd92-e0d16e6f53b0.jpg"/>\n</div>\n\n*注： 某些平台不能提交简单demo，补充了一些其他功能。*\n\n## 快速开始\n\n`uni-app`支持通过`vue-cli`命令行、`HBuilderX`可视化界面两种方式快速创建项目：\n\n- [vue-cli命令行方式](https://uniapp.dcloud.io/quickstart?id=_2-通过vue-cli命令行)：不限IDE，适合对node熟悉的开发者，扩展阅读：[在vscode中开发uni-app](https://ask.dcloud.net.cn/article/36286)、[在 WebStorm 中开发 uni-app](https://ask.dcloud.net.cn/article/36307)\n- [HBuilderX可视化界面](https://uniapp.dcloud.io/quickstart?id=_1-通过-hbuilderx-可视化界面)：专用IDE，内置相关环境，开箱即用，开发效率更高。\n\n## 项目案例\n\n案例展示：[uniapp.dcloud.io/case](https://uniapp.dcloud.io/case)\n\n欢迎提交你的应用，[uni-app案例征集](https://github.com/dcloudio/uni-app/issues/6)\n\n## 需求墙\n\n`uni-app`计划支持的功能点，会在需求墙上进行展示，征集开发者的投票意见，[前往投票](https://dev.dcloud.net.cn/wish/)。\n\n## 更新日志\n\n`uni-app`一直保持高频的更新迭代，详见[正式版更新日志](https://uniapp.dcloud.net.cn/release)、[Alpha版更新日志](https://uniapp.dcloud.net.cn/release-note-alpha)。\n\n## 论坛\n\n由于`DCloud`有70多个QQ、微信群，官方已无法维护更多交流群。请开发者到官方论坛交流：[https://ask.dcloud.net.cn/explore/](https://ask.dcloud.net.cn/explore/) 。论坛提供了比issues更专业的工具服务。\n\n## 插件市场\n\n`uni-app`有丰富的插件生态，众多开发者提交了数千款组件、sdk、项目模板，详见：[https://ext.dcloud.net.cn/](https://ext.dcloud.net.cn/)\n\n除了众多三方ui库，官方还提供了uni-ui，在性能和跨端兼容方面有更强的优势。详见：[https://ext.dcloud.net.cn/plugin?id=55](https://ext.dcloud.net.cn/plugin?id=55)\n\n## 现有项目如何迁移到uni-app体系\n\n- 微信小程序转换uni-app指南及转换器：[https://ask.dcloud.net.cn/article/35786](https://ask.dcloud.net.cn/article/35786)\n- vue h5项目转换uni-app指南：[https://ask.dcloud.net.cn/article/36174](https://ask.dcloud.net.cn/article/36174)\n- mpvue 项目（组件）迁移指南、示例及资源汇总： [https://ask.dcloud.net.cn/article/34945](https://ask.dcloud.net.cn/article/34945)\n- wepy转uni-app转换器：[https://github.com/zhangdaren/wepy-to-uniapp](https://github.com/zhangdaren/wepy-to-uniapp)\n\n## 常见疑问\n\n- 问：不同端有不同的需求、不同的特色，登录支付也不一样，如何统一？\n- 答：差异部分使用条件编译。uni-app提供了灵活强大的[条件编译](https://uniapp.dcloud.io/platform)。可以完美处理复用部分和差异部分。真正一套工程源码。当业务升级时，不再需要多端维护。如果多端维护，经常会因为某些端的流量不大，就一直拖延无法让那些用户享受到最新服务。另外登录支付在客户端部分，已经被uni-app统一成一样的api了。\n\n\n- 问：多端是不是一种妥协，是否会造成性能下降？\n- 答：good question。多端且不影响性能，确实很难，但uni-app做到了。在h5端，它的性能、包体积与直接使用vue.js开发一致； 在小程序端，它的性能比大多数开发框架更好，uni-app底层自动处理的setdata差量同步机制，比开发者手动写setdata更好，就像使用vue.js更新界面比手动写js修改dom更高效一样； 在App，uni-app支持webview渲染和原生渲染双引擎，启用原生渲染时，css写法受限，但性能是很接近原生开发的效果的，在当前的手机环境下，千万日活以下的应用在App使用uni-app也不会遇到任何压力。当然也可以在已经做好的原生App中将部分页面改为uni-app实现; 此外，我们会把很多跨端处理放在编译期完成的，这样会减少对运行期的效率影响。\n\n\n- 问：不做多端，是不是不需要uni-app？\n- 答：不是。大量开发者用uni-app只做一个端，详见[案例](https://uniapp.dcloud.io/case)。对于开发者而言，一个优秀工具在手，做什么都不愁。\n\n- 问：uni-app以后会不会变更开源协议，转向收费？\n- 答：官方承诺永远不会变更开源协议。无论HBuilderX、uni-app、App，面向中国人永久免费。\n\n## 更多资料\n\n- 评测：[跨端开发框架深度横评之2020版](https://juejin.im/post/5e8e8d5a6fb9a03c6d3d9f42)\n- 评测：[深入测试一周，主流多端框架大比武](https://mp.weixin.qq.com/s/jIDEHfuMnED6HTfNgjsW4w)\n- [uni-app在App端和flutter、react native的比较](https://ask.dcloud.net.cn/article/36083)\n']
jfinal,JAVA WEB + ORM Framework,3191,https://github.com/jfinal/jfinal,master,['## JAVA 极速WEB+ORM框架 JFinal\n\n\nJFinal 是基于 Java 语言的极速 WEB + ORM 框架，其核心设计目标是开发迅速、代码量少、学习简单、功能强大、轻量级、易扩展、Restful。在拥有Java语言所有优势的同时再拥有 ruby、python 等动态语言的开发效率！为您节约更多时间，去陪恋人、家人和朋友 ;)\n\n#### JFinal有如下主要特点\n- MVC 架构，设计精巧，使用简单\n- 遵循 COC 原则，支持零配置，无 XML\n- 独创 Db + Record 模式，灵活便利\n- ActiveRecord 支持，使数据库开发极致快速\n- 极简、强大、高性能模板引擎 Enjoy，十分钟内掌握 90% 用法\n- 自动加载修改后的 Java 文件，开发过程中无需重启服务\n- AOP支持，拦截器配置灵活，功能强大\n- Plugin 体系结构，扩展性强\n- 多视图支持，支持 Enjoy、FreeMarker、JSP\n- 强大的 Validator 后端校验功能\n- 功能齐全，拥有传统 SSH 框架的绝大部分核心功能\n- 体积小仅 832 KB，并且无第三方依赖\n\n**JFinal 极速开发微信公众号欢迎你的加入: JFinal**\n\n## Maven 坐标\n\n```java\n<dependency>\n    <groupId>com.jfinal</groupId>\n    <artifactId>jfinal</artifactId>\n    <version>5.0.3</version>\n</dependency>\n```\n\n## 以下是JFinal实现Blog管理的示例：\n\n**1. 控制器(支持 Enjoy、JSP、JSON等等以及自定义视图渲染)**\n\n```java\n@Before(BlogInterceptor.class)\npublic class BlogController extends Controller {\n\n    @Inject\n    BlogService service;\n\n    public void index() {\n        set("blogPage", service.paginate(getInt(0, 1), 10));\n        render("blog.html");\n    }\n\n    public void add() {\n    }\n\n    @Before(BlogValidator.class)\n    public void save() {\n        getModel(Blog.class).save();\n        redirect("/blog");\n    }\n\n    public void edit() {\n        set("blog", service.findById(getInt()));\n    }\n\n    @Before(BlogValidator.class)\n    public void update() {\n        getModel(Blog.class).update();\n        redirect("/blog");\n    }\n\n    public void delete() {\n        service.deleteById(getInt());\n        redirect("/blog");\n    }\n}\n```\n\n**2.Service所有业务与sql全部放在Service层**\n\n```java\npublic class BlogService {\n\n    private Blog dao = new Blog().dao();\n    \n    public Page<Blog> paginate(int pageNumber, int pageSize) {\n        return dao.paginate(pageNumber, pageSize, "select *", "from blog order by id asc");\n    }\n    \n    public Blog findById(int id) {\n        return dao.findById(id);\n    }\n    \n    public void deleteById(int id) {\n        dao.deleteById(id);\n    }\n}\n```\n\n**3.Model(无xml、无annotaion、无attribute)**\n\n```java\npublic class Blog extends Model<Blog> {\n    \n}\n```\n\n**4.Validator(API引导式校验，比xml校验方便N倍，有代码检查不易出错)**\n\n```java\npublic class BlogValidator extends Validator {\n    protected void validate(Controller controller) {\n        validateRequiredString("blog.title", "titleMsg", "请输入Blog标题!");\n        validateRequiredString("blog.content", "contentMsg", "请输入Blog内容!");\n    }\n\n    protected void handleError(Controller controller) {\n        controller.keepModel(Blog.class);\n    }\n}\n```\n\n**5.拦截器(在此demo中仅为示例，本demo不需要此拦截器)**\n\n```java\npublic class BlogInterceptor implements Interceptor {\n    public void intercept(Invocation inv) {\n        System.out.println("Before invoking " + inv.getActionKey());\n        inv.invoke();\n        System.out.println("After invoking " + inv.getActionKey());\n    }\n}\n```\n\n## 更多支持\n- JFinal 官方网站  [https://jfinal.com](https://jfinal.com/) \n- 扫码关注官方微信公众号，第一时间尊享最新动向  \n\n![JFinal](https://jfinal.com/assets/img/jfinal_weixin_service_qr_code_150.jpg) \n\n\n\n\n\n']
actix,Actor framework for Rust.,7748,https://github.com/actix/actix,master,['actix/README.md']
ET,Unity3D Client And C# Server Framework,6794,https://github.com/egametang/ET,master,['# English: please use your browser to translate to english  \n\n# 熊猫的课程：网络游戏架构设计上线啦，有需要请加QQ:80081771\n\n# __讨论QQ群 : 474643097__  \n\n# [ET论坛](https://et-framework.cn)  \n\n# [ET商店](https://github.com/egametang/ET/tree/master/Store)  \n\n# [ET6.0视频教程上线](https://edu.uwa4d.com/course-intro/1/375)   \n\n# [运行指南](https://github.com/egametang/ET/blob/master/Book/1.1%E8%BF%90%E8%A1%8C%E6%8C%87%E5%8D%97.md)  \n\n# [分析器说明](https://www.yuque.com/u28961999/yms0nt/)\n\n# Benchmark\n100W Ping Pong 平均耗时4秒左右，平均每秒收发20W的消息。这个网络性能远远超过主线程的需求，大家可以自己测试一下，测试方法：\nUnity Menu->ServerTools select Benchmark, Start Watcher。然后在Logs目录，打开Debug日志等一会所有连接完成就能看到下面的日志了。  \n2022-12-02 22:19:48.9837 (C2G_BenchmarkHandler.cs:13) benchmark count: 1000001  \n2022-12-02 22:19:53.4621 (C2G_BenchmarkHandler.cs:13) benchmark count: 2000001  \n2022-12-02 22:19:57.0416 (C2G_BenchmarkHandler.cs:13) benchmark count: 3000001  \n2022-12-02 22:20:00.6186 (C2G_BenchmarkHandler.cs:13) benchmark count: 4000001  \n2022-12-02 22:20:04.1384 (C2G_BenchmarkHandler.cs:13) benchmark count: 5000001  \n2022-12-02 22:20:08.2236 (C2G_BenchmarkHandler.cs:13) benchmark count: 6000001  \n2022-12-02 22:20:12.2842 (C2G_BenchmarkHandler.cs:13) benchmark count: 7000001  \n2022-12-02 22:20:15.8544 (C2G_BenchmarkHandler.cs:13) benchmark count: 8000001  \n2022-12-02 22:20:19.4085 (C2G_BenchmarkHandler.cs:13) benchmark count: 9000001  \n2022-12-02 22:20:24.2969 (C2G_BenchmarkHandler.cs:13) benchmark count: 10000001  \n2022-12-02 22:20:41.1448 (C2G_BenchmarkHandler.cs:13) benchmark count: 11000001  \n2022-12-02 22:20:44.7174 (C2G_BenchmarkHandler.cs:13) benchmark count: 12000001  \n2022-12-02 22:20:48.3188 (C2G_BenchmarkHandler.cs:13) benchmark count: 13000001  \n2022-12-02 22:20:51.7793 (C2G_BenchmarkHandler.cs:13) benchmark count: 14000001  \n2022-12-02 22:20:55.3379 (C2G_BenchmarkHandler.cs:13) benchmark count: 15000001  \n2022-12-02 22:20:58.8810 (C2G_BenchmarkHandler.cs:13) benchmark count: 16000001  \n2022-12-02 22:21:02.5156 (C2G_BenchmarkHandler.cs:13) benchmark count: 17000001  \n2022-12-02 22:21:06.0132 (C2G_BenchmarkHandler.cs:13) benchmark count: 18000001  \n2022-12-02 22:21:09.5320 (C2G_BenchmarkHandler.cs:13) benchmark count: 19000001  \n\n\n# ET7 发布! 18岁亦菲\n1. 调整结构，机器人工程与服务器合并，更易使用，一个进程同时可以做server，也能创建机器人，真正的ALL IN ONE! -- 已实现  \n2. 客户端跟服务端合并，服务端代码全部放在了客户端，客户端中可以带一个服务端，开发超级方便，服务端发布的时候可以选择发布成Dotnet也可以发布成UnityServer，终极All IN ONE  -- 已实现  \n3. Entity可视化，客户端跟服务端所有的Entity都实现了可视化，开启ENABLE_CODES宏，运行游戏，查看Hierarchy面板，展开Init/Global/Scene(Process)即可看到 -- 已实现  \n4. 因为所有代码都在Unity中，所以开发ET插件变得非常容易，直接使用Unity导入导出即可  -- 已实现  \n5. 增加软路由，可以防各种网络攻击而不影响正常玩家，网游必备！-- 已实现  \n6. 各种事件跟网络消息订阅带上DomainSceneType，更精确，更不容易出错 -- 已实现  \n7. sj兄弟添加了各种分析器，分析器保证了写出的代码必须符合ET规范，否则编译不通过！（这点ET6也增加上了） -- 已实现  \n8. ET7集成了huatuo热更新库。 注意！(不要混淆客户端热更新跟服务端热更新，服务端热更新，ET一直都有)  \n9. 网络改成独立线程，序列化反序列化都在网络线程处理，主线程压力大大减轻。并且重新整理了网络层代码，更优美了  \n10. 集成Unity.Mathematic数学库，逻辑层客户端跟服务端都使用这一套数学库，这样服务端跟客户端完全统一了  \n11. ENABLE_CODES模式下拆分成4个程序集，解决分析器失效的问题  \n12. Game管理的Singleton增加ISingletonUpdate跟ISingletonLateUpdate接口，实现相应的接口即可执行对应的Update跟LateUpdate方法，Game类解除了跟EventSystem等单间类的耦合关系  \n13. Actor消息判断如果是发向自己的进程则不用通过网络，直接处理即可，大大提升性能  \n\n\n# ET6 发布！ET6相比ET5有巨大变化，可以说是凤姐变亦菲，6.0拥有如下惊人的特点\n1. 客户端逻辑全热更新（基于ILRuntime），没有不能更的部分  \n2. 客户端服务端均可热重载，开发不用重启客户端服务端即可修改逻辑代码，开发极其方便  \n3. 机器人框架，ET6的客户端的逻辑跟表现分离，机器人程序直接共享利用客户端的逻辑层代码做压测，只需要极少代码即可做出机器人，方便压测服务端  \n4. 测试用例框架，利用客户端的逻辑层代码写单元测试，每个单元测试都是完整的游戏环境，无需各种恶心的mock  \n5. AI框架，比行为树更加方便，写AI比写UI还简单  \n6. 新的服务端架构，极其优美  \n7. 内外网kcp网络，性能强劲，搭配软路由模块，可以防各种网络攻击  \n\n# ET开发的商业mmo项目千古风流成功上线，64核128G内存的单服单物理机1.5W在线（实际线上策划为了生态限制为单服6000人同时在线，6000人的话cpu消耗约为30%）。为了堆栈行号正常，线上跑得是Debug版，如果使用Release版开启优化，性能还能翻一倍，达到单物理机3W在线！上线5个月来十分稳定。千古风流使用了ET框架从零开发，用时两年，这个开发速度可以说无人出其右。千古风流的成功上线证明了ET具备开发任何大型游戏的能力，开发速度，开发效率都令人叹为观止！千古风流使用到的客户端服务器技术：  \n1. 动态副本跟分线，按需分配，用完回收  \n2. 分线合线，分线人数较少会把多条线合并。合线功能基本上其它mmo游戏很少见到  \n3. 客户端服务端场景无缝切换，也就是无缝大世界技术  \n4. 跨服副本，跨服战场  \n5. 前后端一体化，利用客户端代码开发服务器压测机器人，4台24核机器轻松模拟1W人做任务  \n6. 千古风流各种ai设计，使用ET的全新开发的ai框架，使ai开发简单到跟写ui一样简单  \n7. 测试用例框架，大部分重要系统，千古风流都写了测试用例，跟市面上的测试用例不同，每个千古风流的测试用例都是一个完整的游戏环境，针对协议级别，不需要搞各种接口去mock。写起来非常快速。  \n8. 九宫格的aoi实现，动态调整看见的玩家，降低服务器负载  \n9. 防攻击，千古风流开发了软路由功能，即使攻击也只能攻击到软路由，一旦被攻击，玩家客户端发现几秒钟无响应，即可动态切换到其它软路由，用户几乎无感知。整个过程客户端网络连接不断开，数据不丢失。  \n10. 还有很多很多，这里就不啰嗦了  \n\n\n# ET的介绍：\nET是一个开源的游戏客户端（基于unity3d）服务端双端框架，服务端是使用C# .net core开发的分布式游戏服务端，其特点是开发效率高，性能强，双端共享逻辑代码，客户端服务端热更机制完善，同时支持可靠udp tcp websocket协议，支持服务端3D recast寻路等等  \n\n# ET的功能：\n### 1.可用VS单步调试的分布式服务端，N变1  \n一般来说，分布式服务端要启动很多进程，一旦进程多了，单步调试就变得非常困难，导致服务端开发基本上靠打log来查找问题。平常开发游戏逻辑也得开启一大堆进程，不仅启动慢，而且查找问题及其不方便，要在一堆堆日志里面查问题，这感觉非常糟糕，这么多年也没人解决这个问题。ET框架使用了类似守望先锋的组件设计，所有服务端内容都拆成了一个个组件，启动时根据服务器类型挂载自己所需要的组件。这有点类似电脑，电脑都模块化的拆成了内存，CPU，主板等等零件，搭配不同的零件就能组装成一台不同的电脑，例如家用台式机需要内存，CPU，主板，显卡，显示器，硬盘。而公司用的服务器却不需要显示器和显卡，网吧的电脑可能不需要硬盘等。正因为这样的设计，ET框架可以将所有的服务器组件都挂在一个服务器进程上，那么这个服务器进程就有了所有服务器的功能，一个进程就可以作为整组分布式服务器使用。这也类似电脑，台式机有所有的电脑组件，那它也完全可以当作公司服务器使用，也可以当作网吧电脑。  \n### 2.随意可拆分功能的分布式服务端，1变N  \n分布式服务端要开发多种类型的服务器进程，比如Login server，gate server，battle server，chat server friend server等等一大堆各种server，传统开发方式需要预先知道当前的功能要放在哪个服务器上，当功能越来越多的时候，比如聊天功能之前在一个中心服务器上，之后需要拆出来单独做成一个服务器，这时会牵扯到大量迁移代码的工作，烦不胜烦。ET框架在平常开发的时候根本不太需要关心当前开发的这个功能会放在什么server上，只用一个进程进行开发，功能开发成组件的形式。发布的时候使用一份多进程的配置即可发布成多进程的形式，是不是很方便呢？随便你怎么拆分服务器。只需要修改极少的代码就可以进行拆分。不同的server挂上不同的组件就行了嘛！  \n### 3.跨平台的分布式服务端  \nET框架使用C#做服务端，现在C#是完全可以跨平台的，在linux上安装.netcore，即可，不需要修改任何代码，就能跑起来。性能方面，现在.netcore的性能非常强，比lua，python，js什么快的多了。做游戏服务端完全不在话下。平常我们开发的时候用VS在windows上开发调试，发布的时候发布到linux上即可。ET框架还提供了一键同步工具，打开unity->tools->rsync同步，即可同步代码到linux上  \n```bash\n./Run.sh Config/StartConfig/192.168.12.188.txt \n```\n即可编译启动服务器。  \n### 4.提供协程支持  \nC#天生支持异步变同步语法 async和await，比lua，python的协程强大的多，新版python以及javascript语言甚至照搬了C#的协程语法。分布式服务端大量服务器之间的远程调用，没有异步语法的支持，开发将非常麻烦。所以java没有异步语法，做单服还行，不适合做大型分布式游戏服务端。例如：  \n\n```c#\n// 发送C2R_Ping并且等待响应消息R2C_Ping\nR2C_Ping pong = await session.Call(new C2R_Ping()) as R2C_Ping;\nLog.Debug("收到R2C_Ping");\n\n// 向mongodb查询一个id为1的Player，并且等待返回\nPlayer player = await Game.Scene.GetComponent<DBProxyComponent>().Query<Player>(1);\nLog.Debug($"打印player name: {player.Name}")\n```\n可以看出，有了async await，所有的服务器间的异步操作将变得非常连贯，不用再拆成多段逻辑。大大简化了分布式服务器开发  \n### 5.提供类似erlang的actor消息机制  \nerlang语言一大优势就是位置透明的消息机制，用户完全不用关心对象在哪个进程，拿到id就可以对对象发送消息。ET框架也提供了actor消息机制，实体对象只需要挂上MailBoxComponent组件，这个实体对象就成了一个Actor，任何服务器只需要知道这个实体对象的id就可以向其发送消息，完全不用关心这个实体对象在哪个server，在哪台物理机器上。其实现原理也很简单，ET框架提供了一个位置服务器，所有挂载MailBoxComponent的实体对象都会将自己的id跟位置注册到这个位置服务器，其它服务器向这个实体对象发送消息的时候如果不知道这个实体对象的位置，会先去位置服务器查询，查询到位置再进行发送。\n### 6.提供服务器不停服动态更新逻辑功能  \n热更是游戏服务器不可缺少的功能，ET框架使用的组件设计，可以做成守望先锋的设计，组件只有成员，无方法，将所有方法做成扩展方法放到热更dll中，运行时重新加载dll即可热更所有逻辑。\n### 7.客户端使用C#热更新，热更新一键切换  \n可以使用csharp.lua或者ILRuntime稍加改造即可做客户端热更。再也不用使用狗屎lua了，客户端可以实现所有逻辑热更新，包括协议，config，ui等等。  \n### 8.客户端热重载  \n开发不用重启客户端即可修改客户端逻辑代码，开发极其方便  \n\n### 9.客户端服务端用同一种语言，并且共享代码  \n下载ET框架，打开服务端工程，可以看到服务端引用了客户端很多代码，通过引用客户端代码的方式实现了双端共享代码。例如客户端服务端之间的网络消息两边完全共用一个文件即可，添加一个消息只需要修改一遍。  \n### 10.KCP ENET TCP Websocket协议无缝切换  \nET框架不但支持TCP，而且支持可靠的UDP协议（ENET跟KCP），ENet是英雄联盟所使用的网络库，其特点是快速，并且网络丢包的情况下性能也非常好，这个我们做过测试TCP在丢包5%的情况下，moba游戏就卡的不行了，但是使用ENet，丢包20%仍然不会感到卡。非常强大。框架还支持使用KCP协议，KCP也是可靠UDP协议，据说比ENET性能更好，使用kcp请注意，需要自己加心跳机制，否则20秒没收到包，服务端将断开连接。协议可以无缝切换。  \n### 11. 3D Recast寻路功能  \n可以Unity导出场景数据，给服务端做recast寻路。做MMO非常方便，demo演示了服务端3d寻路功能  \n### 12. 服务端支持repl，也可以动态执行一段新代码  \n这样就可以打印出进程中任何数据，大大简化了服务端查找问题的难度，开启repl方法，直接在console中输入repl回车即可进入repl模式  \n### 13.提供客户端机器人框架支持  \n几行代码即可创建机器人登录游戏。机器人压测轻而易举，机器人跟正常的玩家完全一样，上线前用机器人做好压测，大大降低上线崩溃几率   \n### 14.AI框架  \nET的AI框架让AI编写比UI还简单     \n### 15.测试用例框架  \n跟市面上的测试用例不同，ET的测试用例都是一个完整的游戏环境，针对协议级别，不需要搞各种接口去mock。写起来非常快速    \n\n### 16.还有很多很多功能，我就不详细介绍了  \na.及其方便检查CPU占用和内存泄漏检查，vs自带分析工具，不用再为性能和内存泄漏检查而烦恼  \nb.使用NLog库，打log及其方便，平常开发时，可以将所有服务器log打到一个文件中，再也不用一个个文件搜索log了  \nc.统一使用Mongodb的bson做序列化，消息和配置文件全部都是bson或者json，并且以后使用mongodb做数据库，再也不用做格式转换了。  \nd.提供一个同步工具  \n\nET框架是一个强大灵活的分布式服务端架构，完全可以满足绝大部分大型游戏需求。使用这套框架，客户端开发者就可以自己完成双端开发，节省大量人力物力，节省大量沟通时间。  \n\n  \n相关网站:  \n[ET论坛](https://et-framework.cn)  \n\n群友分享：  \n[行为树与fgui分支(Duke Chiang开发维护)](https://github.com/DukeChiang/ET.git)   \n[ET学习笔记系列(烟雨迷离半世殇写)](https://www.lfzxb.top/)   \n[图形渲染与ET学习笔记(咲夜詩写)](https://acgmart.com/)   \n[框架服务端运行流程](http://www.cnblogs.com/fancybit/p/et1.html)  \n[ET启动配置](http://www.cnblogs.com/fancybit/p/et2.html)  \n[框架demo介绍](http://www.jianshu.com/p/f2ea0d26c7c1)  \n[linux部署](http://gad.qq.com/article/detail/35973)  \n[linux部署，mongo安装，资源服搭建](http://www.tinkingli.com/?p=25)  \n[ET框架心跳包组件开发](http://www.tinkingli.com/?p=111)  \n[ET框架Actor使用与心得](http://www.tinkingli.com/?p=117)  \n[基于ET框架和UGUI的简单UI框架实现（渐渐写）](http://www.tinkingli.com/?p=124)  \n[ET框架笔记 (笑览世界写)](http://www.tinkingli.com/?p=76)  \n[ET框架如何用MAC开发](http://www.tinkingli.com/?p=147)  \n[ET的动态添加事件和触发组件](http://www.tinkingli.com/?p=145)  \n\n商业项目:  \n1. [千古风流](https://www.qiangu.com/)  \n2. [神选誓约](https://www.taptap.cn/app/248095)  \n3. [魔法点点2](https://www.taptap.com/app/227804)  \n4. [养不大](https://www.taptap.com/app/71064)  \n5. 天天躲猫猫2（ios2019春节下载排行19）  \n6. [牛虎棋牌](https://gitee.com/ECPS_admin/PlanB)  \n7. [五星麻将](https://github.com/wufanjoin/fivestar)  \n\n群友demo：  \n1. [斗地主（客户端服务端）](https://github.com/Viagi/LandlordsCore)  \n2. [背包系统](https://gitee.com/ECPS_admin/planc)  \n3. [移动端渲染技术demo](https://github.com/Acgmart/Sekia_TechDemo)  \n\n\n\n视频教程：  \n[字母哥ET6.0教程](https://edu.uwa4d.com/course-intro/1/375)   \n[肉饼老师主讲](http://www.taikr.com/my/course/972)  \n[官剑铭主讲](https://edu.manew.com/course/796)  \n[ET新手教程-初见主讲](https://pan.baidu.com/s/1a5-j2R5QctZpC9n3sMC9QQ) 密码: ru1j  \n[ET新手教程新版-初见主讲](https://www.bilibili.com/video/av33280463/?redirectFrom=h5)  \n[ET在Mac上运行指南-L主讲](https://pan.baidu.com/s/1VUQbdd1Yio7ULFXwAv7X7A) 密码: l3e3  \n[ET框架系列教程-烟雨主讲-6.0版本](https://space.bilibili.com/33595745/favlist?fid=759596845&ftype=create)  \n\n.net core 游戏资源分享  \n[各种dotnet core项目收集](https://github.com/thangchung/awesome-dotnet-core)  \n\n__讨论QQ群 : 474643097__\n\n\n# 支付宝捐赠  \n![使用支付宝对该项目进行捐赠](https://github.com/egametang/ET/blob/master/Book/donate.png)\n\n# 友情链接  \n[Box2DSharp](https://github.com/Zonciu/Box2DSharp)  box2d的C#移植版，性能很强  \n[xasset](https://github.com/xasset/xasset) 致力于为 Unity 项目提供了一套 精简稳健 的资源管理环境  \n[QFramework](https://github.com/liangxiegame/QFramework) Your first K.I.S.S Unity3d Framework  \n[ET UI框架](https://github.com/zzjfengqing/ET-EUI) 字母哥实现的UI框架，ET风格，各种事件分发  \n[ETCsharpToXLua](https://github.com/zzjfengqing/ETCsharpToXLua) 字母哥使用csharp.lua实现的ET客户端热更新  \n[et-6-with-ilruntime](https://www.lfzxb.top/et-6-with-ilruntime) 烟雨使用ILRuntime实现的ET客户端热更新  \n[Luban](https://github.com/focus-creative-games/luban) 适用于大中型项目的游戏配置解决方案  \n\n']
tx-lcn,LCN distributed transaction framework, compatible with dubbo, spring cloud and Motan framework, supports various relational databases,4189,https://github.com/codingapi/tx-lcn,dev6.0,['# Distributed Transaction Framework - LCN (6.0.0)\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/codingapi/tx-lcn/blob/master/LICENSE)\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.codingapi.txlcn/tx-lcn/badge.svg?style=plastic)](https://maven-badges.herokuapp.com/maven-central/com.codingapi.txlcn/tx-lcn)\n[![codecov](https://codecov.io/gh/codingapi/tx-lcn/branch/dev6.0/graph/badge.svg)](https://codecov.io/gh/codingapi/tx-lcn)\n[![Build Status](https://travis-ci.org/codingapi/tx-lcn.svg?branch=dev6.0)](https://travis-ci.org/codingapi/tx-lcn)\n\n## 文档\n\n见5.x版本文档见 [https://www.codingapi.com/docs/txlcn-preface/](https://www.codingapi.com/docs/txlcn-preface/)\n\n## 参与方式\n* 了解原理 [LCN分布式事务框架](LCN分布式事务框架-20200102.pdf)\n* 了解代码\n* 参与任务 [issues](https://github.com/codingapi/tx-lcn/issues) \n\n## 代码提交步骤\n* fork该项目地址,并更新代码\n* 认领任务或发布问题\n* 维护代码编写测试\n* 发起合并请求,关联issues\n* 代码审核通过合并到仓库中 \n  \n## 代码结构\n* example:                  *示例与测试相关的代码*    \n* starter-txlcn-protocol:   *txlcn-protocol模块的starter*   \n* starter-txlcn-tc:        *txlcn-tc模块的starter* \n* txlcn-p6spy:             *p6spy-解析sql与jdbc的event定义*\n* txlcn-protocol:          *通讯协议制度* \n* txlcn-tc:                 *TC事务客户端模块* \n* txlcn-tm:                 *TM事务控制端* \n\n## 从0到1实现分布式事务 公开课\n\n### 第一节课     \n分布式事务从0到1-认识分布式事务    \n[原文](https://www.codingapi.com/docs/txlcn-lesson01/) [B站](https://www.bilibili.com/video/av80626430/)  \n### 第二节课\n分布式事务从0到1-了解TX-LCN原理    \n[原文](https://www.codingapi.com/docs/txlcn-lesson02/)  [B站-原理一](https://www.bilibili.com/video/av80676649)  [B站-原理二](https://www.bilibili.com/video/av80676836)\n\nB站地址   \nhttps://space.bilibili.com/386239614  \n公众号(通过公众号加群):    \n![CODINGAPI分享者](qrcode.jpg)\n\n## 项目运行步骤\n \n依赖的环境:    \nmysql redis      \n\n数据库脚步:   \n[sql](./sql/init.sql)   \n\n启动步骤:    \n1、配置TM的参数信息，然后启动TM。   \n2、配置example-tc example-tc-2信息，启动他们。   \n3、测试example-tc，接口地址为 http://localhost:8090/save?name=123    \n\n']
avalon,an elegant efficient express mvvm framework,5821,https://github.com/RubyLouvre/avalon,master,['![](./components/logo.png)\n-------\n\n<p align="center">\n<a href="https://badge.fury.io/js/avalon2">\n<img src="https://badge.fury.io/js/avalon2.svg" alt="npm version" height="18">\n</a>\n<a href="https://travis-ci.org/RubyLouvre/avalon">\n<img src="https://travis-ci.org/RubyLouvre/avalon.svg?branch=master" alt="Travis CI Status"/>\n</a>\n<a href="https://codeclimate.com/github/RubyLouvre/avalon"><img src="https://codeclimate.com/github/RubyLouvre/avalon/badges/gpa.svg" /></a>\n\n<a href="https://codecov.io/gh/RubyLouvre/avalon">\n  <img src="https://codecov.io/gh/RubyLouvre/avalon/branch/master/graph/badge.svg" alt="Codecov" />\n</a>\n\n<a href="https://github.com/RubyLouvre/avalon">\n<img src="https://camo.githubusercontent.com/fc56303af12c023343f338a762b6bfb2a5f1e4dc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e7376673f7374796c653d666c6174" alt="LICENSE" data-canonical-src="https://img.shields.io/badge/license-MIT-green.svg?style=flat" style="max-width:100%;"></a>\n<a href="https://saucelabs.com/beta/builds/7c80ed0dd7b34c55815d65a132ff0226"><img src="https://saucelabs.com/buildstatus/rubylouvre" alt="Build Status"></a>\n</p>\n<p align="center">\n<a href="https://saucelabs.com/beta/builds/7c80ed0dd7b34c55815d65a132ff0226"><img src="https://saucelabs.com/browser-matrix/rubylouvre.svg" alt="Browser Matrix"></a>\n</p>\n\n```javascript\nnpm install avalon2\n```\n\nes6调用方式\n```\nimport * as avalon from \'avalon2\'\n```\n\n### [English tutorials](https://github.com/RubyLouvre/avalon/tree/master/tutorials)\n\n### [avalon cookbook](https://github.com/RubyLouvre/avalon/blob/2.1.8/avalon%20cookbook.pdf)\n\n这是基于官网制成的电子书,方便大家离线阅览\n\n### [avalon2官网](http://avalonjs.coding.me/)\n这是基于gitbook制作的,对移动端支持很好,大家上班或睡觉时,可以过目一下.\n\n### [avalon2+webpack2手脚架](https://github.com/sayll/avalon-webpack-start)\n\n### [QuickStart](https://github.com/crazyliuzc/webpack-avalon2-SPA-seed.git)\n大家期望已久的avalon2+mmRouter+各种组件的综合示例,不断完善中\n\n### [UI库1](http://weeksun23.github.io/AvalonBootstrap/index.html#overview)\n\n### [UI库2](https://github.com/aLoNeIT/flyUI)\n\n### [avalon 单页后台管理系统框架：webpack+avalon+自定义avalon-router组件+jquery+bootstrap](https://github.com/Levan-Du/avalon-spa-app)\n\n### [avalon2 SPA脚手架 MS-BUS](https://github.com/xxapp/ms-bus)\n一个 SPA 的脚手架（模块组织加载方式、单页面局部刷新技术、路由控制、后端数据的接入与模拟等实践/完整的增删改查示例）\n\n### [avalon2 组件库 ANE](https://github.com/xxapp/ane)\n一个基于 bootstrap 的组件库，有用于数据展示的 table 组件、用于数据提交的 form 组件、用于消息提示的 message 与 notification 组件、dialog 组件和用户输入组件（input/textarea/checkbox/radio/select/datepicker/timepicker/upload）等，并且还在不断完善中\n\n---\n\nCDN: `https://unpkg.com/avalon2@2.2.8/dist/avalon.js`\n\n用法见[https://unpkg.com/#/](https://unpkg.com/#/)\n\n 请不要用2.0s这个最古老的版本\n\n### 谁在用avalon\n\n<img src=\'http://avalonjs.coding.me/styles/logos.jpg\' width=\'639\' height=\'477\' />\n\n`欢迎大家提交logo与官网链接`\n\n\n### 超高性能\n\n<img src="http://avalonjs.coding.me/styles/performance.jpg" width=\'770\' height=\'451\' />\n\n\n\n\n\n\n测试页面 perf目录下的index.html, index1.4.html, index-ng.html, index-vue.html,index-react.html\n\n亮点,如果页面上存在一个大表格或列表,其他框架会在浏览器加载页面时会卡一下(白屏),\n而avalon则平缓多了\n\nthanks http://charts.udpwork.com/\n\n### 支持后端渲染\n\navalon2.1.5起支持后端渲染,详见[这里](https://github.com/RubyLouvre/avalon-server-render-example)\n\n\n### [avalon2 学习教程(包括组件)](https://segmentfault.com/u/situzhengmei/articles)\n\n\nHTML指南\n\n属性值必须用双引号括起,标签名必须小写, 标签必须被关闭（正常关闭，或自关闭）\n\n组件, 在兼容IE6-8的情况下,组件必须用wbr, xmp做容器\n\n组件名如果不充当标签名,可以不以ms-开头.\n\n绑定属性建议使用短指令方式定义,即ms-if可以改成:if\n\nms-duplex指令除了change, rebounce过滤器外,不建议使用其他过滤器做格式化,\n建议添加ms-input, ms-change在里面处理\n\nms-duplex不支持对简单数组的元素的处理, 即`vm.arr = [1,2,4]`,\n`<input :for="el in @arr" duplex="el"`\n\n\nms-important与ms-controller对应的vm.$id一个页面上只能用一次,不能存在多个同名的ms-controller.\n     ms-important由于不继承上级的$element与$render,每次只更新它所在的区域,善用它能大大提高性能\n```html\n   <div ms-controller=\'test\'>{{@aaa}}</div>\n   <div ms-controller=\'test\'>{{@bbb}}<!--test已经使用了1次!会导致程序出错--></div>\n   <div ms-important=\'test\'>{{@bbb}}<!--test已经使用了2次!会导致程序出错--></div>\n```\n']
amazeui,Amaze UI, a mobile-first and modular front-end framework.,13512,https://github.com/amazeui/amazeui,master,['<h1><a href="http://amazeui.org/" title="Amaze UI 官网"><img style="float: left" width="240" src="https://raw.githubusercontent.com/allmobilize/amazeui/master/vendor/amazeui/amazeui-b.png" alt="Amaze UI Logo"/></a></h1>\n\n[![Bower version](https://img.shields.io/bower/v/amazeui.svg?style=flat-square)](https://github.com/amazeui/amazeui)\n[![NPM version](https://img.shields.io/npm/v/amazeui.svg?style=flat-square)](https://www.npmjs.com/package/amazeui)\n[![Build Status](https://img.shields.io/travis/amazeui/amazeui.svg?style=flat-square)](https://travis-ci.org/amazeui/amazeui)\n[![Dependency Status](https://img.shields.io/david/amazeui/amazeui.svg?style=flat-square)](https://david-dm.org/amazeui/amazeui)\n[![devDependency Status](https://img.shields.io/david/dev/amazeui/amazeui.svg?style=flat-square)](https://david-dm.org/amazeui/amazeui#info=devDependencies)\n\nAmaze UI 是基于社区开源项目构建的一个跨屏前端框架。\n\n### [Docs in English](http://amazeui.github.io/docs/en/)\n\n__[README in English](README.en.md)__\n\n### [React 版](https://github.com/amazeui/amazeui-react) | [独立插件](https://github.com/amazeui) | [Amaze UI Touch](https://github.com/amazeui/amazeui-touch)\n\n## 功能简介\n\n### 移动优先\n\n以移动优先（Mobile first）为理念，从小屏逐步扩展到大屏，最终实现所有屏幕适配，适应移动互联潮流。\n\n### 组件丰富，模块化\n\nAmaze UI 含近 20 个 CSS 组件、20 余 JS 组件，更有多个包含不同主题的 Web 组件，可快速构建界面出色、体验优秀的跨屏页面，大幅提升开发效率。\n\n### 本地化支持\n\n相比国外框架，Amaze UI 关注中文排版，根据用户代理调整字体，实现更好的中文排版效果；兼顾国内主流浏览器及 App 内置浏览器兼容支持。\n\n### 轻量级，高性能\n\nAmaze UI 面向 HTML5 开发，使用 CSS3 来做动画交互，平滑、高效，更适合移动设备，让 Web 应用更快速载入。\n\n## 下载及使用\n\n用户可以从 [Amaze UI 官网](http://amazeui.org/getting-started) 下载打包好的模板。\n\n所有文档存放在 `docs/` 目录下，为方便查看演示效果，建议通过 [Amaze UI 官网](http://amazeui.org/)查看文档。\n\n\n## 开发及构建\n\n用户可以在 Amaze UI 的基础上进行二次开发。\n\n### 目录结构\n\n```\namazeui\n|-- HISTORY.md\n|-- LICENSE\n|-- README.md\n|-- package.json\n|-- dist        # 构建目录\n|-- docs        # 文档\n|-- fonts       # Icon font，目前使用了 http://staticfile.org/\n|-- gulpfile.js # 构建配置文件\n|-- js          # JS 文件\n|-- less        # LESS 文件\n|-- tools       # 相关工具\n|-- vendor\n`-- widget      # Web 组件\n```\n\n### 构建工具\n\nAmaze UI 使用 [gulp.js](http://gulpjs.com/) 构建项目。\n\n首先全局安装 gulp：\n\n```\nnpm install -g gulp\n```\n\n克隆项目文件:\n\n```\ngit clone https://github.com/allmobilize/amazeui.git\n```\n\n然后进入目录安装依赖：\n\n```\nnpm install\n```\n\n接下来，执行 `gulp`：\n\n```\ngulp\n```\n\n## [Bug 反馈及需求提交](CONTRIBUTING.md)\n\n## 参考、使用的项目\n\n* [Zepto.js](https://github.com/madrobby/zepto) ([MIT\nLicense](https://github.com/madrobby/zepto/blob/master/MIT-LICENSE))\n* [Sea.js](https://github.com/seajs/seajs) ([MIT License](https://github.com/seajs/seajs/blob/master/LICENSE.md))\n* [Handlebars.js](https://github.com/wycats/handlebars.js) ([MIT\nLicense](https://github.com/wycats/handlebars.js/blob/master/LICENSE))\n* [normalize.css](https://github.com/necolas/normalize.css) ([MIT\nLicense](https://github.com/necolas/normalize.css/blob/master/LICENSE.md))\n* [FontAwesome](https://github.com/FortAwesome/Font-Awesome/) ([CC BY 3.0 License](http://creativecommons.org/licenses/by/3.0/))\n* [Bootstrap](https://github.com/twbs/bootstrap) ([MIT License](https://github.com/twbs/bootstrap/blob/master/LICENSE))\n* [UIkit](https://github.com/uikit/uikit) ([MIT License](https://github.com/uikit/uikit/blob/master/LICENSE.md))\n* [Foundation](https://github.com/zurb/foundation) ([MIT\nLicense](https://github.com/zurb/foundation/blob/master/LICENSE))\n* [Framework7](https://github.com/nolimits4web/Framework7) ([MIT\nLicense](https://github.com/nolimits4web/Framework7/blob/master/LICENSE))\n* [Alice](https://github.com/aliceui/aliceui.org/) ([MIT\nLicense](https://github.com/aliceui/aliceui.org/blob/master/LICENSE))\n* [Arale](https://github.com/aralejs/aralejs.org/) ([MIT\nLicense](https://github.com/aralejs/aralejs.org/blob/master/LICENSE))\n* [Pure](https://github.com/yui/pure) ([BSD License](https://github.com/yui/pure/blob/master/LICENSE.md))\n* [Semantic UI](https://github.com/Semantic-Org/Semantic-UI) ([MIT\nLicense](https://github.com/Semantic-Org/Semantic-UI/blob/master/LICENSE.md))\n* [FastClick](https://github.com/ftlabs/fastclick) ([MIT\nLicense](https://github.com/ftlabs/fastclick/blob/master/LICENSE))\n* [screenfull.js](https://github.com/sindresorhus/screenfull.js) ([MIT\nLicense](https://github.com/sindresorhus/screenfull.js/blob/gh-pages/license))\n* [FlexSlider](https://github.com/woothemes/FlexSlider) ([GPL 2.0](http://www.gnu.org/licenses/gpl-2.0.html))\n* [Hammer.js](https://github.com/hammerjs/hammer.js) ([MIT License](https://github.com/hammerjs/hammer.js/blob/master/LICENSE.md))\n* [Flat UI](https://github.com/designmodo/Flat-UI) ([CC BY 3.0 and MIT License](https://github.com/designmodo/Flat-UI#copyright-and-license))\n* [store.js](https://github.com/marcuswestin/store.js) ([MIT License](https://github.com/marcuswestin/store.js/blob/master/LICENSE))\n* [bootstrap-datepicker.js](http://www.eyecon.ro/bootstrap-datepicker/) ([Apache License 2.0](http://www.eyecon.ro/bootstrap-datepicker/js/bootstrap-datepicker.js))\n* [iScroll](http://iscrolljs.com/) ([MIT License](http://iscrolljs.com/#license))\n\n可能会有部分项目遗漏，我们会不断整理更新。\n\n### Developed with Open Source Licensed [WebStorm](http://www.jetbrains.com/webstorm/)\n\n<a href="http://www.jetbrains.com/webstorm/" target="_blank">\n<img src="http://ww1.sinaimg.cn/large/005yyi5Jjw1elpp6svs2eg30k004i3ye.gif" width="240" />\n</a>\n']
springside4,A Spring Framework based, pragmatic style JavaEE application reference architecture.,5758,https://github.com/springside/springside4,master,['### 最新开源： [VJTools－唯品会Java核心项目](https://github.com/vipshop/vjtools)\r\n\r\n# SpringSide\r\n\r\n[![Build Status](https://api.travis-ci.org/springside/springside4.png?branch=master)](https://travis-ci.org/springside/springside4/)\r\n\r\nSpringSide是以Spring Framework为核心的，Pragmatic风格的JavaEE应用参考示例，是JavaEE世界中的主流技术选型，最佳实践的总结与演示。\r\n  \r\n  1. Utils - 性能与易用性兼顾的Java基础库，综合各门各派的大成之作(近期重点).\r\n  2. BootApi - 基于Spring Boot的Web Service应用, 可以用于SOA服务，或Ajax页面的后台.\r\n  3. BootWeb - 基于Spring Boot的Web应用, 典型的增删改查管理(未开始).\r\n  4. Showcase - 更多的示例.\r\n \r\n\r\n## 主要用例\r\n\r\n全部示例以一个P2P图书馆展开，P2P图书馆避免了中央式图书馆所需的场地和图书管理员，大家把图书登记在应用里互相借阅。\r\n\r\n## 快速开始 (JDK7.0+)\r\n\r\n1. 运行根目录下的quick-start.sh 或 quick-start.bat\r\n   * 将modules安装到本地maven仓库\r\n   * 以开发模式启动BootApi应用\r\n\r\n2. 访问 http://localhost:8080/，按上面的提示体验。\r\n\r\n\r\n-------------------------------\r\nOffical Site: http://springside.io（域名过期）\r\n\r\nDocument: https://github.com/springside/springside4/wiki\r\n']
zui,ZUI is an HTML5 front UI framework.,2563,https://github.com/easysoft/zui,master,['# ![ZUI](https://raw.githubusercontent.com/easysoft/zui/master/docs/img/zui-logo-48.png)\n\n[![npm version](https://badge.fury.io/js/zui.svg)](https://badge.fury.io/js/zui)\n[![Bower version](https://badge.fury.io/bo/zui.svg)](https://badge.fury.io/bo/zui)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/easysoft/zui/blob/master/LICENSE)\n\n文档语言：[中文](https://github.com/easysoft/zui/blob/master/README.md) ｜ [English](https://github.com/easysoft/zui/blob/master/en/README.md)\n\n一个基于 Bootstrap 深度定制开源前端实践方案，帮助你快速构建现代跨屏应用。\n\n从官方网站了解更多： https://openzui.com/ 。\n\n💎 &nbsp;为移动端设计，基于 Flex 的 UI 框架： [MZUI](https://openzui.com/m/)。\n\n官方 QQ 群：**2群：127535859**，1群：384135104（满员）\n项目和计划：http://zui.5upm.com/product-browse-2.html\n\n## 特色\n\n- 简单易用，快速构建美观的现代 Web 应用；\n- 轻量级高性能，只包含关键功能特性，但具备高可扩展性，只让你的应用更快；\n- 跨平台支持，多屏幕响应；最大限度的利用现代浏览器特性，但也支持 IE8 等古老的浏览器；\n- 完整方案，内置大量实用第三方组件，并进行了优化，适用大部分 Web 应用的开发；\n- 易于定制，有多个版本供选择，主要版本包含大部分特性，额外的内容按需加载。\n\n## 快速使用\n\n详细使用说明访问 https://openzui.com/#basic/download 。\n\n### NPM\n\n```\nnpm install zui\n```\n\n### CDN\n\n由 <a href="https://cdnjs.com/libraries/zui" target="_blank">cdnjs</a> 提供：\n\n```html\n<!-- ZUI 标准版压缩后的 CSS 文件 -->\n<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/zui/1.10.0/css/zui.min.css">\n\n<!-- ZUI Javascript 依赖 jQuery -->\n<script src="//cdnjs.cloudflare.com/ajax/libs/zui/1.10.0/lib/jquery/jquery.js"></script>\n<!-- ZUI 标准版压缩后的 JavaScript 文件 -->\n<script src="//cdnjs.cloudflare.com/ajax/libs/zui/1.10.0/js/zui.min.js"></script>\n```\n\n其他 CDN:\n\n - 由国内 <a href="http://www.bootcdn.cn/" target="_blank">BootCDN</a> 提供\n\n### 下载\n\n - [v 1.10.0 生产包](https://github.com/easysoft/zui/releases/download/v1.10.0/zui-1.10.0-dist.zip)\n - [v 1.10.0 源码](https://github.com/easysoft/zui/archive/v1.10.0.zip)\n\n### 模板\n\n后台管理模板位于`template/`下，详情请查看`template/README.md`。\n\n### 文档\n\n文档请直接访问官方网站 https://openzui.com/ 。\n\n开发中的文档请访问 https://easysoft.github.io/zui/ 。\n\n你也可以自己部署文档网站：下载源码后，请使用 `http:` 或 `https:` 协议访问源码根目录下的 `index.html`。\n\n如果你的安装了 [Node.js](https://nodejs.org/) 环境，则可以按照如下步骤轻松启动网站：\n\n1. 进入 ZUI 源码目录；\n2. 执行 `npm install`；\n3. 执行 `npm start`；\n4. 在浏览器中访问 `http://127.0.0.1:8088`。\n\n## 使用 ZUI 开发的项目\n\n- [禅道](https://zentao.net)\n- [ZSITE](https://zsite.org)\n- [ZDOO](https://zdoo.com)\n- [喧喧](https://xuanim.com)\n']
euler,A distributed graph deep learning framework.,2822,https://github.com/alibaba/euler,master,['# [概述](https://github.com/alibaba/euler/wiki/Euler-2.0-%E6%A6%82%E8%BF%B0)\n\n# Euler-2.0 新增功能\n\n#### [GQL图查询语言](https://github.com/alibaba/euler/wiki/Euler-2.0-GQL%E6%9F%A5%E8%AF%A2%E6%8E%A5%E5%8F%A3)\n#### [点和边的属性索引](https://github.com/alibaba/euler/wiki/Euler-2.0-%E7%82%B9%E5%92%8C%E8%BE%B9%E7%9A%84%E5%B1%9E%E6%80%A7%E7%B4%A2%E5%BC%95)\n#### [Message passing接口](https://github.com/alibaba/euler/wiki/Euler-2.0-Message-Passing%E6%8E%A5%E5%8F%A3)\n#### [Model Examples](https://github.com/alibaba/euler/wiki/Euler-2.0-Model-Examples)\n\n# 基础教程\n\n#### [编译安装](https://github.com/alibaba/euler/wiki/Euler-2.0-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85)\n#### [数据准备](https://github.com/alibaba/euler/wiki/Euler-2.0-%E6%95%B0%E6%8D%AE%E5%87%86%E5%A4%87)\n#### [快速开始](https://github.com/alibaba/euler/wiki/Euler-2.0-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B)\n\n# 进阶教程\n\n#### [总览](https://github.com/alibaba/euler/wiki/Euler-2.0-%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B%E6%80%BB%E8%A7%88)\n#### [在无属性图上的应用](https://github.com/alibaba/euler/wiki/Euler-2.0-%E5%9C%A8%E6%97%A0%E5%B1%9E%E6%80%A7%E5%9B%BE%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8)\n#### [在有属性图上的应用](https://github.com/alibaba/euler/wiki/Euler-2.0-%E5%9C%A8%E6%9C%89%E5%B1%9E%E6%80%A7%E5%9B%BE%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8)\n#### [在异质图上的应用](https://github.com/alibaba/euler/wiki/Euler-2.0-%E5%9C%A8%E5%BC%82%E8%B4%A8%E5%9B%BE%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8)\n#### [在知识图谱上的应用](https://github.com/alibaba/euler/wiki/Euler-2.0-%E5%9C%A8%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8)\n#### [在图分类上的应用](https://github.com/alibaba/euler/wiki/Euler-2.0-%E5%9C%A8%E5%9B%BE%E5%88%86%E7%B1%BB%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8)\n#### [在大规模图上的应用](https://github.com/alibaba/euler/wiki/Euler-2.0-%E5%9C%A8%E5%A4%A7%E8%A7%84%E6%A8%A1%E5%9B%BE%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8)\n#### [点和边的属性索引的应用](https://github.com/alibaba/euler/wiki/Euler-2.0-%E7%82%B9%E5%92%8C%E8%BE%B9%E7%9A%84%E5%B1%9E%E6%80%A7%E7%B4%A2%E5%BC%95%E7%9A%84%E5%BA%94%E7%94%A8)\n\n# 详细接口\n\n#### [Euler-2.0 OP](https://github.com/alibaba/euler/wiki/Euler-2.0-Euler-OP%E6%8E%A5%E5%8F%A3)\n#### [Euler-2.0 C++ API](https://github.com/alibaba/euler/wiki/Euler-2.0-cpp%E6%8E%A5%E5%8F%A3)\n\n# 联系我们\n如果有任何问题，请直接提交[issues](https://github.com/alibaba/euler/issues)，也欢迎通过Euler开源技术支持邮件组（[euler-opensource@list.alibaba-inc.com](mailto:euler-opensource@list.alibaba-inc.com)）联系我们。\n\n# License\n\nEuler使用[Apache-2.0](https://github.com/alibaba/euler/blob/master/LICENSE)许可\n\n# 致谢\n\nEuler由阿里妈妈工程平台团队与搜索广告算法团队共同探讨与开发，也获得了阿里妈妈多个团队的大力支持。同时也特别感谢蚂蚁金服的机器学习团队，项目早期的一些技术交流给予我们的帮助。\n']
jvm-sandbox,Real - time non-invasive AOP framework container based on JVM,5853,https://github.com/alibaba/jvm-sandbox,master,['# ![BANNER](https://github.com/alibaba/jvm-sandbox/wiki/img/BANNER.png)\n\n[![Build Status](https://travis-ci.org/alibaba/jvm-sandbox.svg?branch=master)](https://travis-ci.org/alibaba/jvm-sandbox)\n[![codecov](https://codecov.io/gh/alibaba/jvm-sandbox/branch/master/graph/badge.svg)](https://codecov.io/gh/alibaba/jvm-sandbox)\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/alibaba/jvm-sandbox.svg)](http://isitmaintained.com/project/alibaba/jvm-sandbox "Average time to resolve an issue")\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/alibaba/jvm-sandbox.svg)](http://isitmaintained.com/project/alibaba/jvm-sandbox "Percentage of issues still open")\n\n> JVM沙箱容器，一种JVM的非侵入式运行期AOP解决方案<br/>\n> Real - time non-invasive AOP framework container based on JVM\n\n## 目标群体\n\n- [BTRACE](https://github.com/btraceio/btrace)好强大，也曾技痒想做一个更便捷、更适合自己的问题定位工具，既可支持线上链路监控排查，也可支持单机版问题定位。\n- 有时候突然一个问题反馈上来，需要入参才能完成定位，但恰恰没有任何日志，甚至出现在别人的代码里，好想开发一个工具可以根据需要动态添加日志，最好还能按照业务ID进行过滤。\n- 系统间的异常模拟可以使用的工具很多，可是系统内的异常模拟怎么办，加开关或是用AOP在开发系统中实现，好想开发一个更优雅的异常模拟工具，既能模拟系统间的异常，又能模拟系统内的异常。\n- 好想获取行调用链路数据，可以用它识别场景、覆盖率统计等等，覆盖率统计工具不能原生支持，统计链路数据不准确。想自己开发一个工具获取行链路数据。\n- 我想开发录制回放、故障模拟、动态日志、行链路获取等等工具，就算我开发完成了，这些工具底层实现原理相同，同时使用，要怎么消除这些工具之间的影响，怎么保证这些工具动态加载，怎么保证动态加载/卸载之后不会影响其他工具，怎么保证在工具有问题的时候，快速消除影响，代码还原\n\n如果你有以上研发诉求，那么你就是JVM-SANDBOX(以下简称沙箱容器)的潜在客户。沙箱容器提供\n\n1. 动态增强类你所指定的类，获取你想要的参数和行信息甚至改变方法执行\n2. 动态可插拔容器框架\n\n## 项目简介\n\n**JVM-SANDBOX（沙箱）实现了一种在不重启、不侵入目标JVM应用的AOP解决方案。**\n\n### 沙箱的特性\n\n1. `无侵入`：目标应用无需重启也无需感知沙箱的存在\n2. `类隔离`：沙箱以及沙箱的模块不会和目标应用的类相互干扰\n3. `可插拔`：沙箱以及沙箱的模块可以随时加载和卸载，不会在目标应用留下痕迹\n4. `多租户`：目标应用可以同时挂载不同租户下的沙箱并独立控制\n5. `高兼容`：支持JDK[6,11]\n\n### 沙箱常见应用场景\n\n- 线上故障定位\n- 线上系统流控\n- 线上故障模拟\n- 方法请求录制和结果回放\n- 动态日志打印\n- 安全信息监测和脱敏\n\n*JVM-SANDBOX还能帮助你做很多很多，取决于你的脑洞有多大了。*\n\n### 实时无侵入AOP框架\n\n在常见的AOP框架实现方案中，有静态编织和动态编织两种。\n\n1. **静态编织**：静态编织发生在字节码生成时根据一定框架的规则提前将AOP字节码插入到目标类和方法中，实现AOP；\n2. **动态编织**：动态编织则允许在JVM运行过程中完成指定方法的AOP字节码增强.常见的动态编织方案大多采用重命名原有方法，再新建一个同签名的方法来做代理的工作模式来完成AOP的功能(常见的实现方案如CgLib)，但这种方式存在一些应用边界：\n   - **侵入性**：对被代理的目标类需要进行侵入式改造。比如：在Spring中必须是托管于Spring容器中的Bean\n   - **固化性**：目标代理方法在启动之后即固化，无法重新对一个已有方法进行AOP增强\n \n要解决`无侵入`的特性需要AOP框架具备 **在运行时完成目标方法的增强和替换**。在JDK的规范中运行期重定义一个类必须准循以下原则\n  1. 不允许新增、修改和删除成员变量\n  2. 不允许新增和删除方法\n  3. 不允许修改方法签名\n\nJVM-SANDBOX属于基于Instrumentation的动态编织类的AOP框架，**通过精心构造了字节码增强逻辑，使得沙箱的模块能在不违反JDK约束情况下实现对目标应用方法的`无侵入`运行时AOP拦截**。\n\n## 核心原理\n\n### 事件驱动\n\n在沙箱的世界观中，任何一个Java方法的调用都可以分解为`BEFORE`、`RETURN`和`THROWS`三个环节，由此在三个环节上引申出对应环节的事件探测和流程控制机制。\n\n```java\n// BEFORE\ntry {\n\n   /*\n    * do something...\n    */\n\n    // RETURN\n    return;\n\n} catch (Throwable cause) {\n    // THROWS\n}\n```\n\n基于`BEFORE`、`RETURN`和`THROWS`三个环节事件分离，沙箱的模块可以完成很多类AOP的操作。\n\n1. 可以感知和改变方法调用的入参\n2. 可以感知和改变方法调用返回值和抛出的异常\n3. 可以改变方法执行的流程\n    - 在方法体执行之前直接返回自定义结果对象，原有方法代码将不会被执行\n    - 在方法体返回之前重新构造新的结果对象，甚至可以改变为抛出异常\n    - 在方法体抛出异常之后重新抛出新的异常，甚至可以改变为正常返回\n\n### 类隔离策略\n\n沙箱通过自定义的SandboxClassLoader破坏了双亲委派的约定，实现了和目标应用的类隔离。所以不用担心加载沙箱会引起应用的类污染、冲突。各模块之间类通过ModuleJarClassLoader实现了各自的独立，达到模块之间、模块和沙箱之间、模块和应用之间互不干扰。\n\n![jvm-sandbox-classloader](https://github.com/alibaba/jvm-sandbox/wiki/img/jvm-sandbox-classloader.png)\n\n### 类增强策略\n\n沙箱通过在BootstrapClassLoader中埋藏的Spy类完成目标类和沙箱内核的通讯\n\n![jvm-sandbox-enhance-class](https://github.com/alibaba/jvm-sandbox/wiki/img/jvm-sandbox-enhance-class.jpg)\n\n### 整体架构\n\n![jvm-sandbox-architecture](https://github.com/alibaba/jvm-sandbox/wiki/img/jvm-sandbox-architecture.png)\n\n## 快速安装\n- **下载并安装或自行打包**\n\n  ```shell\n  # 下载最新版本的JVM-SANDBOX，oss已到期，或者oss链接不可访问时，可选择自行打包\n  wget https://ompc.oss-cn-hangzhou.aliyuncs.com/jvm-sandbox/release/sandbox-1.3.3-bin.zip\n\n  # 解压\n  unzip sandbox-1.3.3-bin.zip\n  ```\n  ```shell\n  #自行打包\n   cd bin\n   ./sandbox-packages.sh\n   #target路径下有多种构建件类型，选择一个合适的使用\n   cd ../target\n  ```\n\n\n- **挂载目标应用**\n\n  ```shell\n  # 进入沙箱执行脚本\n  cd sandbox/bin\n\n  # 目标JVM进程33342\n  ./sandbox.sh -p 33342\n  ```\n\n- **挂载成功后会提示**\n\n  ```shell\n  ./sandbox.sh -p 33342\n             NAMESPACE : default\n               VERSION : 1.2.0\n                  MODE : ATTACH\n           SERVER_ADDR : 0.0.0.0\n           SERVER_PORT : 55756\n        UNSAFE_SUPPORT : ENABLE\n          SANDBOX_HOME : /Users/vlinux/opt/sandbox\n     SYSTEM_MODULE_LIB : /Users/vlinux/opt/sandbox/module\n       USER_MODULE_LIB : ~/.sandbox-module;\n   SYSTEM_PROVIDER_LIB : /Users/vlinux/opt/sandbox/provider\n    EVENT_POOL_SUPPORT : DISABLE\n  ```\n\n- **卸载沙箱**\n\n  ```shell\n  ./sandbox.sh -p 33342 -S\n  jvm-sandbox[default] shutdown finished.\n  ```\n\n## 项目构建\n\n当你修改了sandbox的代码后，想打包成自己需要的发行版，可以执行以下命令\n\n> 脚本执行目录默认为项目主目录，后续不在另外说明\n\n```shell\ncd bin\n./sandbox-package.sh\n```\n\n命令执行成功后会在target目录下生成`sandbox-<版本号>-bin.zip`文件\n\n### 构建注意事项\n\n1. 必须用JDK1.8进行构建，工程自身和maven插件中使用了tools.jar\n2. 必须在Linux/Mac/Unix下进行构建，有部分测试用例没有考虑好$USER_HOME的目录路径在windows下的特殊性，会导致测试用例跑不通过。\n\n### 修改sandbox版本号\n\nsandbox的版本号需要修改所有的pom文件以及`.//sandbox-core/src/main/resources/com/alibaba/jvm/sandbox/version`，这里有一个脚本方便执行\n\n```shell\ncd bin\n./set-version.sh -s 1.4.0\n```\n\n脚本第一个参数是`[s|r]`\n- **s** : SNAPSHOT版，会自动在版本号后边追加`-SNAPSHOT`\n- **r** : 正式版\n\n### 本地仓库安装api包\n\n如果本次你修改了sandbox-api、sandbox-common-api、sandbox-module-starter等本应该发布到中央仓库的包，但你需要本地测试验证，可以执行以下命令\n\n```shell\nmvn clean install\n```\n\n以下四个包将会安装到本地manven仓库\n- sandbox\n- sandbox-api\n- sandbox-common-api\n- sandbox-module-starter\n- sandbox-provider-api\n\n## 项目背景\n\n2014年[GREYS](https://github.com/oldmanpushcart/greys-anatomy)第一版正式发布，一路看着他从无到有，并不断优化强大，感慨羡慕之余，也在想GREYS是不是只能做问题定位。\n\n2015年开始根据GREYS的底层代码完成了人生的第一个字节码增强工具——动态日志。之后又萌生了将其拆解成*录制回放*、*故障模拟*等工具的想法。扪心自问，我是想以一人一个团队的力量建立大而全的工具平台，还是做一个底层中台，让每一位技术人员都可以在它的基础上快速的实现业务功能。我选择了后者。\n\n## 相关文档\n\n- **[WIKI](https://github.com/alibaba/jvm-sandbox/wiki/Home)**\n']
jynew,JinYongLegend-like RPG Game Framework with full Modding support,6497,https://github.com/jynew/jynew,main,['# 群侠传，启动！\n\n![主宣传图](https://user-images.githubusercontent.com/7448857/192084760-017f3789-81ff-4a67-81bf-8d8c4df1cac5.png)\n\n<p>\n<a href="https://store.steampowered.com/app/2098790/"><img src="https://user-images.githubusercontent.com/7448857/205875106-ba52fc19-f92a-47ff-b0d6-c5e451b8bdd2.png" align="center" height="70"></a>\n<a href="https://www.taptap.cn/app/246004"><img src="https://user-images.githubusercontent.com/7448857/205873000-824a0855-bb62-4cbd-a187-c2f51f343c7d.png" align="center" height="70"></a>\n<a href="https://apps.apple.com/cn/app/%E7%BE%A4%E4%BE%A0%E4%BC%A0%E5%90%AF%E5%8A%A8/id1659977116"><img src="https://user-images.githubusercontent.com/7448857/209269801-48ab9e9e-2318-40ed-8d8a-d34a49514ed5.png" align="center" height="70"></a>\n</p>\n\n\n\n[![license](https://img.shields.io/badge/license-%E9%87%91%E7%BE%A43D%E9%87%8D%E5%88%B6%E7%89%88%E7%A4%BE%E5%8C%BA%E5%8D%8F%E8%AE%AE-blue)](https://github.com/jynew/jynew/blob/main/LICENSE)\n[![release](https://img.shields.io/badge/release-v0.2%20stable-brightgreen)](https://github.com/jynew/jynew/releases)\n[![Unity Version](https://img.shields.io/badge/unity-2020.3.32.f1c1-blue)](https://unity.cn/releases/lts/2020) \n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-blue.svg)](https://github.com/jynew/jynew/pulls) \n![commit](https://img.shields.io/github/last-commit/jynew/jynew)<br>\n![Contributors](https://img.shields.io/github/contributors-anon/jynew/jynew) \n![fork](https://img.shields.io/github/forks/jynew/jynew?style=social)\n![star](https://img.shields.io/github/stars/jynew/jynew?style=social)\n[![bilibili](https://img.shields.io/badge/videos-bilibili-pink)](https://space.bilibili.com/1232630839) \n \n[MOD开发者手册](https://xiastart.feishu.cn/wiki/wikcn2iOszRsrux9WlxEye0OVMc) | \n[包体下载](https://github.com/jynew/jynew/wiki/%E6%B8%B8%E6%88%8F%E4%B8%8B%E8%BD%BD) | [B站主页](https://space.bilibili.com/1232630839) | [联系我们](mailto://jy_remastered@163.com) | [项目Wiki](https://github.com/jynew/jynew/wiki) | [捐助项目](https://github.com/jynew/jynew/wiki/%E6%8D%90%E5%8A%A9%E9%A1%B9%E7%9B%AE) | [授权列表](https://github.com/jynew/jynew/wiki/%E9%A1%B9%E7%9B%AE%E7%B4%A0%E6%9D%90%E6%8E%88%E6%9D%83%E4%BD%BF%E7%94%A8%E5%88%97%E8%A1%A8) | [耻辱榜](https://github.com/jynew/jynew/wiki/%E8%80%BB%E8%BE%B1%E6%A6%9C) \n\n\n《群侠传，启动！》 是一个开放源代码的武侠RPG游戏框架，旨在致敬经典游戏《金庸群侠传》，并为此类游戏爱好者提供一个二次创作与交流的平台。\n你可以体验样例工程《渡城残魂转》，扮演灵魂穿越附身于小乞丐的莫桥山庄掌门人“莫穿林”，解开自己死亡之谜。\n\n你亦可使用本框架制作游戏MOD，并上传到创意工坊。\n\n\n一切均免费，纯粹用爱发电。非常欢迎感兴趣的朋友加入。\n但未经允许，不允许在本项目及其MOD以外任何场景使用本项目任何素材、资源（包括商用/非商用）！否则将上本项目的耻辱榜。具体可以关注本项目相关开源协议。\n\n## 项目目标\n\n* 使用Unity引擎重制并致敬经典游戏《金庸群侠传》DOS版；\n* 提供统一的平台，支持重制《金群》的一系列MOD或二次开发；\n* 提供开放的能力给社区，有兴趣贡献力量的朋友可以让这个作品更加完善；\n* 提供一个完备的单机游戏结构供有兴趣学习开发游戏的朋友进行参考；\n\n> 我们承诺：本项目除了爱好者的自愿捐款以外，不会在任何渠道取得收入。最终的代码、资源、包体都仅供学习使用，请勿用于任何商业目的。一切再度商用均不被本项目允许和授权，如果有任何侵犯您的权益，欢迎与我们取得联系。\n> \n\n\n## 样例MOD：渡城残魂传\n\n[项目地址](https://github.com/jynew/jynew/tree/main/jyx2/Assets/Mods/SAMPLE)\n\n- 约3-4个小时的主线游戏剧情体验，可最终通关并解开自己死亡之谜，以及掩盖在该谜底下的阴谋\n- 多游戏结局\n- 多名风格各异的可入队队友\n- 十余种可学习武学\n- 上百种不同道具\n\n### 游戏画面截图\n\n![Screenshot1](https://user-images.githubusercontent.com/7448857/192085025-b38ca9f9-726b-458b-aab3-7e5ec36df1ca.png)\n![Screenshot3](https://user-images.githubusercontent.com/7448857/192085027-ba8beebf-8743-48fb-bc1d-f315b256e2a7.png)\n\n---------\n\n## 样例MOD：无限肉鸽武侠\n\n![mainmenu](https://user-images.githubusercontent.com/7448857/207826751-6e74d7cd-1b67-4efe-83e1-5a5fce28a451.png)\n\n[项目地址](https://github.com/jynew/jynew/tree/main/jyx2/Assets/Mods/xiastart_roguelike)\n\n一个roguelike武侠的DEMO，供MOD开发者参考。\n玩家亦可简单体验游玩，纯粹享受BUILD和战斗的乐趣。\n\n- 在本玩法里战斗纯自动，不可手操\n- 玩家每通关一次可以选择想要的奖励\n- BUILD好队伍，迎接下一关的挑战！\n- 战斗将越来越难，奖励将越来越好！\n- 不允许S/L，此玩法直面人生（自动保存）\n- 运气和实力兼具的挑战！\n\n![1671035002406 00_00_02--00_00_22](https://user-images.githubusercontent.com/7448857/207826895-fa8db838-c165-4103-ac1f-8e3e0a744005.gif)\n\n---------\n\n## 样例MOD：金庸群侠传3D重制版\n\n![主宣传图-616-353](https://user-images.githubusercontent.com/7448857/145429032-4cb357f9-077d-4450-acb2-bea62e9910d6.jpg)\n\n[项目地址](https://github.com/jynew/jynew/tree/main/jyx2/Assets/Mods/JYX2)\n\n金庸群侠传3D重制版是一个回合制战棋战斗开放世界RPG游戏。它是一个非盈利游戏项目，项目目标为重制经典游戏《[金庸群侠传](https://zh.wikipedia.org/wiki/%E9%87%91%E5%BA%B8%E7%BE%A4%E4%BF%A0%E5%82%B3)》（[在线玩DOS原版](https://dos.zczc.cz/games/%E9%87%91%E5%BA%B8%E7%BE%A4%E4%BE%A0%E4%BC%A0/)）并支持后续一系列MOD和二次开发。你可以在PC、MAC或移动手机平台(或其他支持平台)游玩。\n\n\n### 游戏画面截图\n\n![1 (1)](https://user-images.githubusercontent.com/7448857/144630410-bc1676eb-b548-41ea-ae54-90c72e9d066d.png)\n![2 (1)](https://user-images.githubusercontent.com/7448857/144630415-c2c3b37e-6008-49d9-a690-fc25d995f21c.png)\n![3 (1)](https://user-images.githubusercontent.com/7448857/144630418-38aa752d-332a-4e2e-a297-959b921c9316.png)\n![4 (1)](https://user-images.githubusercontent.com/7448857/144630403-e35a6772-2442-465c-8a23-c1f5ae0037bc.png)\n![5 (1)](https://user-images.githubusercontent.com/7448857/144630913-bb59a38f-4cb2-4312-b5e4-6051d38c3a84.png)\n![6 (1)](https://user-images.githubusercontent.com/7448857/144630919-b21370e1-0783-417e-99c3-763e9563d06a.png)\n\n---------\n\n## 开发计划\n\n- [ ] 素材资产实现\n  - [x] 按照新的风格绘制原版所有的角色立绘\n  - [x] remix原版所有的音乐\n  - [x] 制作所有角色的模型\n  - [x] 制作所有武功动作   \n  - [x] 所有场景制作，包括RPG部分和战斗部分 \n  - [ ] 依据重制版的风格绘制新的道具图标\n  - [ ] 原版开场动画重新实现\n  - [x] 结局原画绘制\n  - [x] 武功特效调制 \n- [x] 风格化的画面渲染效果实现\n- [x] 基础系统实现，包括地图、道具、角色、战斗等\n- [x] 支持剧情脚本指令系统，支持可视化的剧情脚本编辑系统\n- [x] 完整复刻实现金庸群侠传游戏流程，可正常通关\n- [x] 支持多端输出，一键打包\n- [x] 所有代码和资源全部开源，不依赖闭源库（标准第三方库除外）\n- [x] 优化游戏运行性能和代码质量\n- [x] 提供MOD启动器，提供金群MOD开发环境和样例\n- [ ] 提供联机战斗对战、ONLINE网络游戏模式的样例和DEMO\n\n## 技术实现简介\n\n* 核心流程使用脚本驱动，目前支持lua和可视化图编辑两种模式，很方便编程扩展指令\n* 逻辑配置数据使用ScriptableObject存储，并提供基于ODIN的可视化编辑环境，配置数据在Editor运行时可以所见即所得编辑，不需要重启游戏\n* 为战棋模式，本框架提供一套简单的基于贪心算法的AI，易于扩展\n* 每个地图为一个场景，地图间可以串接\n* 游戏存档使用EasySave3插件\n* UI方案使用Unity原生的UGUI\n* 使用默认渲染管线，卡通渲染风格（考虑升级到URP管线，尚未完成）\n* 动作管理部分大量使用Animancer插件，亦使用unity原生AnimatorController方案\n* 资源打包和加载使用AssetBundle\n* 游戏中大量使用基于UniTask的异步编程方案来进行逻辑串接，以及防止大量回调嵌套\n* 技能特效使用了不少assetstore上的第三方库，如想使用，还请自行购买\n\n\n## 项目文档导航\n\n* 查看[开发环境和搭建](https://github.com/jynew/jynew/wiki/1.1%E5%87%86%E5%A4%87%E5%BC%80%E5%A7%8B)来将你本地的游戏环境运行起来！\n* 你可以查阅[金庸群侠传3d重制版开发文档](https://github.com/jynew/jynew/wiki)来学习本项目的开发细节，其中包括详细的如何配置启动游戏、脚本修改、系统编程等一系列项目细节。\n* 可通过查看[金庸群侠传3d重制版视频操作教程](https://github.com/jynew/jynew/wiki/%E9%87%91%E5%BA%B8%E7%BE%A4%E4%BE%A0%E4%BC%A03d%E9%87%8D%E5%88%B6%E7%89%88%E8%A7%86%E9%A2%91%E6%93%8D%E4%BD%9C%E6%95%99%E7%A8%8B)来学习如何搭建游戏场景、添加和配置技能动作等。\n* 本项目非常欢迎社区进行贡献，请阅读[社区贡献指南](https://github.com/jynew/jynew/blob/main/CONTRIBUTING.md)查看具体规则和流程。\n* 本项目美术原始文件位于[jynew/jynew_art](https://github.com/jynew/jynew_art)，你可以下载3DMAX等原始文件查看。但请注意：此项目内容同样遵守社区协议。\n\n## 授权声明\n\n* 本项目素材一部分为社区自制，一部分为互联网上取得\n* 本项目遵循MIT协议，但[金庸群侠传3D重制版社区素材协议](https://github.com/jynew/jynew/tree/main/COMMUNITY_LICENSE_FOR_JYX2)描述了若干种在本项目中覆盖MIT协议情况，请仔细阅读\n* 项目中所包含外部插件源代码、资源和链接库等，如希望在其他场景使用，请务必确认符合其本身授权规范\n* 不遵守授权协议的产品和企业、个人都将被[耻辱榜](https://github.com/jynew/jynew/wiki/%E8%80%BB%E8%BE%B1%E6%A6%9C)记录在案\n\n## 项目结构示意图\n\n![image](https://user-images.githubusercontent.com/7448857/118384406-5b3bc680-b638-11eb-9186-8888b90bcc35.png)\n\n## 相关项目\n[群侠传启动-Steam创意工坊上传工具](https://github.com/0kk470/modtool_qt/)<br>\n[玩家群发码机器人](https://github.com/jynew/send-key-bot)<br>\n\n## 引用项目\n\n[xlua](https://github.com/Tencent/xLua), [xNode](https://github.com/Siccity/xNode), [UniTask](https://github.com/Cysharp/UniTask), [EasySave3](https://docs.moodkie.com/product/easy-save-3/)\n\n## 参考项目\n\n[kyscpp](https://github.com/scarsty/kys-cpp)\n\n## 特别补充说明\n以下插件仅供学习使用，若希望使用它还请自行购买重新导入：<br>\n[Odin Inspector](https://assetstore.unity.com/packages/tools/utilities/odin-inspector-and-serializer-89041)\n, [GPU Instancer](https://assetstore.unity.com/packages/tools/utilities/gpu-instancer-117566)\n, [Rewired](https://assetstore.unity.com/packages/tools/utilities/rewired-21676)\n\n## 社区\n\n* 开发者Q群 749167552 （入群密码是本代码仓库名称）（已满）\n* 玩家Q群<br>\n   0群 346751656（已满）<br>\n   1群 480072818（已满）<br>\n   2群 704370277（已满）<br>\n   3群 704697875（已满）<br>\n   4群 389536186（已满）<br>\n* 玩家讨论论坛：https://tiexuedanxin.net/forum-38290-1.html<br>\n\n## 感谢支持\n\n[JetBrains Rider](https://www.jetbrains.com/community/opensource/#support)\n\n']
xxl-job,A distributed task scheduling framework.（分布式任务调度平台XXL-JOB）,23753,https://github.com/xuxueli/xxl-job,master,['<p align="center" >\n    <img src="https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg" width="150">\n    <h3 align="center">XXL-JOB</h3>\n    <p align="center">\n        XXL-JOB, a distributed task scheduling framework.\n        <br>\n        <a href="https://www.xuxueli.com/xxl-job/"><strong>-- Home Page --</strong></a>\n        <br>\n        <br>\n        <a href="https://github.com/xuxueli/xxl-job/actions">\n            <img src="https://github.com/xuxueli/xxl-job/workflows/Java%20CI/badge.svg" >\n        </a>\n        <a href="https://maven-badges.herokuapp.com/maven-central/com.xuxueli/xxl-job/">\n            <img src="https://maven-badges.herokuapp.com/maven-central/com.xuxueli/xxl-job/badge.svg" >\n        </a>\n        <a href="https://github.com/xuxueli/xxl-job/releases">\n         <img src="https://img.shields.io/github/release/xuxueli/xxl-job.svg" >\n        </a>\n        <a href="https://github.com/xuxueli/xxl-job/">\n            <img src="https://img.shields.io/github/stars/xuxueli/xxl-job" >\n        </a>\n        <a href="https://hub.docker.com/r/xuxueli/xxl-job-admin/">\n            <img src="https://img.shields.io/docker/pulls/xuxueli/xxl-job-admin" >\n        </a>\n        <a href="http://www.gnu.org/licenses/gpl-3.0.html">\n         <img src="https://img.shields.io/badge/license-GPLv3-blue.svg" >\n        </a>\n        <a href="https://www.xuxueli.com/page/donate.html">\n           <img src="https://img.shields.io/badge/%24-donate-ff69b4.svg?style=flat" >\n        </a>\n    </p>\n</p>\n\n\n## Introduction\nXXL-JOB is a distributed task scheduling framework. \nIt\'s core design goal is to develop quickly and learn simple, lightweight, and easy to expand. \nNow, it\'s already open source, and many companies use it in production environments, real "out-of-the-box".\n\nXXL-JOB是一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。\n\n\n## Documentation\n- [中文文档](https://www.xuxueli.com/xxl-job/)\n- [English Documentation](https://www.xuxueli.com/xxl-job/en/)\n\n\n## Communication    \n- [社区交流](https://www.xuxueli.com/page/community.html)\n\n\n## Features\n- 1、简单：支持通过Web页面对任务进行CRUD操作，操作简单，一分钟上手；\n- 2、动态：支持动态修改任务状态、启动/停止任务，以及终止运行中任务，即时生效；\n- 3、调度中心HA（中心式）：调度采用中心式设计，“调度中心”自研调度组件并支持集群部署，可保证调度中心HA；\n- 4、执行器HA（分布式）：任务分布式执行，任务"执行器"支持集群部署，可保证任务执行HA；\n- 5、注册中心: 执行器会周期性自动注册任务, 调度中心将会自动发现注册的任务并触发执行。同时，也支持手动录入执行器地址；\n- 6、弹性扩容缩容：一旦有新执行器机器上线或者下线，下次调度时将会重新分配任务；\n- 7、触发策略：提供丰富的任务触发策略，包括：Cron触发、固定间隔触发、固定延时触发、API（事件）触发、人工触发、父子任务触发；\n- 8、调度过期策略：调度中心错过调度时间的补偿处理策略，包括：忽略、立即补偿触发一次等；\n- 9、阻塞处理策略：调度过于密集执行器来不及处理时的处理策略，策略包括：单机串行（默认）、丢弃后续调度、覆盖之前调度；\n- 10、任务超时控制：支持自定义任务超时时间，任务运行超时将会主动中断任务；\n- 11、任务失败重试：支持自定义任务失败重试次数，当任务失败时将会按照预设的失败重试次数主动进行重试；其中分片任务支持分片粒度的失败重试；\n- 12、任务失败告警；默认提供邮件方式失败告警，同时预留扩展接口，可方便的扩展短信、钉钉等告警方式；\n- 13、路由策略：执行器集群部署时提供丰富的路由策略，包括：第一个、最后一个、轮询、随机、一致性HASH、最不经常使用、最近最久未使用、故障转移、忙碌转移等；\n- 14、分片广播任务：执行器集群部署时，任务路由策略选择"分片广播"情况下，一次任务调度将会广播触发集群中所有执行器执行一次任务，可根据分片参数开发分片任务；\n- 15、动态分片：分片广播任务以执行器为维度进行分片，支持动态扩容执行器集群从而动态增加分片数量，协同进行业务处理；在进行大数据量业务操作时可显著提升任务处理能力和速度。\n- 16、故障转移：任务路由策略选择"故障转移"情况下，如果执行器集群中某一台机器故障，将会自动Failover切换到一台正常的执行器发送调度请求。\n- 17、任务进度监控：支持实时监控任务进度；\n- 18、Rolling实时日志：支持在线查看调度结果，并且支持以Rolling方式实时查看执行器输出的完整的执行日志；\n- 19、GLUE：提供Web IDE，支持在线开发任务逻辑代码，动态发布，实时编译生效，省略部署上线的过程。支持30个版本的历史版本回溯。\n- 20、脚本任务：支持以GLUE模式开发和运行脚本任务，包括Shell、Python、NodeJS、PHP、PowerShell等类型脚本;\n- 21、命令行任务：原生提供通用命令行任务Handler（Bean任务，"CommandJobHandler"）；业务方只需要提供命令行即可；\n- 22、任务依赖：支持配置子任务依赖，当父任务执行结束且执行成功后将会主动触发一次子任务的执行, 多个子任务用逗号分隔；\n- 23、一致性：“调度中心”通过DB锁保证集群分布式调度的一致性, 一次任务调度只会触发一次执行；\n- 24、自定义任务参数：支持在线配置调度任务入参，即时生效；\n- 25、调度线程池：调度系统多线程触发调度运行，确保调度精确执行，不被堵塞；\n- 26、数据加密：调度中心和执行器之间的通讯进行数据加密，提升调度信息安全性；\n- 27、邮件报警：任务失败时支持邮件报警，支持配置多邮件地址群发报警邮件；\n- 28、推送maven中央仓库: 将会把最新稳定版推送到maven中央仓库, 方便用户接入和使用;\n- 29、运行报表：支持实时查看运行数据，如任务数量、调度次数、执行器数量等；以及调度报表，如调度日期分布图，调度成功分布图等；\n- 30、全异步：任务调度流程全异步化设计实现，如异步调度、异步运行、异步回调等，有效对密集调度进行流量削峰，理论上支持任意时长任务的运行；\n- 31、跨语言：调度中心与执行器提供语言无关的 RESTful API 服务，第三方任意语言可据此对接调度中心或者实现执行器。除此之外，还提供了 “多任务模式”和“httpJobHandler”等其他跨语言方案；\n- 32、国际化：调度中心支持国际化设置，提供中文、英文两种可选语言，默认为中文；\n- 33、容器化：提供官方docker镜像，并实时更新推送dockerhub，进一步实现产品开箱即用；\n- 34、线程池隔离：调度线程池进行隔离拆分，慢任务自动降级进入"Slow"线程池，避免耗尽调度线程，提高系统稳定性；\n- 35、用户管理：支持在线管理系统用户，存在管理员、普通用户两种角色；\n- 36、权限控制：执行器维度进行权限控制，管理员拥有全量权限，普通用户需要分配执行器权限后才允许相关操作；\n\n\n## Development\n于2015年中，我在github上创建XXL-JOB项目仓库并提交第一个commit，随之进行系统结构设计，UI选型，交互设计……\n\n于2015-11月，XXL-JOB终于RELEASE了第一个大版本V1.0， 随后我将之发布到OSCHINA，XXL-JOB在OSCHINA上获得了@红薯的热门推荐，同期分别达到了OSCHINA的“热门动弹”排行第一和git.oschina的开源软件月热度排行第一，在此特别感谢红薯，感谢大家的关注和支持。\n\n于2015-12月，我将XXL-JOB发表到我司内部知识库，并且得到内部同事认可。\n\n于2016-01月，我司展开XXL-JOB的内部接入和定制工作，在此感谢袁某和尹某两位同事的贡献，同时也感谢内部其他给与关注与支持的同事。\n\n于2017-05-13，在上海举办的 "[第62期开源中国源创会](https://www.oschina.net/event/2236961)" 的 "放码过来" 环节，我登台对XXL-JOB做了演讲，台下五百位在场观众反响热烈（[图文回顾](https://www.oschina.net/question/2686220_2242120) ）。\n\n于2017-10-22，又拍云 Open Talk 联合 Spring Cloud 中国社区举办的 "[进击的微服务实战派上海站](https://opentalk.upyun.com/303.html)"，我登台对XXL-JOB做了演讲，现场观众反响热烈并在会后与XXL-JOB用户热烈讨论交流。\n\n于2017-12-11，XXL-JOB有幸参会《[InfoQ ArchSummit全球架构师峰会](http://bj2017.archsummit.com/)》，并被拍拍贷架构总监"杨波老师"在专题 "[微服务原理、基础架构和开源实践](http://bj2017.archsummit.com/training/2)" 中现场介绍。\n\n于2017-12-18，XXL-JOB参与"[2017年度最受欢迎中国开源软件](http://www.oschina.net/project/top_cn_2017?sort=1)"评比，在当时已录入的约九千个国产开源项目中角逐，最终进入了前30强。\n\n于2018-01-15，XXL-JOB参与"[2017码云最火开源项目](https://www.oschina.net/news/92438/2017-mayun-top-50)"评比，在当时已录入的约六千五百个码云项目中角逐，最终进去了前20强。\n\n于2018-04-14，iTechPlus在上海举办的 "[2018互联网开发者大会](http://www.itdks.com/eventlist/detail/2065)"，我登台对XXL-JOB做了演讲，现场观众反响热烈并在会后与XXL-JOB用户热烈讨论交流。\n\n于2018-05-27，在上海举办的 "[第75期开源中国源创会](https://www.oschina.net/event/2278742)" 的 "架构" 主题专场，我登台进行“基础架构与中间件图谱”主题演讲，台下上千位在场观众反响热烈（[图文回顾](https://www.oschina.net/question/3802184_2280606) ）。\n\n于2018-12-05，XXL-JOB参与"[2018年度最受欢迎中国开源软件](https://www.oschina.net/project/top_cn_2018?sort=1)"评比，在当时已录入的一万多个开源项目中角逐，最终排名第19名。\n\n于2019-12-10，XXL-JOB参与"[2019年度最受欢迎中国开源软件](https://www.oschina.net/project/top_cn_2019)"评比，在当时已录入的一万多个开源项目中角逐，最终排名"开发框架和基础组件类"第9名。\n\n于2020-11-16，XXL-JOB参与"[2020年度最受欢迎中国开源软件](https://www.oschina.net/project/top_cn_2020)"评比，在当时已录入的一万多个开源项目中角逐，最终排名"开发框架和基础组件类"第8名。\n\n于2021-12-06，XXL-JOB参与"[2021年度OSC中国开源项目评选](https://www.oschina.net/project/top_cn_2021) "评比，在当时已录入的一万多个开源项目中角逐，最终当选"最受欢迎项目"。\n\n> 我司大众点评目前已接入XXL-JOB，内部别名《Ferrari》（Ferrari基于XXL-JOB的V1.1版本定制而成，新接入应用推荐升级最新版本）。\n据最新统计, 自2016-01-21接入至2017-12-01期间，该系统已调度约100万次，表现优异。新接入应用推荐使用最新版本，因为经过数十个版本的更新，系统的任务模型、UI交互模型以及底层调度通讯模型都有了较大的优化和提升，核心功能更加稳定高效。\n\n至今，XXL-JOB已接入多家公司的线上产品线，接入场景如电商业务，O2O业务和大数据作业等，截止最新统计时间为止，XXL-JOB已接入的公司包括不限于：\n    \n\t- 1、大众点评【美团点评】\n\t- 2、山东学而网络科技有限公司；\n\t- 3、安徽慧通互联科技有限公司；\n\t- 4、人人聚财金服；\n\t- 5、上海棠棣信息科技股份有限公司\n\t- 6、运满满【运满满】\n\t- 7、米其林 (中国区)【米其林】\n\t- 8、妈妈联盟\n\t- 9、九樱天下（北京）信息技术有限公司\n\t- 10、万普拉斯科技有限公司【一加手机】\n\t- 11、上海亿保健康管理有限公司\n\t- 12、海尔馨厨【海尔】\n\t- 13、河南大红包电子商务有限公司\n\t- 14、成都顺点科技有限公司\n\t- 15、深圳市怡亚通\n\t- 16、深圳麦亚信科技股份有限公司\n\t- 17、上海博莹科技信息技术有限公司\n\t- 18、中国平安科技有限公司【中国平安】\n\t- 19、杭州知时信息科技有限公司\n\t- 20、博莹科技（上海）有限公司\n\t- 21、成都依能股份有限责任公司\n\t- 22、湖南高阳通联信息技术有限公司\n\t- 23、深圳市邦德文化发展有限公司\n\t- 24、福建阿思可网络教育有限公司\n\t- 25、优信二手车【优信】\n\t- 26、上海悠游堂投资发展股份有限公司【悠游堂】\n\t- 27、北京粉笔蓝天科技有限公司\n\t- 28、中秀科技(无锡)有限公司\n\t- 29、武汉空心科技有限公司\n\t- 30、北京蚂蚁风暴科技有限公司\n\t- 31、四川互宜达科技有限公司\n\t- 32、钱包行云（北京）科技有限公司\n\t- 33、重庆欣才集团\n    - 34、咪咕互动娱乐有限公司【中国移动】\n    - 35、北京诺亦腾科技有限公司\n    - 36、增长引擎(北京)信息技术有限公司\n    - 37、北京英贝思科技有限公司\n    - 38、刚泰集团\n    - 39、深圳泰久信息系统股份有限公司\n    - 40、随行付支付有限公司\n    - 41、广州瀚农网络科技有限公司\n    - 42、享点科技有限公司\n    - 43、杭州比智科技有限公司\n    - 44、圳临界线网络科技有限公司\n    - 45、广州知识圈网络科技有限公司\n    - 46、国誉商业上海有限公司\n    - 47、海尔消费金融有限公司，嗨付、够花【海尔】\n    - 48、广州巴图鲁信息科技有限公司\n    - 49、深圳市鹏海运电子数据交换有限公司\n    - 50、深圳市亚飞电子商务有限公司\n    - 51、上海趣医网络有限公司\n    - 52、聚金资本\n    - 53、北京父母邦网络科技有限公司\n    - 54、中山元赫软件科技有限公司\n    - 55、中商惠民(北京)电子商务有限公司\n    - 56、凯京集团\n    - 57、华夏票联（北京）科技有限公司\n    - 58、拍拍贷【拍拍贷】\n    - 59、北京尚德机构在线教育有限公司\n    - 60、任子行股份有限公司\n    - 61、北京时态电子商务有限公司\n    - 62、深圳卷皮网络科技有限公司\n    - 63、北京安博通科技股份有限公司\n    - 64、未来无线网\n    - 65、厦门瓷禧网络有限公司\n    - 66、北京递蓝科软件股份有限公司\n    - 67、郑州创海软件科技公司\n    - 68、北京国槐信息科技有限公司\n    - 69、浪潮软件集团\n    - 70、多立恒(北京)信息技术有限公司\n    - 71、广州极迅客信息科技有限公司\n    - 72、赫基（中国）集团股份有限公司\n    - 73、海投汇\n    - 74、上海润益创业孵化器管理股份有限公司\n    - 75、汉纳森（厦门）数据股份有限公司\n    - 76、安信信托\n    - 77、岚儒财富\n    - 78、捷道软件\n    - 79、湖北享七网络科技有限公司\n    - 80、湖南创发科技责任有限公司\n    - 81、深圳小安时代互联网金融服务有限公司\n    - 82、湖北享七网络科技有限公司\n    - 83、钱包行云(北京)科技有限公司\n    - 84、360金融【360】\n    - 85、易企秀\n    - 86、摩贝（上海）生物科技有限公司\n    - 87、广东芯智慧科技有限公司\n    - 88、联想集团【联想】\n    - 89、怪兽充电\n    - 90、行圆汽车\n    - 91、深圳店店通科技邮箱公司\n    - 92、京东【京东】\n    - 93、米庄理财\n    - 94、咖啡易融\n    - 95、梧桐诚选\n    - 96、恒大地产【恒大】\n    - 97、昆明龙慧\n    - 98、上海涩瑶软件\n    - 99、易信【网易】\n    - 100、铜板街\n    - 101、杭州云若网络科技有限公司\n    - 102、特百惠（中国）有限公司\n    - 103、常山众卡运力供应链管理有限公司\n    - 104、深圳立创电子商务有限公司\n    - 105、杭州智诺科技股份有限公司\n    - 106、北京云漾信息科技有限公司\n    - 107、深圳市多银科技有限公司\n    - 108、亲宝宝\n    - 109、上海博卡软件科技有限公司\n    - 110、智慧树在线教育平台\n    - 111、米族金融\n    - 112、北京辰森世纪\n    - 113、云南滇医通\n    - 114、广州市分领网络科技有限责任公司\n    - 115、浙江微能科技有限公司\n    - 116、上海馨飞电子商务有限公司\n    - 117、上海宝尊电子商务有限公司\n    - 118、直客通科技技术有限公司\n    - 119、科度科技有限公司\n    - 120、上海数慧系统技术有限公司\n    - 121、我的医药网\n    - 122、多粉平台\n    - 123、铁甲二手机\n    - 124、上海海新得数据技术有限公司\n    - 125、深圳市珍爱网信息技术有限公司【珍爱网】\n    - 126、小蜜蜂\n    - 127、吉荣数科技\n    - 128、上海恺域信息科技有限公司\n    - 129、广州荔支网络有限公司【荔枝FM】\n    - 130、杭州闪宝科技有限公司\n    - 131、北京互联新网科技发展有限公司\n    - 132、誉道科技\n    - 133、山西兆盛房地产开发有限公司\n    - 134、北京蓝睿通达科技有限公司\n    - 135、月亮小屋（中国）有限公司【蓝月亮】\n    - 136、青岛国瑞信息技术有限公司\n    - 137、博雅云计算（北京）有限公司\n    - 138、华泰证券香港子公司\n    - 139、杭州东方通信软件技术有限公司\n    - 140、武汉博晟安全技术股份有限公司\n    - 141、深圳市六度人和科技有限公司\n    - 142、杭州趣维科技有限公司（小影）\n    - 143、宁波单车侠之家科技有限公司【单车侠】\n    - 144、丁丁云康信息科技（北京）有限公司\n    - 145、云钱袋\n    - 146、南京中兴力维\n    - 147、上海矽昌通信技术有限公司\n    - 148、深圳萨科科技\n    - 149、中通服创立科技有限责任公司\n    - 150、深圳市对庄科技有限公司\n    - 151、上证所信息网络有限公司\n    - 152、杭州火烧云科技有限公司【婚礼纪】\n    - 153、天津青芒果科技有限公司【芒果头条】\n    - 154、长飞光纤光缆股份有限公司\n    - 155、世纪凯歌（北京）医疗科技有限公司\n    - 156、浙江霖梓控股有限公司\n    - 157、江西腾飞网络技术有限公司\n    - 158、安迅物流有限公司\n    - 159、肉联网\n    - 160、北京北广梯影广告传媒有限公司\n    - 161、上海数慧系统技术有限公司\n    - 162、大志天成\n    - 163、上海云鹊医\n    - 164、上海云鹊医\n    - 165、墨迹天气【墨迹天气】\n    - 166、上海逸橙信息科技有限公司\n    - 167、沅朋物联\n    - 168、杭州恒生云融网络科技有限公司\n    - 169、绿米联创\n    - 170、重庆易宠科技有限公司\n    - 171、安徽引航科技有限公司（乐职网）\n    - 172、上海数联医信企业发展有限公司\n    - 173、良彬建材\n    - 174、杭州求是同创网络科技有限公司\n    - 175、荷马国际\n    - 176、点雇网\n    - 177、深圳市华星光电技术有限公司\n    - 178、厦门神州鹰软件科技有限公司\n    - 179、深圳市招商信诺人寿保险有限公司\n    - 180、上海好屋网信息技术有限公司\n    - 181、海信集团【海信】\n    - 182、信凌可信息科技（上海）有限公司\n    - 183、长春天成科技发展有限公司\n    - 184、用友金融信息技术股份有限公司【用友】\n    - 185、北京咖啡易融有限公司\n    - 186、国投瑞银基金管理有限公司\n    - 187、晋松(上海)网络信息技术有限公司\n    - 188、深圳市随手科技有限公司【随手记】\n    - 189、深圳水务科技有限公司\n    - 190、易企秀【易企秀】\n    - 191、北京磁云科技\n    - 192、南京蜂泰互联网科技有限公司\n    - 193、章鱼直播\n    - 194、奖多多科技\n    - 195、天津市神州商龙科技股份有限公司\n    - 196、岩心科技\n    - 197、车码科技（北京）有限公司\n    - 198、贵阳市投资控股集团\n    - 199、康旗股份\n    - 200、龙腾出行\n    - 201、杭州华量软件\n    - 202、合肥顶岭医疗科技有限公司\n    - 203、重庆表达式科技有限公司\n    - 204、上海米道信息科技有限公司\n    - 205、北京益友会科技有限公司\n    - 206、北京融贯电子商务有限公司\n    - 207、中国外汇交易中心\n    - 208、中国外运股份有限公司\n    - 209、中国上海晓圈教育科技有限公司\n    - 210、普联软件股份有限公司\n    - 211、北京科蓝软件股份有限公司\n    - 212、江苏斯诺物联科技有限公司\n    - 213、北京搜狐-狐友【搜狐】\n    - 214、新大陆网商金融\n    - 215、山东神码中税信息科技有限公司\n    - 216、河南汇顺网络科技有限公司\n    - 217、北京华夏思源科技发展有限公司\n    - 218、上海东普信息科技有限公司\n    - 219、上海鸣勃网络科技有限公司\n    - 220、广东学苑教育发展有限公司\n    - 221、深圳强时科技有限公司\n    - 222、上海云砺信息科技有限公司\n    - 223、重庆愉客行网络有限公司\n    - 224、数云\n    - 225、国家电网运检部\n    - 226、杭州找趣\n    - 227、浩鲸云计算科技股份有限公司\n    - 228、科大讯飞【科大讯飞】\n    - 229、杭州行装网络科技有限公司\n    - 230、即有分期金融\n    - 231、深圳法司德信息科技有限公司\n    - 232、上海博复信息科技有限公司\n    - 233、杭州云嘉云计算有限公司\n    - 234、有家民宿(有家美宿)\n    - 235、北京赢销通软件技术有限公司\n    - 236、浙江聚有财金融服务外包有限公司\n    - 237、易族智汇(北京)科技有限公司\n    - 238、合肥顶岭医疗科技开发有限公司\n    - 239、车船宝(深圳)旭珩科技有限公司)\n    - 240、广州富力地产有限公司\n    - 241、氢课（上海）教育科技有限公司\n    - 242、武汉氪细胞网络技术有限公司\n    - 243、杭州有云科技有限公司\n    - 244、上海仙豆智能机器人有限公司\n    - 245、拉卡拉支付股份有限公司【拉卡拉】\n    - 246、虎彩印艺股份有限公司\n    - 247、北京数微科技有限公司\n    - 248、广东智瑞科技有限公司\n    - 249、找钢网\n    - 250、九机网\n    - 251、杭州跑跑网络科技有限公司\n    - 252、深圳未来云集\n    - 253、杭州每日给力科技有限公司\n    - 254、上海齐犇信息科技有限公司\n    - 255、滴滴出行【滴滴】\n    - 256、合肥云诊信息科技有限公司\n    - 257、云知声智能科技股份有限公司\n    - 258、南京坦道科技有限公司\n    - 259、爱乐优（二手平台）\n    - 260、猫眼电影（私有化部署）【猫眼电影】\n    - 261、美团大象（私有化部署）【美团大象】\n    - 262、作业帮教育科技（北京）有限公司【作业帮】\n    - 263、北京小年糕互联网技术有限公司\n    - 264、山东矩阵软件工程股份有限公司\n    - 265、陕西国驿软件科技有限公司\n    - 266、君开信息科技\n    - 267、村鸟网络科技有限责任公司\n    - 268、云南国际信托有限公司\n    - 269、金智教育\n    - 270、珠海市筑巢科技有限公司\n    - 271、上海百胜软件股份有限公司\n    - 272、深圳市科盾科技有限公司\n    - 273、哈啰出行【哈啰】\n    - 274、途虎养车【途虎】\n    - 275、卡思优派人力资源集团\n    - 276、南京观为智慧软件科技有限公司\n    - 277、杭州城市大脑科技有限公司\n    - 278、猿辅导【猿辅导】\n    - 279、洛阳健创网络科技有限公司\n    - 280、魔力耳朵\n    - 281、亿阳信通\n    - 282、上海招鲤科技有限公司\n    - 283、四川商旅无忧科技服务有限公司\n    - 284、UU跑腿\n    - 285、北京老虎证券【老虎证券】\n    - 286、悠活省吧（北京）网络科技有限公司\n    - 287、F5未来商店\n    - 288、深圳环阳通信息技术有限公司\n    - 289、遠傳電信\n    - 290、作业帮（北京）教育科技有限公司【作业帮】\n    - 291、成都科鸿智信科技有限公司\n    - 292、北京木屋时代科技有限公司\n    - 293、大学通（哈尔滨）科技有限责任公司\n    - 294、浙江华坤道威数据科技有限公司\n    - 295、吉祥航空【吉祥航空】\n    - 296、南京圆周网络科技有限公司\n    - 297、广州市洋葱omall电子商务\n    - 298、天津联物科技有限公司\n    - 299、跑哪儿科技（北京）有限公司\n    - 300、深圳市美西西餐饮有限公司(喜茶)\n    - 301、平安不动产有限公司【平安】\n    - 302、江苏中海昇物联科技有限公司\n    - 303、湖南牙医帮科技有限公司\n    - 304、重庆民航凯亚信息技术有限公司（易通航）\n    - 305、递易（上海）智能科技有限公司\n    - 306、亚朵\n    - 307、浙江新课堂教育股份有限公司\n    - 308、北京蜂创科技有限公司\n    - 309、德一智慧城市信息系统有限公司\n    - 310、北京翼点科技有限公司\n    - 311、湖南智数新维度信息科技有限公司\n    - 312、北京玖扬博文文化发展有限公司\n    - 313、上海宇珩信息科技有限公司\n    - 314、全景智联（武汉）科技有限公司\n    - 315、天津易客满国际物流有限公司\n    - 316、南京爱福路汽车科技有限公司\n    - 317、我房旅居集团\n    - 318、湛江亲邻科技有限公司\n    - 319、深圳市姜科网络有限公司\n    - 320、青岛日日顺物流有限公司\n    - 321、南京太川信息技术有限公司\n    - 322、美图之家科技有限公司【美图】\n    - 323、南京太川信息技术有限公司\n    - 324、众薪科技（北京）有限公司\n    - 325、武汉安安物联科技有限公司\n    - 326、北京智客朗道网络科技有限公司\n    - 327、深圳市超级猩猩健身管理管理有限公司\n    - 328、重庆达志科技有限公司\n    - 329、上海享评信息科技有限公司\n    - 330、薪得付信息科技\n    - 331、跟谁学\n    - 332、中道（苏州）旅游网络科技有限公司\n    - 333、广州小卫科技有限公司\n    - 334、上海非码网络科技有限公司\n    - 335、途家网网络技术（北京）有限公司【途家】\n    - 336、广州辉凡信息科技有限公司\n    - 337、天维尔信息科技股份有限公司\n    - 338、上海极豆科技有限公司\n    - 339、苏州触达信息技术有限公司\n    - 340、北京热云科技有限公司\n    - 341、中智企服（北京）科技有限公司\n    - 342、易联云计算（杭州）有限责任公司\n    - 343、青岛航空股份有限公司【青岛航空】\n    - 344、山西博睿通科技有限公司\n    - 345、网易杭州网络有限公司【网易】\n    - 346、北京果果乐学科技有限公司\n    - 347、百望股份有限公司\n    - 348、中保金服（深圳）科技有限公司\n    - 349、天津运友物流科技股份有限公司\n    - 350、广东创能科技股份有限公司\n    - 351、上海倚博信息科技有限公司\n    - 352、深圳百果园实业（集团）股份有限公司\n    - 353、广州细刻网络科技有限公司\n    - 354、武汉鸿业众创科技有限公司\n    - 355、金锡科技（广州）有限公司\n    - 356、易瑞国际电子商务有限公司\n    - 357、奇点云\n    - 358、中视信息科技有限公司\n    - 359、开源项目:datax-web\n    - 360、云知声智能科技股份有限公司\n    - 361、开源项目:bboss\n    - 362、成都深驾科技有限公司\n    - 363、FunPlus【趣加】\n    - 364、杭州创匠信科技有限公司\n    - 365、龙匠（北京）科技发展有限公司\n    - 366、广州一链通互联网科技有限公司\n    - 367、上海星艾网络科技有限公司\n    - 368、虎博网络技术(上海)有限公司\n    - 369、青岛优米信息技术有限公司\n    - 370、八维通科技有限公司\n    - 371、烟台合享智星数据科技有限公司\n    - 372、东吴证券股份有限公司\n    - 373、中通云仓股份有限公司【中通】\n    - 374、北京加菲猫科技有限公司\n    - 375、北京匠心演绎科技有限公司\n    - 376、宝贝走天下\n    - 377、厦门众库科技有限公司\n    - 378、海通证券数据中心\n    - 389、湖南快乐通宝小额贷款有限公司\n    - 380、浙江大华技术股份有限公司\n    - 381、杭州魔筷科技有限公司\n    - 382、青岛掌讯通区块链科技有限公司\n    - 383、新大陆金融科技\n    - 384、常州玺拓软件科技有限公司\n    - 385、北京正保网格教育科技有限公司\n    - 386、统一企业（中国）投资有限公司【统一】\n    - 387、微革网络科技有限公司\n    - 388、杭州融易算科技有限公司\n    - 399、青岛上啥班网络科技有限公司\n    - 390、京东酒世界\n    - 391、杭州爱博仕科技有限公司\n    - 392、五星金服控股有限公司\n    - 393、福建乐摩物联科技有限公司\n    - 394、百炼智能科技有限公司\n    - 395、山东能源数智云科技有限公司\n    - 396、招商局能源运输股份有限公司\n    - 397、三一集团【三一】\n    - 398、东巴文（深圳）健康管理有限公司\n    - 399、索易软件\n    - 400、深圳市宁远科技有限公司\n    - 401、熙牛医疗\n    - 402、南京智鹤电子科技有限公司\n    - 403、嘀嗒出行【嘀嗒出行】\n    - 404、广州虎牙信息科技有限公司【虎牙】\n    - 405、广州欧莱雅百库网络科技有限公司【欧莱雅】\n    - 406、微微科技有限公司\n    - 407、我爱我家房地产经纪有限公司【我爱我家】\n    - 408、九号发现\n    - 409、薪人薪事\n    - 410、武汉氪细胞网络技术有限公司\n    - 411、广州市斯凯奇商业有限公司\n    - 412、微淼商学院\n    - 413、杭州车盛科技有限公司\n    - 414、深兰科技（上海）有限公司\n    - 415、安徽中科美络信息技术有限公司\n    - 416、比亚迪汽车工业有限公司【比亚迪】\n    - 417、湖南小桔信息技术有限公司\n    - 418、安徽科大国创软件科技有限公司\n    - 419、克而瑞\n    - 420、陕西云基华海信息技术有限公司\n    - 421、安徽深宁科技有限公司\n    - 422、广东康爱多数字健康有限公司\n    - 423、嘉里电子商务\n    - 424、上海时代光华教育发展有限公司\n    - 425、CityDo\n    - 426、上海禹知信息科技有限公司\n    - 427、广东智瑞科技有限公司\n    - 428、西安爱铭网络科技有限公司\n    - 429、心医国际数字医疗系统(大连)有限公司\n    - 430、乐其电商\n    - 431、锐达科技\n    - 432、天津长城滨银汽车金融有限公司\n    - 433、代码网\n    - 434、东莞市东城乔伦软件开发工作室\n    - 435、浙江百应科技有限公司\n    - 436、上海力爱帝信息技术有限公司(Red E)\n    - 437、云徙科技有限公司\n    - 438、北京康智乐思网络科技有限公司【大姨吗APP】\n    - 439、安徽开元瞬视科技有限公司\n    - 440、立方\n    - 441、厦门纵行科技\n    - 442、乐山-菲尼克斯半导体有限公司\n    - 443、武汉光谷联合集团有限公司\n    - 444、上海金仕达软件科技有限公司\n    - 445、深圳易世通达科技有限公司\n    - 446、爱动超越人工智能科技（北京）有限责任公司\n    - 447、迪普信（北京）科技有限公司\n    - 448、掌站科技（北京）有限公司\n    - 449、深圳市华云中盛股份有限公司\n    - 450、上海原圈科技有限公司\n    - 451、广州赞赏信息科技有限公司\n    - 452、Amber Group\n    - 453、德威国际货运代理（上海）公司\n    - 454、浙江杰夫兄弟智慧科技有限公司\n    - 455、信也科技\n    - 456、开思时代科技（深圳）有限公司\n    - 457、大连槐德科技有限公司\n    - 458、同程生活\n    - 459、松果出行\n    - 460、企鹅杏仁集团\n    - 461、宁波科云信息科技有限公司\n    - 462、上海格蓝威驰信息科技有限公司\n    - 463、杭州趣淘鲸科技有限公司\n    - 464、湖州市数字惠民科技有限公司\n    - 465、乐普（北京）医疗器械股份有限公司\n    - 466、广州市晴川高新技术开发有限公司\n    - 467、山西缇客科技有限公司\n    - 468、徐州卡西穆电子商务有限公司\n    - 469、格创东智科技有限公司\n    - 470、世纪龙信息网络有限责任公司\n    - 471、邦道科技有限公司\n    - 472、河南中盟新云科技股份有限公司\n    - 473、横琴人寿保险有限公司\n    - 474、上海海隆华钟信息技术有限公司\n    - 475、上海久湛\n    - 476、上海仙豆智能机器人有限公司\n    - 477、广州汇尚网络科技有限公司\n    - 478、深圳市阿卡索资讯股份有限公司\n    - 479、青岛佳家康健康管理有限责任公司\n    - 480、蓝城兄弟\n    - 481、成都天府通金融服务股份有限公司\n    - 482、深圳云镖网络科技有限公司\n    - 483、上海影创科技\n    - 484、成都艾拉物联\n    - 485、北京客邻尚品网络技术有限公司\n    - 486、IT实战联盟\n    - 487、杭州尤拉夫科技有限公司\n    - 488、中大检测(湖南)股份有限公司\n    - 489、江苏电老虎工业互联网股份有限公司\n    - 490、上海助通信息科技有限公司\n    - 491、北京符节科技有限公司\n    - 492、杭州英祐科技有限公司\n    - 493、江苏电老虎工业互联网股份有限公司\n    - 494、深圳市点猫科技有限公司\n    - 495、杭州天音\n    - 496、深圳市二十一科技互联网有限公司\n    - 497、海南海口翎度科技\n    - 498、北京小趣智品科技有限公司\n    - 499、广州石竹计算机软件有限公司\n    - 500、深圳市惟客数据科技有限公司\n    - 501、中国医疗器械有限公司\n    - 502、上海云谦科技有限公司\n    - 503、上海磐农信息科技有限公司\n    - 504、广州领航食品有限公司\n    - 505、青岛掌讯通区块链科技有限公司\n    - 506、北京新网数码信息技术有限公司\n    - 507、超体信息科技(深圳)有限公司\n    - 508、长沙店帮手信息科技有限公司\n    - 509、上海助弓装饰工程有限公司\n    - 510、杭州寻联网络科技有限公司\n    - 511、成都大淘客科技有限公司\n    - 512、松果出行\n    - 513、深圳市唤梦科技有限公司\n    - 514、上汽集团商用车技术中心\n    - 515、北京中航讯科技股份有限公司\n    - 516、北龙中网(北京)科技有限责任公司\n    - 517、前海超级前台(深圳)信息技术有限公司\n    - 518、上海中商网络股份有限公司\n    - 519、上海助通信息科技有限公司\n    - 520、宁波聚臻智能科技有限公司\n    - 521、上海零动数码科技股份有限公司\n    - 522、浙江学海教育科技有限公司\n    - 523、聚学云(山东)信息技术有限公司\n    - 524、多氟多新材料股份有限公司\n    - 525、智慧眼科技股份有限公司\n    - 526、广东智通人才连锁股份有限公司\n    - 527、世纪开元智印互联科技集团股份有限公司\n    - 528、北京理想汽车【理想汽车】\n    - 529、巽逸科技(重庆)有限公司\n    - 530、义乌购电子商务有限公司\n    - 531、深圳市珂莱蒂尔服饰有限公司\n    - 532、江西国泰利民信息科技有限公司\n    - 533、广西广电大数据科技有限公司\n    - 534、杭州艾麦科技有限公司\n    - 535、广州小滴科技有限公司\n    - 536、佳缘科技股份有限公司\n    - 537、上海深擎信息科技有限公司\n    - 538、武商网\n    - 539、福建民本信息科技有限公司\n    - 540、杭州惠合信息科技有限公司\n    - 541、厦门爱立得科技有限公司\n    - 542、成都拟合未来科技有限公司\n    - 543、宁波聚臻智能科技有限公司\n    - 544、广东百慧科技有限公司\n    - 545、笨马网络\n    - 546、深圳市信安数字科技有限公司\n    - 547、深圳市思乐数据技术有限公司\n    - 548、四川绿源集科技有限公司\n    - 549、湖南云医链生物科技有限公司\n    - 550、杭州源诚科技有限公司\n    - 551、北京开课吧科技有限公司\n    - 552、北京多来点信息技术有限公司\n    - 553、JEECG BOOT低代码开发平台\n    - 554、苏州同元软控信息技术有限公司\n    - 555、江苏大泰信息技术有限公司\n    - 556、北京大禹汇智\n    - 557、北京盛哲科技有限公司\n    - 558、广州钛动科技有限公司\n    - 559、北京大禹汇智科技有限公司\n    - 560、湖南鼎翰文化股份有限公司\n    - 561、苏州安软信息科技有限公司\n    - 562、芒果tv\n    - 563、上海艺赛旗软件股份有限公司\n    - 564、中盈优创资讯科技有限公司\n    - 565、乐乎公寓\n    - 566、启明信息\n    - 567、苏州安软\n    - 568、南京富金的软件科技有限公司\n    - 569、深圳市新科聚合网络技术有限公司\n    - 570、你好现在(北京)科技股份有限公司\n    - 571、360考试宝典\n    - 572、北京一零科技有限公司\n    - 573、厦门星纵信息\n    - 574、Dalligent Solusi Indonesia\n    - 575、深圳华普物联科技有限公司\n    - 576、深圳行健自动化股份有限公司\n    - 577、深圳市富融信息科技服务有限公司\n    - 578、蓝鸟云\n    - ……\n\n> 更多接入的公司，欢迎在 [登记地址](https://github.com/xuxueli/xxl-job/issues/1 ) 登记，登记仅仅为了产品推广。\n\n欢迎大家的关注和使用，XXL-JOB也将拥抱变化，持续发展。\n\n\n## Contributing\nContributions are welcome! Open a pull request to fix a bug, or open an [Issue](https://github.com/xuxueli/xxl-job/issues/) to discuss a new feature or change.\n\n欢迎参与项目贡献！比如提交PR修复一个bug，或者新建 [Issue](https://github.com/xuxueli/xxl-job/issues/) 讨论新特性或者变更。\n\n\n## Copyright and License\nThis product is open source and free, and will continue to provide free community technical support. Individual or enterprise users are free to access and use.\n\n- Licensed under the GNU General Public License (GPL) v3.\n- Copyright (c) 2015-present, xuxueli.\n\n产品开源免费，并且将持续提供免费的社区技术支持。个人或企业内部可自由的接入和使用。如有需要可邮件联系作者免费获取项目授权。\n\n\n## Donate\nNo matter how much the donation amount is enough to express your thought, thank you very much ：）     [To donate](https://www.xuxueli.com/page/donate.html )\n\n无论捐赠金额多少都足够表达您这份心意，非常感谢 ：）      [前往捐赠](https://www.xuxueli.com/page/donate.html )\n']
Small,A small framework to split app into small parts,5021,https://github.com/wequick/Small,master,['![small-header][header]\n\n世界那么大，组件那么小。Small，做最轻巧的跨平台插件化框架。\n\n[Android](Android) API 9(2.3)+  [iOS](iOS) 7.0+\n\n[![CI Status](http://img.shields.io/travis/wequick/Small.svg?style=flat)](https://travis-ci.org/wequick/Small)\n[![License Apache2.0](https://img.shields.io/hexpm/l/plug.svg)][license]\n\n官网：http://code.wequick.net/Small\n\n## 架构\n\n![small-arch][arch]\n\n## 快照\n\n![small-snapshot][snapshot]\n\n## 入门\n\n* [Android](Android)\n* [iOS](iOS)\n\n## 进阶\n\n* [原理介绍][wiki]\n* [贡献指南][CG]\n* [加入开发][CLA]\n\n![small-footer][footer]\n\n[header]: http://code.wequick.net/assets/images/small-header.png\n[footer]: http://code.wequick.net/assets/images/small-footer.png\n[arch]: http://code.wequick.net/assets/images/small-architecture.png\n[snapshot]: http://code.wequick.net/assets/anims/small-upgrade.gif\n[license]: https://raw.githubusercontent.com/wequick/Small/master/LICENSE\n[wiki]: https://github.com/wequick/Small/wiki\n[android-tour]: https://github.com/wequick/Small/tree/master/Android\n[iOS-tour]: https://github.com/wequick/Small/tree/master/iOS\n[CG]: https://github.com/wequick/Small/blob/master/%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97.md\n[CLA]: https://goo.gl/forms/HUdWjUrtOxQ3kX7A2\n']
x-deeplearning,An industrial deep learning framework for high-dimension sparse data,4150,https://github.com/alibaba/x-deeplearning,master,['# 概述 \n#### X-DeepLearning(简称XDL)是面向高维稀疏数据场景（如广告/推荐/搜索等）深度优化的一整套解决方案。XDL1.2版本已于近期发布，主要特性包括：\n* 针对大batch/低并发场景的性能优化：在此类场景下性能提升50-100%\n* 存储及通信优化：参数无需人工干预自动全局分配，请求合并，彻底消除ps的计算/存储/通信热点\n* 完整的流式训练特性：包括特征准入，特征淘汰，模型增量导出，特征counting统计等  \n* Fix了若干1.0中的小bugs  \n\n\n完整介绍请参考[XDL1.2 release note](https://github.com/alibaba/x-deeplearning/releases/tag/v1.2)\n\n### 1. XDL训练引擎\n\n* [编译安装](https://github.com/alibaba/x-deeplearning/wiki/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85)\n* [快速开始](https://github.com/alibaba/x-deeplearning/wiki/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B)\n* [使用指南](https://github.com/alibaba/x-deeplearning/wiki/%E7%94%A8%E6%88%B7%E6%96%87%E6%A1%A3)\n\n### 2. XDL算法解决方案\n* [快速开始](https://github.com/alibaba/x-deeplearning/wiki/XDL%E7%AE%97%E6%B3%95%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88)\n\n### 3. Blaze预估引擎\n* [快速开始](https://github.com/alibaba/x-deeplearning/blob/master/blaze/README.md)\n\n### 4. 深度树匹配模型 TDM 匹配召回引擎 \n* [快速开始](https://github.com/alibaba/x-deeplearning/wiki/TDMServing)\n\n# 联系我们\n* 欢迎通过[issue](https://github.com/alibaba/x-deeplearning/issues)和邮件组(xdl-opensource@list.alibaba-inc.com\n)联系我们\n* 我们正在寻求合作伙伴，有志于获得XDL企业级支持计划的公司或团队，可以联系xdl-partner@list.alibaba-inc.com，与我们进一步商谈。\n\n# FAQ\n[常见问题](https://github.com/alibaba/x-deeplearning/wiki/FAQ)\n\n# License\nXDL使用[Apache-2.0](https://github.com/alibaba/x-deeplearning/blob/master/xdl/LICENSE)许可\n\n# 致谢\nXDL项目由阿里妈妈事业部荣誉出品，核心贡献团队包括阿里妈妈工程平台、算法平台、定向广告技术团队、搜索广告技术团队等，同时XDL项目也得到了阿里巴巴计算平台事业部（特别是PAI团队）的帮助。\n\n']
Newtonsoft.Json,Json.NET is a popular high-performance JSON framework for .NET,9905,https://github.com/JamesNK/Newtonsoft.Json,master,['# ![Logo](Doc/icons/logo.jpg) Json.NET\n\n[![NuGet version (Newtonsoft.Json)](https://img.shields.io/nuget/v/Newtonsoft.Json.svg?style=flat-square)](https://www.nuget.org/packages/Newtonsoft.Json/)\n[![Build status](https://dev.azure.com/jamesnk/Public/_apis/build/status/JamesNK.Newtonsoft.Json?branchName=master)](https://dev.azure.com/jamesnk/Public/_build/latest?definitionId=8)\n\n- [Homepage](https://www.newtonsoft.com/json)\n- [Documentation](https://www.newtonsoft.com/json/help)\n- [NuGet Package](https://www.nuget.org/packages/Newtonsoft.Json)\n- [Release Notes](https://github.com/JamesNK/Newtonsoft.Json/releases)\n- [Contributing Guidelines](CONTRIBUTING.md)\n- [License](LICENSE.md)\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/json.net)\n']
revel,A high productivity, full-stack web framework for the Go language.,12850,https://github.com/revel/revel,master,['# Revel Framework\n\n[![Build Status](https://secure.travis-ci.org/revel/revel.svg?branch=master)](https://travis-ci.org/revel/revel) \n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n[![Go Report Card](https://goreportcard.com/badge/github.com/revel/revel)](https://goreportcard.com/report/github.com/revel/revel)\n\nA high productivity, full-stack web framework for the [Go language](https://www.golang.org).\n\nCurrent Version: 1.1.0 (2022-04-11)\n\n**Supports go.mod package management**\n\n## Quick Start\n\nInstall Revel:\n\n\tgo install github.com/revel/cmd/revel@latest\n\n\nCreate & Run your app:\n\n\trevel new -a my-app -r\n\nOpen http://localhost:9000 in your browser and you should see "It works!"\n\n\n## Community\n\n* [Gitter](https://gitter.im/revel/community)\n* [StackOverflow](https://stackoverflow.com/questions/tagged/revel)\n\n\n## Learn More\n\n* [Manual, Samples, Godocs, etc](https://revel.github.io)\n* [Apps using Revel](https://github.com/revel/revel/wiki/Apps-in-the-Wild)\n* [Articles Featuring Revel](https://github.com/revel/revel/wiki/Articles)\n\n## Contributing\n\n* [Contributing Code Guidelines](https://github.com/revel/revel/blob/master/CONTRIBUTING.md)\n* [Revel Contributors](https://github.com/revel/revel/graphs/contributors)\n\n## Contributors\n\n[![](https://sourcerer.io/fame/notzippy/revel/revel/images/0)](https://sourcerer.io/fame/notzippy/revel/revel/links/0)\n[![](https://sourcerer.io/fame/notzippy/revel/revel/images/1)](https://sourcerer.io/fame/notzippy/revel/revel/links/1)\n[![](https://sourcerer.io/fame/notzippy/revel/revel/images/2)](https://sourcerer.io/fame/notzippy/revel/revel/links/2)\n[![](https://sourcerer.io/fame/notzippy/revel/revel/images/3)](https://sourcerer.io/fame/notzippy/revel/revel/links/3)\n[![](https://sourcerer.io/fame/notzippy/revel/revel/images/4)](https://sourcerer.io/fame/notzippy/revel/revel/links/4)\n[![](https://sourcerer.io/fame/notzippy/revel/revel/images/5)](https://sourcerer.io/fame/notzippy/revel/revel/links/5)\n[![](https://sourcerer.io/fame/notzippy/revel/revel/images/6)](https://sourcerer.io/fame/notzippy/revel/revel/links/6)\n[![](https://sourcerer.io/fame/notzippy/revel/revel/images/7)](https://sourcerer.io/fame/notzippy/revel/revel/links/7)\n']
axum,Ergonomic and modular web framework built with Tokio, Tower, and Hyper,9032,https://github.com/tokio-rs/axum,main,['axum/README.md']
embark,Framework for serverless Decentralized Applications using Ethereum, IPFS and other platforms,3733,https://github.com/embarklabs/embark,master,['packages/embark/README.md']
lisk-sdk,🔩 Lisk software development kit,2779,https://github.com/LiskHQ/lisk-sdk,development,['./sdk/README.md']
after.js,Next.js-like framework for server-rendered React apps built with React Router,4099,https://github.com/jaredpalmer/after.js,master,['./packages/after.js/README.md']
napi-rs,A framework for building compiled Node.js add-ons in Rust via Node-API,3458,https://github.com/napi-rs/napi-rs,main,['crates/napi/README.md']
CS-Interview-Knowledge-Map,Build the best interview map. The current content includes JS, network, browser related, performance optimization, security, framework, Git, data structure, algorithm, etc.,18089,https://github.com/InterviewMap/CS-Interview-Knowledge-Map,master,['<img align="center" src=\'./InterviewMap.png\' />\n\n<h1 align="center">\n  Interview Map\n</h1>\n\n<h4 align="center">这是一份能让你更好准备下一次面试的图谱</h4>\n\n[English Version](./README-EN.md)\n\n## 阅读\n\n| 微信扫码关注公众号，订阅更多精彩内容                                                                 | 加笔者微信进群与大厂大佬讨论技术                                                                    |\n| ---------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------- |\n| <img src="https://yck-1254263422.cos.ap-shanghai.myqcloud.com/20191220223702.jpeg" width="500px;" /> | <img src="https://yck-1254263422.cos.ap-shanghai.myqcloud.com/20191220224224.png" width="260px;" /> |\n\n[线上版本阅读更清晰](https://yuchengkai.cn/docs/zh/)\n\n## 小册\n\n很荣幸在「掘金」平台发售了这个开源项目的进阶版面试小册「前端面试之道」。\n\n<p align="center">\n  <img src=\'https://user-gold-cdn.xitu.io/2018/12/25/167e354c41bbe3ef?w=750&h=1334&f=jpeg&s=110064\' width=\'400\' />\n</p>\n\n如果需要用一句话来介绍这本小册的话，「**一年磨一剑**」应该是最好的答案了。\n\n为什么这样说呢？在出小册之前，我花了半年的时间做了一个这个开源项目。在半年的时间里，我收集了大量的一线大厂面试题，通过大数据统计出了近百个常考知识点，然后根据这些知识点写成了**近十万字**的内容。\n\n![](https://yck-1254263422.cos.ap-shanghai.myqcloud.com/blog/2019-06-01-042717.png)\n\n这本小册是基于本开源项目重新写的一份前端面试书籍（目前已经写作三个月，预计成品需要五个月），对原本的内容进行了大幅度的优化，并且新增了很多新的内容。这本小册可以说是一线互联网大厂的面试精华总结，同时还包含了如何写简历和面试技巧的内容，能够帮助你省时省力地准备面试，让找工作不再是一个难题。\n\n当然小册面向的群体不单单是求职者，同时也适合初级进阶，中级查漏补缺。如果你是一名面试官的话，说不定这本小册也能给你带来一些灵感。\n\n面试是每个程序员都绕不开的坎，虽然这本小册不能帮你一夜之间技术一蹴而就，但是如果你能**细细阅读**的话，绝对能让你醍醐灌顶。\n\n如果你对于内容不放心的话，可以看一下这两位业内大佬的评价，他们都是仔细读过小册后才给出的一个推荐。\n\n![](https://yck-1254263422.cos.ap-shanghai.myqcloud.com/blog/2019-06-01-042719.png)\n\n![](https://yck-1254263422.cos.ap-shanghai.myqcloud.com/blog/2019-06-01-042722.png)\n\n## 贡献\n\n如果你发现知识点内容有出错或者代码有 Bug，欢迎你提交英文 [issue](https://github.com/InterviewMap/CS-Interview-Knowledge-Map/issues/new)，如果你英文不好的话，请在 [该 issue](https://github.com/InterviewMap/CS-Interview-Knowledge-Map/issues/18) 中讨论\n\n如果你认为有一个不错的知识点或者也想参与翻译校对，欢迎提交 [PR](https://github.com/InterviewMap/CS-Interview-Knowledge-Map/pulls)，或者也可以联系我 <zx597813039@gmail.com>\n\n## 协议\n\n[MIT](LICENSE). Copyright (c)\n']
ZLMediaKit,WebRTC/RTSP/RTMP/HTTP/HLS/HTTP-FLV/WebSocket-FLV/HTTP-TS/HTTP-fMP4/WebSocket-TS/WebSocket-fMP4/GB28181/SRT server and client framework based on C++11,8977,https://github.com/ZLMediaKit/ZLMediaKit,master,['![logo](https://raw.githubusercontent.com/ZLMediaKit/ZLMediaKit/master/www/logo.png)\n\n# 一个基于C++11的高性能运营级流媒体服务框架\n\n[![](https://img.shields.io/badge/license-MIT-green.svg)](https://github.com/ZLMediaKit/ZLMediaKit/blob/master/LICENSE)\n[![](https://img.shields.io/badge/language-c++-red.svg)](https://en.cppreference.com/)\n[![](https://img.shields.io/badge/platform-linux%20|%20macos%20|%20windows-blue.svg)](https://github.com/ZLMediaKit/ZLMediaKit)\n[![](https://img.shields.io/badge/PRs-welcome-yellow.svg)](https://github.com/ZLMediaKit/ZLMediaKit/pulls)\n\n[![](https://github.com/ZLMediaKit/ZLMediaKit/actions/workflows/android.yml/badge.svg)](https://github.com/ZLMediaKit/ZLMediaKit)\n[![](https://github.com/ZLMediaKit/ZLMediaKit/actions/workflows/linux.yml/badge.svg)](https://github.com/ZLMediaKit/ZLMediaKit)\n[![](https://github.com/ZLMediaKit/ZLMediaKit/actions/workflows/macos.yml/badge.svg)](https://github.com/ZLMediaKit/ZLMediaKit)\n[![](https://github.com/ZLMediaKit/ZLMediaKit/actions/workflows/windows.yml/badge.svg)](https://github.com/ZLMediaKit/ZLMediaKit)\n\n[![](https://github.com/ZLMediaKit/ZLMediaKit/actions/workflows/docker.yml/badge.svg)](https://hub.docker.com/r/zlmediakit/zlmediakit/tags)\n[![](https://img.shields.io/docker/pulls/zlmediakit/zlmediakit)](https://hub.docker.com/r/zlmediakit/zlmediakit/tags)\n\n## 项目特点\n\n- 基于C++11开发，避免使用裸指针，代码稳定可靠，性能优越。\n- 支持多种协议(RTSP/RTMP/HLS/HTTP-FLV/WebSocket-FLV/GB28181/HTTP-TS/WebSocket-TS/HTTP-fMP4/WebSocket-fMP4/MP4/WebRTC),支持协议互转。\n- 使用多路复用/多线程/异步网络IO模式开发，并发性能优越，支持海量客户端连接。\n- 代码经过长期大量的稳定性、性能测试，已经在线上商用验证已久。\n- 支持linux、macos、ios、android、windows全平台。\n- 支持x86、arm、risc-v、mips、龙芯、申威等指令集平台。\n- 支持画面秒开、极低延时([500毫秒内，最低可达100毫秒](https://github.com/ZLMediaKit/ZLMediaKit/wiki/%E5%BB%B6%E6%97%B6%E6%B5%8B%E8%AF%95))。\n- 提供完善的标准[C API](https://github.com/ZLMediaKit/ZLMediaKit/tree/master/api/include),可以作SDK用，或供其他语言调用。\n- 提供完整的[MediaServer](https://github.com/ZLMediaKit/ZLMediaKit/tree/master/server)服务器，可以免开发直接部署为商用服务器。\n- 提供完善的[restful api](https://github.com/ZLMediaKit/ZLMediaKit/wiki/MediaServer%E6%94%AF%E6%8C%81%E7%9A%84HTTP-API)以及[web hook](https://github.com/ZLMediaKit/ZLMediaKit/wiki/MediaServer%E6%94%AF%E6%8C%81%E7%9A%84HTTP-HOOK-API)，支持丰富的业务逻辑。\n- 打通了视频监控协议栈与直播协议栈，对RTSP/RTMP支持都很完善。\n- 全面支持H265/H264/AAC/G711/OPUS。\n- 功能完善，支持集群、按需转协议、按需推拉流、先播后推、断连续推等功能。\n- 极致性能，单机10W级别播放器，100Gb/s级别io带宽能力。\n- 极致体验，[独家特性](https://github.com/ZLMediaKit/ZLMediaKit/wiki/ZLMediakit%E7%8B%AC%E5%AE%B6%E7%89%B9%E6%80%A7%E4%BB%8B%E7%BB%8D)\n- [谁在使用zlmediakit?](https://github.com/ZLMediaKit/ZLMediaKit/issues/511)\n- 全面支持ipv6网络\n\n## 项目定位\n\n- 移动嵌入式跨平台流媒体解决方案。\n- 商用级流媒体服务器。\n- 网络编程二次开发SDK。\n\n\n## 功能清单\n### 功能一览\n<img width="800" alt="功能一览" src="https://user-images.githubusercontent.com/11495632/190864440-91c45f8f-480f-43db-8110-5bb44e6300ff.png">\n\n- RTSP[S]\n  - RTSP[S] 服务器，支持RTMP/MP4/HLS转RTSP[S],支持亚马逊echo show这样的设备\n  - RTSP[S] 播放器，支持RTSP代理，支持生成静音音频\n  - RTSP[S] 推流客户端与服务器\n  - 支持 `rtp over udp` `rtp over tcp` `rtp over http` `rtp组播`  四种RTP传输方式 \n  - 服务器/客户端完整支持Basic/Digest方式的登录鉴权，全异步可配置化的鉴权接口\n  - 支持H265编码\n  - 服务器支持RTSP推流(包括`rtp over udp` `rtp over tcp`方式)\n  - 支持H264/H265/AAC/G711/OPUS/MJPEG编码，其他编码能转发但不能转协议\n\n- RTMP[S]\n  - RTMP[S] 播放服务器，支持RTSP/MP4/HLS转RTMP\n  - RTMP[S] 发布服务器，支持录制发布流\n  - RTMP[S] 播放器，支持RTMP代理，支持生成静音音频\n  - RTMP[S] 推流客户端\n  - 支持http[s]-flv直播\n  - 支持websocket-flv直播\n  - 支持H264/H265/AAC/G711/OPUS编码，其他编码能转发但不能转协议\n  - 支持[RTMP-H265](https://github.com/ksvc/FFmpeg/wiki)\n  - 支持[RTMP-OPUS](https://github.com/ZLMediaKit/ZLMediaKit/wiki/RTMP%E5%AF%B9H265%E5%92%8COPUS%E7%9A%84%E6%94%AF%E6%8C%81)\n\n- HLS\n  - 支持HLS文件生成，自带HTTP文件服务器\n  - 通过cookie追踪技术，可以模拟HLS播放为长连接，可以实现HLS按需拉流、播放统计等业务\n  - 支持HLS播发器，支持拉流HLS转rtsp/rtmp/mp4\n  - 支持H264/H265/AAC/G711/OPUS编码\n  \n- TS\n  - 支持http[s]-ts直播\n  - 支持ws[s]-ts直播\n  - 支持H264/H265/AAC/G711/OPUS编码\n  \n- fMP4\n  - 支持http[s]-fmp4直播\n  - 支持ws[s]-fmp4直播\n  - 支持H264/H265/AAC/G711/OPUS/MJPEG编码\n\n- HTTP[S]与WebSocket\n  - 服务器支持`目录索引生成`,`文件下载`,`表单提交请求`\n  - 客户端提供`文件下载器(支持断点续传)`,`接口请求器`,`文件上传器`\n  - 完整HTTP API服务器，可以作为web后台开发框架\n  - 支持跨域访问\n  - 支持http客户端、服务器cookie\n  - 支持WebSocket服务器和客户端\n  - 支持http文件访问鉴权\n\n- GB28181与RTP推流\n  - 支持UDP/TCP RTP(PS/TS/ES)推流服务器，可以转换成RTSP/RTMP/HLS等协议\n  - 支持RTSP/RTMP/HLS等协议转rtp推流客户端，支持TCP/UDP模式，提供相应restful api，支持主动被动方式\n  - 支持H264/H265/AAC/G711/OPUS编码\n  - 支持es/ps/ts/ehome rtp推流\n  - 支持es/ps rtp转推\n  - 支持GB28181主动拉流模式\n\n- MP4点播与录制\n  - 支持录制为FLV/HLS/MP4\n  - RTSP/RTMP/HTTP-FLV/WS-FLV支持MP4文件点播，支持seek\n  - 支持H264/H265/AAC/G711/OPUS编码\n  \n- WebRTC\n  - 支持WebRTC推流，支持转其他协议\n  - 支持WebRTC播放，支持其他协议转WebRTC\n  - 支持双向echo test     \n  - 支持simulcast推流\n  - 支持上下行rtx/nack丢包重传\n  - **支持单端口、多线程、客户端网络连接迁移(开源界唯一)**。\n  - 支持TWCC rtcp动态调整码率\n  - 支持remb/pli/sr/rr rtcp\n  - 支持rtp扩展解析\n  - 支持GOP缓冲，webrtc播放秒开\n  - 支持datachannel\n  - 支持webrtc over tcp模式\n  - 优秀的nack、jitter buffer算法, 抗丢包能力卓越\n- [SRT支持](./srt/srt.md)\n- 其他\n  - 支持丰富的restful api以及web hook事件 \n  - 支持简单的telnet调试\n  - 支持配置文件热加载\n  - 支持流量统计、推拉流鉴权等事件\n  - 支持虚拟主机,可以隔离不同域名\n  - 支持按需拉流，无人观看自动关断拉流\n  - 支持先播放后推流，提高及时推流画面打开率\n  - 提供完整强大的c api sdk\n  - 支持FFmpeg拉流代理任意格式的流\n  - 支持http api生成并返回实时截图\n  - 支持按需解复用、转协议，当有人观看时才开启转协议，降低cpu占用率\n  - 支持溯源模式的集群部署，溯源方式支持rtsp/rtmp/hls/http-ts, 边沿站支持hls, 源站支持多个(采用round robin方式溯源)\n  - rtsp/rtmp/webrtc推流异常断开后，可以在超时时间内重连推流，播放器无感知\n  \n\n## 编译以及测试\n**编译前务必仔细参考wiki:[快速开始](https://github.com/ZLMediaKit/ZLMediaKit/wiki/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B)操作!!!**\n\n## 怎么使用\n\n 你有三种方法使用ZLMediaKit，分别是：\n\n - 1、使用c api，作为sdk使用，请参考[这里](https://github.com/ZLMediaKit/ZLMediaKit/tree/master/api/include).\n - 2、作为独立的流媒体服务器使用，不想做c/c++开发的，可以参考 [restful api](https://github.com/ZLMediaKit/ZLMediaKit/wiki/MediaServer支持的HTTP-API) 和 [web hook](https://github.com/ZLMediaKit/ZLMediaKit/wiki/MediaServer支持的HTTP-HOOK-API ).\n - 3、如果想做c/c++开发，添加业务逻辑增加功能，可以参考这里的[测试程序](https://github.com/ZLMediaKit/ZLMediaKit/tree/master/tests).\n\n## Docker 镜像\n\n你可以从Docker Hub下载已经编译好的镜像并启动它：\n\n```bash\n#此镜像为github持续集成自动编译推送，跟代码(master分支)保持最新状态\ndocker run -id -p 1935:1935 -p 8080:80 -p 8443:443 -p 8554:554 -p 10000:10000 -p 10000:10000/udp -p 8000:8000/udp -p 9000:9000/udp zlmediakit/zlmediakit:master\n```\n\n你也可以根据Dockerfile编译镜像：\n\n```bash\nbash build_docker_images.sh\n```\n\n## 合作项目\n\n - 可视化管理网站\n    - [最新的前后端分离web项目,支持webrtc播放](https://github.com/langmansh/AKStreamNVR)\n    - [基于ZLMediaKit主线的管理WEB网站](https://gitee.com/kkkkk5G/MediaServerUI) \n    - [基于ZLMediaKit分支的管理WEB网站](https://github.com/chenxiaolei/ZLMediaKit_NVR_UI)\n    - [一个非常漂亮的可视化后台管理系统](https://github.com/MingZhuLiu/ZLMediaServerManagent)\n    \n - 流媒体管理平台\n   - [GB28181完整解决方案,自带web管理网站,支持webrtc、h265播放](https://github.com/648540858/wvp-GB28181-pro)\n   - [功能强大的流媒体控制管理接口平台,支持GB28181](https://github.com/chatop2020/AKStream)\n   - [Go实现的GB28181服务器](https://github.com/panjjo/gosip)\n   - [node-js版本的GB28181平台](https://gitee.com/hfwudao/GB28181_Node_Http)\n   - [Go实现的海康ehome服务器](https://github.com/tsingeye/FreeEhome)\n\n - 客户端\n   - [c sdk完整c#包装库](https://github.com/malegend/ZLMediaKit.Autogen) \n   - [基于C SDK实现的推流客户端](https://github.com/hctym1995/ZLM_ApiDemo)\n   - [C#版本的Http API与Hook](https://github.com/chengxiaosheng/ZLMediaKit.HttpApi)\n   - [DotNetCore的RESTful客户端](https://github.com/MingZhuLiu/ZLMediaKit.DotNetCore.Sdk)\n   \n - 播放器\n   - [基于wasm支持H265的播放器](https://github.com/numberwolf/h265web.js)\n   - [基于MSE的websocket-fmp4播放器](https://github.com/v354412101/wsPlayer) \n   - [全国产webrtc sdk(metaRTC)](https://github.com/metartc/metaRTC)\n   \n## 授权协议\n\n本项目自有代码使用宽松的MIT协议，在保留版权信息的情况下可以自由应用于各自商用、非商业的项目。\n但是本项目也零碎的使用了一些其他的[开源代码](https://github.com/ZLMediaKit/ZLMediaKit/wiki/%E4%BB%A3%E7%A0%81%E4%BE%9D%E8%B5%96%E4%B8%8E%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E)，在商用的情况下请自行替代或剔除；\n由于使用本项目而产生的商业纠纷或侵权行为一概与本项目及开发者无关，请自行承担法律风险。\n在使用本项目代码时，也应该在授权协议中同时表明本项目依赖的第三方库的协议。\n\n## 联系方式\n\n - 邮箱：<1213642868@qq.com>(本项目相关或流媒体相关问题请走issue流程，否则恕不邮件答复)\n - QQ群：qq群号在wiki中，请阅读wiki后再加群\n\n## 怎么提问？\n\n如果要对项目有相关疑问，建议您这么做：\n\n - 1、仔细看下readme、wiki，如果有必要可以查看下issue.\n - 2、如果您的问题还没解决，可以提issue.\n - 3、有些问题，如果不具备参考性的，无需在issue提的，可以在qq群提.\n - 4、QQ私聊一般不接受无偿技术咨询和支持([为什么不提倡QQ私聊](https://github.com/ZLMediaKit/ZLMediaKit/wiki/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AEQQ%E7%A7%81%E8%81%8A%E5%92%A8%E8%AF%A2%E9%97%AE%E9%A2%98%EF%BC%9F)).\n\n## 特别感谢\n\n本项目采用了[老陈](https://github.com/ireader) 的 [media-server](https://github.com/ireader/media-server) 库，\n本项目的 ts/fmp4/mp4/ps 容器格式的复用解复用都依赖media-server库。在实现本项目诸多功能时，老陈多次给予了无私热情关键的帮助，\n特此对他表示诚挚的感谢！\n\n## 致谢\n\n感谢以下各位对本项目包括但不限于代码贡献、问题反馈、资金捐赠等各种方式的支持！以下排名不分先后：\n\n[老陈](https://github.com/ireader)\n[Gemfield](https://github.com/gemfield)\n[南冠彤](https://github.com/nanguantong2)\n[凹凸慢](https://github.com/tsingeye)\n[chenxiaolei](https://github.com/chenxiaolei)\n[史前小虫](https://github.com/zqsong)\n[清涩绿茶](https://github.com/baiyfcu)\n[3503207480](https://github.com/3503207480)\n[DroidChow](https://github.com/DroidChow)\n[阿塞](https://github.com/HuoQiShuai)\n[火宣](https://github.com/ChinaCCF)\n[γ瑞γミ](https://github.com/JerryLinGd)\n[linkingvision](https://www.linkingvision.com/)\n[茄子](https://github.com/taotaobujue2008)\n[好心情](mailto:409257224@qq.com)\n[浮沉](https://github.com/MingZhuLiu)\n[Xiaofeng Wang](https://github.com/wasphin)\n[doodoocoder](https://github.com/doodoocoder)\n[qingci](https://github.com/Colibrow)\n[swwheihei](https://github.com/swwheihei)\n[KKKKK5G](https://gitee.com/kkkkk5G)\n[Zhou Weimin](mailto:zhouweimin@supremind.com)\n[Jim Jin](https://github.com/jim-king-2000)\n[西瓜丶](mailto:392293307@qq.com)\n[MingZhuLiu](https://github.com/MingZhuLiu)\n[chengxiaosheng](https://github.com/chengxiaosheng)\n[big panda](mailto:2381267071@qq.com)\n[tanningzhong](https://github.com/tanningzhong)\n[hctym1995](https://github.com/hctym1995)\n[hewenyuan](https://gitee.com/kingyuanyuan)\n[sunhui](mailto:sunhui200475@163.com)\n[mirs](mailto:fangpengcheng@bilibili.com)\n[Kevin Cheng](mailto:kevin__cheng@outlook.com)\n[Liu Jiang](mailto:root@oopy.org)\n[along](https://github.com/alongl)\n[qingci](mailto:xpy66swsry@gmail.com)\n[lyg1949](mailto:zh.ghlong@qq.com)\n[zhlong](mailto:zh.ghlong@qq.com)\n[大裤衩](mailto:3503207480@qq.com)\n[droid.chow](mailto:droid.chow@gmail.com)\n[陈晓林](https://github.com/musicwood)\n[CharleyWangHZ](https://github.com/CharleyWangHZ)\n[Johnny](https://github.com/johzzy)\n[DoubleX69](https://github.com/DoubleX69)\n[lawrencehj](https://github.com/lawrencehj)\n[yangkun](mailto:xyyangkun@163.com)\n[Xinghua Zhao](mailto:holychaossword@hotmail.com)\n[hejilin](https://github.com/brokensword2018)\n[rqb500](https://github.com/rqb500)\n[Alex](https://github.com/alexliyu7352)\n[Dw9](https://github.com/Dw9)\n[明月惊鹊](mailto:mingyuejingque@gmail.com)\n[cgm](mailto:2958580318@qq.com)\n[hejilin](mailto:1724010622@qq.com)\n[alexliyu7352](mailto:liyu7352@gmail.com)\n[cgm](mailto:2958580318@qq.com)\n[haorui wang](https://github.com/HaoruiWang)\n[joshuafc](mailto:joshuafc@foxmail.com)\n[JayChen0519](https://github.com/JayChen0519)\n[zx](mailto:zuoxue@qq.com)\n[wangcker](mailto:wangcker@163.com)\n[WuPeng](mailto:wp@zafu.edu.cn)\n[starry](https://github.com/starry)\n[mtdxc](https://github.com/mtdxc)\n[胡刚风](https://github.com/hugangfeng333)\n[zhao85](https://github.com/zhao85)\n[dreamisdream](https://github.com/dreamisdream)\n[dingcan](https://github.com/dcan123)\n[Haibo Chen](https://github.com/duiniuluantanqin)\n[Leon](https://gitee.com/leon14631)\n[custompal](https://github.com/custompal)\n[PioLing](https://github.com/PioLing)\n[KevinZang](https://github.com/ZSC714725)\n[gongluck](https://github.com/gongluck)\n[a-ucontrol](https://github.com/a-ucontrol)\n[TalusL](https://github.com/TalusL)\n\n## 使用案例\n\n本项目已经得到不少公司和个人开发者的认可，据作者不完全统计，\n使用本项目的公司包括知名的互联网巨头、国内排名前列的云服务公司、多家知名的AI独角兽公司，\n以及一系列中小型公司。使用者可以通过在 [issue](https://github.com/ZLMediaKit/ZLMediaKit/issues/511) 上粘贴公司的大名和相关项目介绍为本项目背书，感谢支持！\n']
sylar,C++高性能分布式服务器框架,webserver,websocket server,自定义tcp_server（包含日志模块，配置模块，线程模块，协程模块，协程调度模块，io协程调度模块，hook模块，socket模块，bytearray序列化，http模块，TcpServer模块，Websocket模块，Https模块等, Smtp邮件模块, MySQL, SQLite3, ORM,Redis,Zookeeper),2552,https://github.com/sylar-yin/sylar,master,['# 视频地址\n[\\[C++高级教程\\]从零开始开发服务器框架(sylar)](https://www.bilibili.com/video/av53602631/?from=www.sylar.top "")\n# 视频教程内容：\n## 1.日志模块\n支持流式日志风格写日志和格式化风格写日志，支持日志格式自定义，日志级别，多日志分离等等功能\n流式日志使用：SYLAR_LOG_INFO(g_logger) << "this is a log";\n格式化日志使用：SYLAR_LOG_FMT_INFO(g_logger, "%s", "this is a log");\n支持时间,线程id,线程名称,日志级别,日志名称,文件名,行号等内容的自由配置\n## 2.配置模块\n采用约定由于配置的思想。定义即可使用。不需要单独去解析。支持变更通知功能。使用YAML文件做为配置内容。支持级别格式的数据类型，支持STL容器(vector,list,set,map等等),支持自定义类型的支持（需要实现序列化和反序列化方法)使用方式如下：\n```cpp\nstatic sylar::ConfigVar<int>::ptr g_tcp_connect_timeout =\n\tsylar::Config::Lookup("tcp.connect.timeout", 5000, "tcp connect timeout");\n```\n定义了一个tcp连接超时参数，可以直接使用 g_tcp_connect_timeout->getValue() 获取参数的值，当配置修改重新加载，该值自动更新\n上述配置格式如下：\n```sh\ntcp:\n    connect:\n            timeout: 10000\n```\n## 3.线程模块\n线程模块，封装了pthread里面的一些常用功能，Thread,Semaphore,Mutex,RWMutex,Spinlock等对象，可以方便开发中对线程日常使用\n为什么不适用c++11里面的thread\n本框架是使用C++11开发，不使用thread，是因为thread其实也是基于pthread实现的。并且C++11里面没有提供读写互斥量，RWMutex，Spinlock等，在高并发场景，这些对象是经常需要用到的。所以选择了自己封装pthread\n## 4.协程模块\n协程：用户态的线程，相当于线程中的线程，更轻量级。后续配置socket hook，可以把复杂的异步调用，封装成同步操作。降低业务逻辑的编写复杂度。\n目前该协程是基于ucontext_t来实现的，后续将支持采用boost.context里面的fcontext_t的方式实现\n## 5.协程调度模块\n协程调度器，管理协程的调度，内部实现为一个线程池，支持协程在多线程中切换，也可以指定协程在固定的线程中执行。是一个N-M的协程调度模型，N个线程，M个协程。重复利用每一个线程。\n## 6.IO协程调度模块\n继承与协程调度器，封装了epoll（Linux），并支持定时器功能（使用epoll实现定时器，精度毫秒级）,支持Socket读写时间的添加，删除，取消功能。支持一次性定时器，循环定时器，条件定时器等功能\n## 7.Hook模块\nhook系统底层和socket相关的API，socket io相关的API，以及sleep系列的API。hook的开启控制是线程粒度的。可以自由选择。通过hook模块，可以使一些不具异步功能的API，展现出异步的性能。如（mysql）\n## 8.Socket模块\n封装了Socket类，提供所有socket API功能，统一封装了地址类，将IPv4，IPv6，Unix地址统一起来。并且提供域名，IP解析功能。\n## 9.ByteArray序列化模块\nByteArray二进制序列化模块，提供对二进制数据的常用操作。读写入基础类型int8_t,int16_t,int32_t,int64_t等，支持Varint,std::string的读写支持,支持字节序转化,支持序列化到文件，以及从文件反序列化等功能\n## 10.TcpServer模块\n基于Socket类，封装了一个通用的TcpServer的服务器类，提供简单的API，使用便捷，可以快速绑定一个或多个地址，启动服务，监听端口，accept连接，处理socket连接等功能。具体业务功能更的服务器实现，只需要继承该类就可以快速实现\n## 11.Stream模块\n封装流式的统一接口。将文件，socket封装成统一的接口。使用的时候，采用统一的风格操作。基于统一的风格，可以提供更灵活的扩展。目前实现了SocketStream\n## 12.HTTP模块\n采用Ragel（有限状态机，性能媲美汇编），实现了HTTP/1.1的简单协议实现和uri的解析。基于SocketStream实现了HttpConnection(HTTP的客户端)和HttpSession(HTTP服务器端的链接）。基于TcpServer实现了HttpServer。提供了完整的HTTP的客户端API请求功能，HTTP基础API服务器功能\n## 13.Servlet模块\n仿照java的servlet，实现了一套Servlet接口，实现了ServletDispatch，FunctionServlet。NotFoundServlet。支持uri的精准匹配，模糊匹配等功能。和HTTP模块，一起提供HTTP服务器功能\n## 14.其他相关\n联系方式：\n QQ：564628276\n 邮箱：564628276@qq.com\n 微信：sylar-yin\n QQ群：8151915（sylar技术群）\n个人主页：www.sylar.top\ngithub:https://github.com/sylar-yin/sylar\n']
midway,🍔 A Node.js Serverless Framework for front-end/full-stack developers. Build the application for next decade. Works on AWS, Alibaba Cloud, Tencent Cloud and traditional VM/Container. Super easy integrate with React and Vue. 🌈,6473,https://github.com/midwayjs/midway,main,['<p align="center">\n  <a href="https://midwayjs.org/" target="blank"><img src="https://img.alicdn.com/imgextra/i1/O1CN01xQLU011T2R7PHksIv_!!6000000002324-2-tps-1200-616.png" width="1000" alt="Midway Logo" /></a>\n</p>\n\n<p align="center">Midway - 一个面向未来的云端一体 <a href="http://nodejs.org" target="_blank">Node.js</a> 框架</p>\n<p align="center">\n    <a href="https://github.com/midwayjs/midway/blob/master/LICENSE" target="_blank"><img src="https://img.shields.io/badge/license-MIT-blue.svg" alt="GitHub license" /></a>\n    <a href=""><img src="https://img.shields.io/github/tag/midwayjs/midway.svg" alt="GitHub tag"></a>\n    <a href="#"><img src="https://github.com/midwayjs/midway/actions/workflows/nodejs.yml/badge.svg?branch=2.x" alt="Build Status"></a>\n    <a href="https://codecov.io/gh/midwayjs/midway/branch/master"><img src="https://img.shields.io/codecov/c/github/midwayjs/midway/master.svg" alt="Test Coverage"></a>\n    <a href="https://lernajs.io/"><img src="https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg" alt="lerna"></a>\n    <a href="https://github.com/midwayjs/midway/pulls"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"></a>\n    <a href="https://gitpod.io/#https://github.com/midwayjs/midway"><img src="https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod" alt="Gitpod Ready-to-Code"></a>\n    <a href="https://github.com/midwayjs/mwts"><img src="https://img.shields.io/badge/code%20style-midwayjs-brightgreen.svg" alt="Code Style: MidwayJS"></a>\n    <a href="https://opensource.alibaba.com/contribution_leaderboard/details?projectValue=midway"><img src="https://img.shields.io/badge/Midway-%E6%9F%A5%E7%9C%8B%E8%B4%A1%E7%8C%AE%E6%8E%92%E8%A1%8C%E6%A6%9C-orange" alt="Leaderboard">\n</p>\n\n[English](./README.en-US.md) | 简体中文\n\n\n## 资源\n\n- [2022 夏季 mini 直面会](https://www.bilibili.com/video/BV1QB4y1q7Qs)\n- [2022 冬季直面会](https://www.bilibili.com/video/BV1W44y1s7dj?spm_id_from=333.999.0.0)\n- [3.x beta 功能预览](https://www.bilibili.com/video/BV1aL4y1p7oA?from=search&seid=8235946720906913847&spm_id_from=333.337.0.0)\n- [2021 秋季直面会](https://www.bilibili.com/video/BV1Ng411T76f?from=search&seid=8235946720906913847&spm_id_from=333.337.0.0)\n- [2021 夏季直面会](https://www.bilibili.com/video/BV1nF411a7sr?from=search&seid=8235946720906913847&spm_id_from=333.337.0.0)\n- [v2 示例教程](https://www.bilibili.com/video/BV1254y1E73m?from=search&seid=8235946720906913847&spm_id_from=333.337.0.0)\n- [2.0 发布会回放](https://www.bilibili.com/video/BV17A411T7Md)[《2.0 发布会文章》](https://zhuanlan.zhihu.com/p/355768659)\n\n## 特性\n\n- 🐘 **全功能**：支持 Web 应用/Serverless/FaaS/微服务/小程序后端等多种场景，基于装饰器和依赖注入开发企业级应用\n- 🐦 **前端集成**：全新的云端一体应用研发体验，零 API 调用，使用 "React Hooks " 风格一体研发\n- 🐴 **跨平台**：支持部署至普通 Server 或 Serverless/FaaS 环境\n- 🐶 **扩展**：组件化扩展能力，另外支持使用 Koa/Express/Egg.js 生态插件\n- 🐂 **示例**: 官方提供多种场景的示例代码，方便开发者快速上手\n- 🛡 TypeScript 全面支持\n\n## 描述\n\nMidway 是一个适用于构建 Serverless 服务，传统应用、微服务，小程序后端的 Node.js 框架。\n\nMidway 可以使用 Koa，Express 或 Egg.js 作为基础 Web 框架。它还提供了独立使用的基本解决方案，例如 Socket.io，GRPC，Dubbo.js 和 RabbitMQ 等。\n\n此外，Midway 也适用于前端/全栈开发人员的 Node.js 无服务器框架。构建下一个十年的应用程序。可在 AWS，阿里云，腾讯云和传统 VM /容器上运行。与 React 和 Vue 轻松集成。 🌈\n\n## Demo\n\n### 使用装饰器开发 Web 应用\n\n```ts\nimport { Controller, Get, Provide } from \'@midwayjs/decorator\';\n\n@Provide()\n@Controller(\'/\')\nexport class HomeController {\n\n  @Get(\'/\')\n  async home() {\n    return `Welcome to midwayjs!`;\n  }\n}\n```\n\n### 使用函数开发全栈应用\n\n> 后端代码\n> src/apis/lambda/index.ts\n\n```typescript\nimport {\n  Api,\n  Get,\n  Query,\n  useContext,\n} from \'@midwayjs/hooks\';\n\nexport default Api(\n  Get(),\n  Query<{\n    page: string;\n    limit: string;\n  }>(),\n  async () => {\n    const ctx = useContext();\n    return {\n      page: ctx.query.page,\n      limit: ctx.query.limit,\n    };\n  }\n);\n```\n\n> 前端调用\n> src/page/index.tsx\n\n```typescript\nimport getArticles from \'./api\';\nconst response = await getArticles({\n  query: { page: \'0\', limit: \'10\' },\n});\nconsole.log(response); // { page: \'0\', limit: \'10\' }\n```\n\n> 手动调用\n\n```typescript\nfetch(\'/api/articles?page=0&limit=10\')\n  .then((res) => res.json())\n  .then((res) => console.log(res)); // { page: \'0\', limit: \'10\' }\n```\n\n## 快速上手\n\n```bash\n$ npm -v\n\n# 如果是 npm v6\n$ npm init midway --type=web my_midway_app\n\n# 如果是 npm v7\n$ npm init midway -- --type=web my_midway_app\n\n## 进入项目路径\ncd my_midway_app && npm run dev\n```\n\n## 文档和社区\n\n- [官网](https://midwayjs.org)\n- [备用官网](https://beta.midwayjs.org)\n\n## 官方示例\n\n![midway-examples](https://img.alicdn.com/imgextra/i1/O1CN01Q0M4Ma27FnIgiXE4a_!!6000000007768-0-tps-3802-1996.jpg)\n\n请访问 [midway-examples](http://demo.midwayjs.org/)\n\n\n## 社区优秀示例展示\n\n**1、Cool-Admin - 一个很酷的后台权限管理框架**\n\n![image](https://user-images.githubusercontent.com/418820/118931341-73ce1880-b979-11eb-90c6-1758762ce338.png)\n\n- 官网：https://cool-js.com/\n\n\n\n## VSC Plugin\n\n![](https://camo.githubusercontent.com/7819739b6a9eb3d673124817b0d40e46dc963993/68747470733a2f2f63646e2e6e6c61726b2e636f6d2f79757175652f302f323032302f6769662f3530313430382f313539333636313634363431362d35636238663637392d336331302d343638392d386465612d6530313731326438653231662e67696623616c69676e3d6c65667426646973706c61793d696e6c696e65266865696768743d383731266d617267696e3d2535426f626a6563742532304f626a656374253544266e616d653d323032302d30372d303225323031312d34342d32382e323032302d30372d303225323031315f34365f34302e676966266f726967696e4865696768743d383731266f726967696e57696474683d313036302673697a653d373438353839267374617475733d646f6e65267374796c653d6e6f6e652677696474683d31303630)\n\n## 答疑\n\n群里会有热心的朋友，也会有新版本发布推送。\n\n![](https://img.alicdn.com/imgextra/i3/O1CN01F2EYhK1t290OXO4am_!!6000000005843-0-tps-3916-3220.jpg)\n\n## 贡献\n\n<a href="https://github.com/midwayjs/midway/graphs/contributors">\n  <img src="https://contrib.rocks/image?repo=midwayjs/midway" />\n</a>\n\n请告知我们可以为你做些什么，不过在此之前，请检查一下是否有 [已经存在的Bug或者意见](http://github.com/midwayjs/midway/issues)。\n\n如果你是一个代码贡献者，请参考代码贡献规范。\n\n## 谁在使用\n\n![image](https://user-images.githubusercontent.com/629202/110743837-a968ce00-8273-11eb-8284-f5749335fe70.png)\n你也想加 Logo ？可以点击 [这里](https://github.com/midwayjs/midway/issues/898) 添加。\n\n## License\n\n我们的代码使用 [MIT](http://github.com/midwayjs/midway/blob/master/LICENSE) 协议，请放心使用。\n\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmidwayjs%2Fmidway.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Fmidwayjs%2Fmidway?ref=badge_large)\n']
Deep-Learning-with-TensorFlow-book,深度学习入门开源书，基于TensorFlow 2.0案例实战。Open source Deep Learning book, based on TensorFlow 2.0 framework.,12900,https://github.com/dragen1860/Deep-Learning-with-TensorFlow-book,master,['# TensorFlow 2深度学习开源书(龙书)\n\n基于TensorFlow 2正式版！！！\n理论与实战结合，非常适合入门学习！！！\n\n- **[纸质书购买链接：京东](https://item.jd.com/12954866.html)** \n- **[纸质书购买链接：淘宝](https://detail.tmall.com/item.htm?spm=a230r.1.14.16.18b460abi8w8jJ&id=625801924474&ns=1&abbucket=9)**\n\n本仓库包含pdf电子书、配套源代码、配套课件等。部分代码已替换为Ipython Notebook形式，感谢这位[童鞋](https://github.com/Relph1119/deeplearning-with-tensorflow-notes)的整理。\n\n开源电子版pdf还可以从[百度网盘下载](https://pan.baidu.com/s/1GgQjhDqSgSfjxqBMsE3RDQ)  提取码：juqs\n感谢云城不及粒火童鞋提供的书签版pdf。\n\n- **本书的繁体版已经出版，已授权在中国台湾地区上市发行**\n\n-  **本书被“机器之心”，“量子位”等权威媒体报道！**\n\n-  **本库在Github趋势日榜单连续多天全球排名第一！**\n\n\n\n<p align="center">\n  <img src="assets/book-cover.png" align="center" width="500">\n  <!-- <img src="assets/1.png" align="center" width="600"> -->\n</p>\n\n- 提交错误或者修改等反馈意见，请在Github [Issues](https://github.com/dragen1860/Deep-Learning-with-TensorFlow-book/issues)页面提交\n\n- 联系邮箱(一般问题建议Github issues交流)：liangqu.long AT gmail.com\n\n-  **高校老师索取PPT原素材**等教案，请邮箱联系，并详注院校课程等信息，一般3天内发送邮件回复\n\n- 使用本书本的任何内容时(**仅限非商业用途**)，请注明作者和Github链接\n\n\n# 合作院校\n\n以下高校已采用本书作为专业教材或参考资料(排名不分先后)，欢迎更多高校加入！发送邮件即可索取PPT原始教案。\n\n| 电子科技大学 | 西北工业大学  | 北京交通大学  |  厦门大学 | 重庆邮电大学  |\n|---|---|---|---|---|\n|  **东南大学** |   ** ** |  ** **  |   ** **   |   |  \n|  **湖南信息学院** |  **中山大学新华学院** | **东莞理工大学**  |   **北京科技职业学院** |   |  \n|  **郑州轻工业大学** |   **金华职业技术学院** |  **高雄市立新莊高級中學**  |   **安徽财经大学**   |   |  \n|  **长沙民政职业技术学院** |   **兰州交通大学** |  ** **  |   ** **   |   |  \n\n\n\n# “龙书”生态系统\n\n- [纸质书/实体书](https://item.jd.com/12954866.html)\n\n- [介绍短片](https://www.bilibili.com/video/av75331861)\n\n- [English Version](https://github.com/dragen1860/Deep-Learning-with-TensorFlow-book-EN)\n\n- [TensorFlow视频课程](https://study.163.com/course/courseMain.htm?share=2&shareId=480000001847407&courseId=1209092816&_trace_c_p_k2_=9e74eb6f891d47cfaa6f00b5cb5f617c)\n\n- [PyTorch深度学习开源书](https://github.com/dragen1860/Deep-Learning-with-PyTorch-book)\n\n-\t更多TensorFlow 2实战案例在[这里](https://github.com/dragen1860/TensorFlow-2.x-Tutorials)\n\n\n# 简要目录\n\n<p align="center">\n  <img src="assets/0.4.目录-双排-1.jpg">\n  <img src="assets/0.4.目录-双排-2.jpg">\n  <img src="assets/0.4.目录-双排-3.jpg">\n</p>\n\n\n\n#\t配套视频课程\n\n适合零基础、希望快速入门AI的朋友，提供答疑、指导等全方位服务。\n\n- 深度学习与TensorFlow入门实战\nhttps://study.163.com/course/courseMain.htm?share=2&shareId=480000001847407&courseId=1209092816&_trace_c_p_k2_=9e74eb6f891d47cfaa6f00b5cb5f617c\n- 深度学习与PyTorch入门实战\nhttps://study.163.com/course/courseMain.htm?share=2&shareId=480000001847407&courseId=1208894818&_trace_c_p_k2_=8d1b10e04bd34d69855bb71da65b0549\n\n']
OnsenUI,Mobile app development framework and SDK using HTML5 and JavaScript. Create beautiful and performant cross-platform mobile apps. Based on Web Components, and provides bindings for Angular 1, 2, React and Vue.js.,8684,https://github.com/OnsenUI/OnsenUI,master,['onsenui/README.md']
QFramework,Unity3D System Design Architecture,3140,https://github.com/liangxiegame/QFramework,master,['\n\n\n\n\n\n\n\n![LOGO](LOGO.png)\n\n\n\n[![](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/liangxiegame/QFramework/blob/master/LICENSE)\n[![Build Status](https://travis-ci.org/liangxiegame/QFramework.svg?branch=master)](https://travis-ci.org/liangxiegame/QFramework)\n\n# QFramework 简介 Intro\n\n[中文]()|[English](README_EN.md)\n\n[QFramework](https://github.com/liangxiegame/QFramework) 是提供一套简单、强大、易上手、符合 SOLID 原则、支持领域驱动设计（DDD）、事件驱动、数据驱动、分层、MVC 、CQRS、模块化、易扩展的架构，她的源码只有不到 800 行，你可以完全把她放在你的笔记应用里保存。\n\n## 提供的架构图\n\n![](http://processon.com/chart_image/5c270aa6e4b007ba5d5029dc.png)\n\n## 举个例子（一图胜千言😂）\n\n![](https://file.liangxiegame.com/6bf42306-0b2a-4417-bbcf-354af0132596.png)\n\n## 各种情况的示意图\n\n![](http://processon.com/chart_image/5cbb1edce4b0bab90960a4f6.png)\n\n## 架构使用规范\n\n**QFramework系统设计架构分为四层及其规则：**\n\n* 表现层：ViewController层。IController接口，负责接收输入和状态变化时的表现，一般情况下，MonoBehaviour 均为表现层\n    * 可以获取System\n    * 可以获取Model\n    * 可以发送Command\n    * 可以监听Event\n* 系统层：System层。ISystem接口，帮助IController承担一部分逻辑，在多个表现层共享的逻辑，比如计时系统、商城系统、成就系统等\n    * 可以获取System\n    * 可以获取Model\n    * 可以监听Event\n    * 可以发送Event\n* 数据层：Model层。IModel接口，负责数据的定义、数据的增删查改方法的提供\n    * 可以获取Utility\n    * 可以发送Event\n* 工具层：Utility层。IUtility接口，负责提供基础设施，比如存储方法、序列化方法、网络连接方法、蓝牙方法、SDK、框架继承等。啥都干不了，可以集成第三方库，或者封装API\n* 除了四个层级，还有一个核心概念——Command\n    * 可以获取System\n    * 可以获取Model\n    * 可以发送Event\n    * 可以发送Command\n* 层级规则：\n    * IController 更改 ISystem、IModel 的状态必须用Command\n    * ISystem、IModel状态发生变更后通知IController必须用事件或BindableProperty\n    * IController可以获取ISystem、IModel对象来进行数据查询\n    * ICommand不能有状态\n    * 上层可以直接获取下层，下层不能获取上层对象\n    * 下层向上层通信用事件\n    * 上层向下层通信用方法调用（只是做查询，状态变更用Command），IController的交互逻辑为特别情况，只能用Command\n\n（照抄自：[学生课堂笔记1](https://github.com/Haogehaojiu/FrameworkDesign)）\n\n### 运行环境\n\n* Unity 2018.4.x ~ 2021.x\n\n## 安装\n\n* QFramework.cs \n    * 直接复制[此代码](QFramework.cs)到自己项目中的任意脚本中\n* QFramework.cs 与 官方示例\n    * [点此下载 unitypackage](./QFramework.cs.Examples.unitypackage)\n\n* QFramework.ToolKits\n    * [点此下载 unitypackage](./QFramework.Toolkits.unitypackage)\n* QFramework.ToolKitsPro\n    * 从 [AssetStore](http://u3d.as/SJ9) 安装\n\n\n\n## 资源\n\n| **版本** |                                      |                                                          |\n| ----------------------  | ---------------------------------------- | ------------------------------------------------------------ |\n| QFramework.cs | QFramework 本体架构的实现 | [文件](QFramework.cs) |\n| QFramework.cs  示例 | QFramework.cs 与官方示例： CounterApp、《点点点》、FlappyBird、CubeMaster、ShootingEditor2D、贪吃蛇等 | [点此下载 unitypackage](./QFramework.cs.Examples.unitypackage) |\n| QFramework.Toolkits | QFramework  集成 CoreKit/UIKit/ActionKit/ResKit/PackageKit/AudioKit 等全部官方工具（已包含 QFramework.cs 和 示例) | [点此下载 unitypackage](./QFramework.Toolkits.unitypackage) |\n| QFramework.Toolkits.Demo.WuZiQi | 使用 QFramework.Toolkits 开发的五子棋 Demo（需要安装好  QFramework.Toolkits） | [点此下载 unitypackage](./QFramework.Toolkits.Demo.WuZiQi.unitypackage) |\n| QFramework.Toolkits.Demo.Saolei | 使用 QFramework.Toolkits 开发的扫雷 Demo（需要安装好  QFramework.Toolkits） | [点此下载 unitypackage](./QFramework.Toolkits.Demo.SaoLei.unitypackage) |\n| QFramework.ToolKitsPro | 在 ToolKits 基础上集成更多好用的工具的版本（已包含 QFramework.Toolkits） | [AssetStore](http://u3d.as/SJ9) |\n| **群友案例** |  |  |\n| 赛车游戏《Crazy Car》 | 群友 [TastSong](https://github.com/TastSong) 使用 QF 进行重构的开源赛车游戏 | [游戏主页(Github](https://github.com/TastSong/CrazyCar)) |\n| **社区** |  |  |\n| QQ 群:623597263        | 交流群 | [点击加群](http://shang.qq.com/wpa/qunwpa?idkey=706b8eef0fff3fe4be9ce27c8702ad7d8cc1bceabe3b7c0430ec9559b3a9ce66) |\n| github issue | github 社区 | [地址](https://github.com/liangxiegame/QFramework/issues/new) |\n| gitee issue | gitee 社区（国内访问快） | [地址](https://gitee.com/liangxiegame/QFramework/issues) |\n| **教程** |  |  |\n| 《框架搭建 决定版》    | 教程 QFramework  的核心架构是怎么演化过来的？ | [课程主页](https://learn.u3d.cn/tutorial/framework_design)\\|[学生课堂笔记1](https://github.com/Haogehaojiu/FrameworkDesign)\\|[学生课堂笔记2](https://github.com/Haogehaojiu/ShootingEditor2D) |\n| **产品案例** | 如果用了 qf 并且想要在如下列表中登记，可以在 github/gitee 的 issue 里发帖子,也可以加 qq 群，也可以用邮箱联系凉鞋 liangxiegame@163.com |  |\n| 独立游戏《当火车鸣笛三秒》 | 部分使用 QF 制作的独立游戏 | [Steam](https://store.steampowered.com/app/1563700/_/)\\|[TapTap](https://www.taptap.cn/app/208258) |\n| 独立游戏《你好茄子》 | 部分使用 QF 制作的独立游戏 | [游戏主页(Steam)](https://store.steampowered.com/app/2091640/Hi_Eggplant/) |\n| 独立游戏《第一座山》 | 部分使用 QF 制作的独立游戏 | [游戏主页(Steam)](https://store.steampowered.com/app/2149980/The_First_Mountain/) |\n| 独立游戏《推灭泡泡姆》 | \u200dQF 群友，大学生团队制作的独立游戏，终于等到上架啦，亲自游玩过，很好玩，大家多多支持呀~（P.S 使用 QF.cs 作为架构开发的哦~） | [游戏主页(TapTap)](https://www.taptap.com/app/233228) |\n| 独立游戏《鬼山之下》   | 部分使用 QF 制作的独立游戏 | [游戏主页(Steam)](https://store.steampowered.com/app/1517160/_/) |\n| 手机游戏《谐音梗挑战》 | 部分使用 QF 制作的独立游戏 | [游戏主页(TapTap)](https://www.taptap.com/app/201075)        |\n| **官方工具**（独立版本，不互相依赖) |                                                              |                                                              |\n| SingletonKit              | 易上手功能强大的单例工具，由 QF 官方维护                            | [github](https://github.com/liangxiegame/SingletonKit)\\|[gitee](https://gitee.com/liangxiegame/SingletonKit) |\n| ExtensionKit | 易上手功能强大的 C#/UnityAPI 的静态扩展 ，由 QF 官方维护 | [github](https://github.com/liangxiegame/ExtensionKit)\\|[gitee](https://gitee.com/liangxiegame/ExtensionKit) |\n| IOCKit | 易上手功能强大的 IOC 容器 ，由 QF 官方维护 | [github](https://github.com/liangxiegame/IOCKit)\\|[gitee](https://gitee.com/liangxiegame/IOCKit) |\n| TableKit | 一套类似表格的数据结构（List<List\\<T\\>>)，兼顾查询效率和联合强大的查询功能，由 QF 官方维护 | [github](https://github.com/liangxiegame/TableKit)\\|[gitee](https://gitee.com/liangxiegame/TableKit) |\n| PoolKit | 对象池工具，由 QF 官方维护 | [github](https://github.com/liangxiegame/PoolKit)\\|[gitee](https://gitee.com/liangxiegame/PoolKit) |\n| LogKit | 日志工具，由 QF 官方维护 | [github](https://github.com/liangxiegame/LogKit)\\|[gitee](https://gitee.com/liangxiegame/LogKit) |\n| ActionKit | 动作序列工具，由 QF 官方维护 | [github](https://github.com/liangxiegame/ActionKit)\\|[gitee](https://gitee.com/liangxiegame/ActionKit) |\n| ResKit | 资源管理工具，由 QF 官方维护 | [github](https://github.com/liangxiegame/ResKit)\\|[gitee](https://gitee.com/liangxiegame/ResKit) |\n| UIKit | UIKit 是一套 UI/View 开发解决方案，由 QF 官方维护 | [github](https://github.com/liangxiegame/UIKit)\\|[gitee](https://gitee.com/liangxiegame/UIKit) |\n| AudioKit | 一套音频管理工具，由 QF 官方维护 | [github](https://github.com/liangxiegame/AudioKit)\\|[gitee](https://gitee.com/liangxiegame/AudioKit) |\n| PackageKit | 一套包管理工具，可以通过 PackageKit 安装旧版本的 QFramework，以及大量的解决方案。 | [github](https://github.com/liangxiegame/PackageKit)\\|[gitee](https://gitee.com/liangxiegame/PackageKit) |\n| **其他相关教程** |  |  |\n| 《独立游戏体验计划》（猫叔） | 独立游戏制作体验教程，有用到 QFramework.cs | [b 站](https://space.bilibili.com/656352) |\n| 《原创独立游戏制作：平台射击 Roguelike》（凉鞋） | 原创独立游戏制作教程，有用到 QFramework.cs | [b 站](https://space.bilibili.com/60450548/channel/collectiondetail?sid=125221) |\n| 《原创独立游戏制作：类星露谷》（凉鞋） | 原创独立游戏制作教程，有用到 PlayMaker、QFramework.Tookits | [b 站](https://space.bilibili.com/60450548/channel/collectiondetail?sid=919279) |\n\n\n\n## Star 趋势（如果项目有帮到您欢迎点赞）\n\n[![Stargazers over time](https://starchart.cc/liangxiegame/QFramework.svg)](https://starchart.cc/liangxiegame/QFramework)\n\n### 贡献者\n\n* [蓝色孤舟 gdtdftdqtd](https://github.com/gdtdftdqtd)\n* [h3166179](https://github.com/h3166179)\n* [葫芦 WangEdgar](https://github.com/WangEdgar)\n* [凉鞋 liangxiegame](https://github.com/liangxiegame)\n\n\n\n\n### 优秀的 Unity 库、框架\n\n- [ET](https://github.com/egametang/ET)：ET Unity3D Client And C# Server Framework\n- [IFramework（OnClick）](https://github.com/OnClick9927/IFramework) Simple Unity Tools\n- [JEngine](https://github.com/JasonXuDeveloper/JEngine)  使Unity开发的游戏支持热更新的解决方案。\n- [TinaX Framework](https://tinax.corala.space/) “开箱即用”的Unity独立游戏开发工具\n\n### 代码规范完全遵循:\n\n[QCSharpStyleGuide](https://github.com/liangxiegame/QCSharpStyleGuide)\n\n\n### 赞助 Donate:\n\n* 如果觉得不错可以在 [这里 Asset Store](http://u3d.as/SJ9) 给个 5 星哦~ give 5 star\n* 或者给此仓库一个小小的 Star~ star this repository\n* 以上这些都会转化成我们的动力,提供更好的技术服务! \n']
LuaViewSDK,A cross-platform framework to build native, dynamic and swift user interface - 强大轻巧灵活的客户端动态化解决方案,3693,https://github.com/alibaba/LuaViewSDK,master,["# Welcome to LuaViewSDK\n\nLuaViewSDK is a cross-platform framework which is designed to build native, dynamic and swift user interfaces. It's based on Lua VM and chooses lua as it's script language.\n\n## Why Lua\n\n* Lua is a efficient and swift language. A single Lua VM costs 200k to 300k memorys only in iOS\n* Lua is widly used and it's easy to bind to third party frameworks\n* LuaView API is nature to native mobile developers, you guys don't have to understand what React.js or Vue.js or DOM is.\n\n## Demos\n\n* Complex LuaViewSDK-rendered native pages\n\n  <img src='https://gw.alicdn.com/tfs/TB1RzmbQpXXXXXAapXXXXXXXXXX-1198-931.png'/>\n\n* Simple games\n\n  ![](https://gw.alicdn.com/tfs/TB1rKx2QpXXXXbVapXXXXXXXXXX-340-603.gif)\n\n## Try Playground App\n\n- iOS download\n\n  [View in App Store](https://itunes.apple.com/cn/app/luaviewplayground/id1216114838?mt=8)\n\n  ![](https://gw.alicdn.com/tfs/TB1aFkkQpXXXXcBXFXXXXXXXXXX-280-280.png)\n\n- Android download\n\n  ![img](https://alibaba.github.io/LuaViewSDK/guide/doc/playground_android.png)\n\n## How to use LuaViewSDK\n\n- [User Guide](https://alibaba.github.io/LuaViewSDK/guide.html)\n- [API manual](https://alibaba.github.io/LuaViewSDK/apimenu.html)\n\n## Developers\n\n- [Xicheng Dong](xicheng.dxc@alibaba-inc.com)\n- [Songtao Chen](songtao.cst@alibaba-inc.com)\n\n## License\n\n[MIT](https://github.com/alibaba/LuaViewSDK/blob/master/LICENSE.txt)\n\n## Communities\n\n[Github Wiki](https://github.com/alibaba/LuaViewSDK/wiki)\n\nQQ group：539262083 \n\nTwitter：[@luaview](https://twitter.com/luaview)\n\n## Who we are\n\nWe are from Tmall tech team. LuaViewSDK has been widely used in Taobao app, Tmall app and Juhuasuan App nearly two years. And DAU of pages that are developed by LuaViewSDK is over 10 million.  \n\n---\n\n# 欢迎来到LuaViewSDK\n\nLuaViewSDK是一个跨iOS和Android平台的界面动态化解决方案，使用同一套Lua脚本在iOS和Android平台构建原生页面，同时兼具了H5的灵活性和Native的高性能\n\n## 为什么选择Lua？\n\n- Lua是一个高效灵活的语言，在iOS上单个Lua虚拟机仅占用200k到300k\n- Lua已经被广泛应用于对于性能要求和灵活性要求都非常高的场合，比如游戏\n- Lua可以非常方便的绑定各类底层库\n- Lua的API对于native开发人员来说非常自然，不用再去理解各类前端开发概念\n\n## Demo\n\n* LuaViewSDK渲染的Native的复杂业务页面\n\n  <img src='https://gw.alicdn.com/tfs/TB1RzmbQpXXXXXAapXXXXXXXXXX-1198-931.png'/>\n\n* 小游戏\n\n  ![](https://gw.alicdn.com/tfs/TB1rKx2QpXXXXbVapXXXXXXXXXX-340-603.gif)\n\n## 试用Playground App\n\n- iOS download\n\n  [在App Store中查看](https://itunes.apple.com/cn/app/luaviewplayground/id1216114838?mt=8)\n\n  ![](https://gw.alicdn.com/tfs/TB1aFkkQpXXXXcBXFXXXXXXXXXX-280-280.png)\n\n- Android download\n\n  ![img](https://alibaba.github.io/LuaViewSDK/guide/doc/playground_android.png)\n\n## 如何使用LuaViewSDK\n\n- [使用说明](https://alibaba.github.io/LuaViewSDK/guide.html)\n- [接口文档](https://alibaba.github.io/LuaViewSDK/apimenu.html)\n\n## 开发者\n\n- [董希成](xicheng.dxc@alibaba-inc.com)\n- [陈松涛](songtao.cst@alibaba-inc.com)\n\n## 许可证\n\n[MIT](https://github.com/alibaba/LuaViewSDK/blob/master/LICENSE.txt)\n\n## 社区\n\n[Github Wiki](https://github.com/alibaba/LuaViewSDK/wiki)\n\nQQ群：539262083\n\nTwitter：[@luaview](https://twitter.com/luaview)"]
mescroll,精致的下拉刷新和上拉加载 js框架.支持vue,完美运行于移动端和主流PC浏览器 (JS framework for pull-refresh and pull-up-loading),4102,https://github.com/mescroll/mescroll,master,['# mescroll\r\n## mescroll -- 精致的下拉刷新和上拉加载js框架 (JS framework for pull-refresh and pull-up-loading)\r\n## http://www.mescroll.com\r\n\r\n1. 主流APP案例, 丰富经典, 随心定制, 轻松拓展\r\n2. 自由灵活的api, 超详细的注释, 可让您快速自定义真正属于自己的下拉上拉组件\r\n\r\n## 功能亮点 :\r\n1. 自动判断和提示列表无任何数据或无更多数据\r\n2. 无需手动判断处理列表的页码,时间等变量\r\n3. 支持监听列表滚动事件,可平滑滚动到任何位置\r\n4. 一个界面可支持多个实例对象,互不干扰\r\n5. 可临时锁定下拉刷新和上拉加载  \r\n6. 支持图片懒加载,可配置各种占位图与显示动画,上手超简单\r\n\r\n---\r\n## mescroll.js :\r\n1. mescroll.js是原生js写的下拉刷新和上拉加载. 支持vue, 不依赖jquery, zepto\r\n2. 一套代码多端运行. 完美支持android, iOS, 各手机浏览器, 兼容PC主流浏览器\r\n3. 快速入门, 经典案例, 接口文档, 请移步至官网 <a href="http://www.mescroll.com/api.html">http://www.mescroll.com/api.html</a>\r\n4. mescroll的vue版本已整理, 但react和angular版本还没有, 期待哪位好心的神仙能pull requests~\r\n\r\n---\r\n## mescroll-uni :\r\n1. mescroll-uni 是用在uni-app的下拉刷新和上拉加载的组件\r\n2. 支持一套代码编译到iOS、Android、H5、小程序等多个平台\r\n3. 采用uni官方推荐的自定义组件模式, 实现了更高性能及更多Vue语法支持\r\n4. 继承了mescroll.js的实用功能: 自动处理分页, 自动控制无数据, 空布局提示, 回到顶部按钮 ..\r\n5. 快速入门, 经典案例, 接口文档, 请移步至官网 <a href="http://www.mescroll.com/uni.html">http://www.mescroll.com/uni.html</a>']
LogicFlow,A flow chart editing framework focusing on business customization. 专注于业务自定义的流程图编辑框架，支持实现脑图、ER图、UML、工作流等各种图编辑场景。,3984,https://github.com/didi/LogicFlow,master,['<p align="center">\n  <a href="http://logic-flow.org" target="_blank">\n    <img\n      src="http://logic-flow.org/new-logo.png"\n      alt="LogicFlow logo"\n      width="250"\n    />\n  </a>\n</p>\n\n<p align="center">\n  <a href="https://www.npmjs.com/package/@logicflow/core">\n    <img src="https://img.shields.io/npm/v/@logicflow/core" alt="Version">\n  </a>\n  <a href="https://www.npmjs.com/package/@logicflow/core">\n    <img src="https://img.shields.io/npm/dm/@logicflow/core" alt="Download">\n  </a>\n  <a href="https://github.com/didi/LogicFlow/blob/master/LICENSE">\n    <img src="https://img.shields.io/npm/l/@logicflow/core" alt="LICENSE">\n  </a>\n</p>\n\n\n简体中文 | [English](/README.en-us.md)\n\nLogicFlow 是一款流程图编辑框架，提供了一系列流程图交互、编辑所必需的功能和简单灵活的节点自定义、插件等拓展机制，方便我们快速在业务系统内满足类流程图的需求。\n\n## 特性\n\n\n- 🛠 高拓展性\n  \n  兼容各种产品自定义的流程编辑需求，绝大部分模块以插件的形式实现，支持各模块自由插拔。\n\n- 🚀 重执行\n  \n  流程图能完备的表达业务逻辑，不受流程引擎限制。\n\n- 🎯 专业\n  \n  专注于业务流程图编辑的框架\n\n## 使用\n\n### 安装\n\n```sh\n# npm\n$ npm install @logicflow/core @logicflow/extension --save\n\n```\n\n### 代码示例\n\n```js\n// 创建容器\n<div id="container"></div>;\n\n// 准备数据\nconst data = {\n  // 节点\n  nodes: [\n    {\n      id: 21,\n      type: \'rect\',\n      x: 100,\n      y: 200,\n      text: {\n        value: \'矩形节点\',\n        x: 100,\n        y: 200,\n      },\n    },\n    {\n      id: 50,\n      type: \'circle\',\n      x: 300,\n      y: 400,\n      text: {\n        value: \'圆形节点\',\n        x: 300,\n        y: 400,\n      },\n    },\n  ],\n  // 边\n  edges: [\n    {\n      type: \'polyline\',\n      sourceNodeId: 50,\n      targetNodeId: 21,\n    },\n  ],\n};\n// 渲染画布\nconst lf = new LogicFlow({\n  container: document.querySelector(\'#container\'),\n  width: 700,\n  height: 600,\n});\n\nlf.render(data);\n```\n\n## 文档\n\n[官方文档](http://logic-flow.org)\n\n- [快速上手](http://logic-flow.org/guide/start.html#安装)\n- [基础教程](http://logic-flow.org/guide/basic/logic-flow.html)\n- [进阶指南](http://logic-flow.org/guide/advance/theme.html)\n- [拓展](http://logic-flow.org/guide/extension/extension-components.html)\n- [示例](http://logic-flow.org/usage/bpmn.html)\n\n非官方\n\n- [Vuejs3.x + Typescript 上手指南](https://www.yuque.com/fe-xiaoxin/zeots5)\n- [Vuejs3.x + Typescript 在线案例](https://1024code.com/collections/25)\n\n## 核心能力\n\n### 流程图编辑器快速搭建\n\n提供了一个流程图编辑所必需的各项能力，这也是 LogicFlow 的基础能力：\n\n- 图的绘制能力。基于 SVG 来绘制形状各异的节点和线，并提供了基础的节点（矩形、圆形、多边形等）和线（直线、折线、曲线）\n- 各类交互能力，让图动起来。根据节点、线、图的各类鼠标事件（hover、点击、拖拽等）做出反应。比如节点拖拽、拖拽创建边、线的调整、双击节点编辑文本等\n- 提升编辑效率的能力。提供网格、对齐线，上一步、下一步，键盘快捷键，图放大缩小等配套能力，帮助用户提升编辑效率\n- 提供了丰富的 API ，宿主研发通过 API 传参调用和监听事件的方式，与 LogicFlow 完成交互\n\n  下面是通过 LogicFlow 内置的节点和配套能力，做的流程图示例\n  ：\n\n    <image src="https://dpubstatic.udache.com/static/dpubimg/eEMT14E7BR/lfexample1.gif" width="500"/>\n\n### 基于业务场景拓展\n\n当基础能力无法满足业务需求的时候，便需要基于业务场景拓展。\n\n- 设置图上所有元素的样式，比如各种节点、线、锚点、箭头、对齐线的大小颜色等，满足对前端样式调整的需求\n- API 拓展。支持在 LogicFlow 上注册自定义的方法，比如通过 API 拓展提供图片下载的方法\n- 自定义节点、线。内置的矩形、圆形等图形类节点往往无法满足实际的业务需求，需要定义具有业务意义的节点。LogicFlow 提供了 的方式让用户定制具有自定义图形、业务数据的节点，比如流程审批场景中的 “审批” 节点\n- 拓展组件。LogicFlow 在 SVG 图层上提供了 HTML 层和一系列坐标转换逻辑，并支持在 HTML 层注册组件。宿主研发可以通过 LogicFlow 的 API，基于任何 View 框架开发组件，比如节点的右键菜单、控制面板等\n- 数据转换 adapter。LogicFlow 默认导出的图数据不一定适合所有业务，此时可以通过 adapter API，在图数据从 LogicFlow 输入、输出的时候做自定义转换，比如转换成 BPMN 规范的图数据\n- 内置部分拓展能力。基于上述拓展能力，我们还单独提供了 extension 的包，用来存放当前业务下沉淀出的具有通用性的节点、组件等，比如面向 BPMN 规范的节点和数据 adapter，默认菜单。注意 extension 可以单独安装，并支持按需引入\n\n基于上述拓展的能力，前端研发能够根据实际业务场景的需求，灵活的开发出所需的节点、组件等。下面有两个基于 LogicFlow 拓展能力做出的流程图：\n\n### BPMN应用demo\n\n示例地址：http://logic-flow.org/examples/#/extension/bpmn\n\n源码地址：https://github.com/didi/LogicFlow/tree/master/examples/src/pages/usage/bpmn\n\n![图片:bpmn](https://dpubstatic.udache.com/static/dpubimg/CS6S6q9Yxf/lfexample2.gif)\n\n\n#### 审批流应用demo\n\n示例地址：http://logic-flow.org/examples/#/usage/approve\n\n源码地址：https://github.com/didi/LogicFlow/tree/master/examples/src/pages/usage/approve\n\n![图片: 审批流](https://dpubstatic.udache.com/static/dpubimg/uBeSlMEytL/lfexample3.gif)\n\n#### vue 应用 demo\n\n源码地址 [https://github.com/xinxin93/logicflow_vue_demo](https://github.com/xinxin93/logicflow_vue_demo)\n\n![https://dpubstatic.udache.com/static/dpubimg/e35cef10-bb7c-4662-a494-f5aac024c092.gif](https://dpubstatic.udache.com/static/dpubimg/e35cef10-bb7c-4662-a494-f5aac024c092.gif)\n\n\n#### 作图工具示例\n\nLogicFlow不仅支持开发类似bpmn.js这种固定整体样式、更偏向生成数据在流程引擎可执行的流程图工具。也支持实现类似ProcessOn这种自由控制样式的作图工具。\n\n示例地址：[http://logic-flow.org/mvp/index.html](http://logic-flow.org/mvp/index.html)\n\n源码地址：[https://github.com/didi/LogicFlow/tree/master/site/mvp](https://github.com/didi/LogicFlow/tree/master/site/mvp)\n\n示例图如下:\n![logicflow-1.0-4.png](/docs/assets/images/LogicFlow-1.0-4.png)\n\n\n#### vue3 node-red风格示例\n\n源码地址: [https://github.com/Logic-Flow/logicflow-node-red-vue3](https://github.com/Logic-Flow/logicflow-node-red-vue3)\n\n![node-red](https://cdn.jsdelivr.net/gh/Logic-Flow/static@latest/core/node-red.png)\n\n#### 手绘风格插件示例\n\n源码地址: [https://github.com/towersxu/draft-flow](https://github.com/towersxu/draft-flow)\n\n![draft-flow](https://cdn.jsdelivr.net/gh/towersxu/draft-flow@latest/packages/website/public/redis.png)\n\n## 联系我们\n\n### 加入微信群\n\n添加微信号：logic-flow 加入用户群\n\n### 加入 QQ 群\n\n<image src="https://dpubstatic.udache.com/static/dpubimg/VMBzV7jhh8/qq.png" width="300"/>\n\n### 贡献代码\n\nLogicFlow对外持开放态度，不论是只修改文档的标点符号还是对LogicFlow的整体功能有大的重构我们都欢迎。对于您的每一个PR我们都会认真查看、回复、合并。详情见[LogicFlow贡献指南](https://github.com/didi/LogicFlow/blob/master/CONTRIBUTING.md)。\n']
lamda,⚡️ Android reverse engineering & automation framework | 史上最强安卓抓包/逆向/HOOK & 云手机/远程桌面/自动化辅助框架，你的工作从未如此简单快捷。,2417,https://github.com/rev1si0n/lamda,master,['<p align="center">\n<img src="image/logo.svg" alt="LAMDA" width="256">\n</p>\n\n<p align="center">Android reverse engineering & automation framework</p>\n\nLAMDA 是一个用于逆向及自动化的辅助框架，它设计为减少安全分析以及应用测试人员的时间及琐碎问题，以编程化的接口替代大量手动操作，它并不是一个单一功能的框架。为了让你大概了解它的用处：你是否会在手机上安装各类代理、插件或者点来点去的设置来完成你的工作？你是否要在异地操作远在千里之外的手机？你是否有编程控制手机的需求？是否还在某些云手机厂商那里购买昂贵的**IP切换**、**远程ADB调试**、**RPA自动化**甚至连 **logcat 日志**都要付费的服务？如果有，那么对了，只需一个 LAMDA 即可解决这些问题。并且，LAMDA 更注重**分布式**，事实上，你可以在一台公网服务器上管理散布在世界各地各种网络环境中的设备。当然，LAMDA 可以做到的不止于此。\n\n* 零依赖，只需 **root** 即可\n* 前身通过超500台设备压力的稳定生产环境考验\n* 通过接口轻松设置根证书，配合 http/socks5 代理实现中间人\n* 通过 frida 暴露内部 Java 接口（类 [virjar/sekiro](https://github.com/virjar/sekiro) 但基于 frida）\n* 近乎商业级软件的质量和稳定性，ARM/X86全架构\n* 较高的安全性，支持接口及登录认证\n* 将你的设备变为移动网络代理\n* 部分兼容 uiautomator2\n* 设备状态/资源消耗读取\n* 系统配置/属性读取修改\n* 界面布局检视\n* 无线连接内置 root 权限的 WIFI ADB\n* 支持自定义启动配置\n* 支持模拟器及真机、云手机/无头开发板、redroid (仅ARM)\n* 支持安卓 6.0 (M, API 23) - 13 (T, API 33)\n* 支持 WSA (Windows Subsystem for Android™️)\n* 支持 UDP 协议代理（socks5 UDP 模式）\n* 支持 OpenVPN 与代理共存\n* 支持 Magisk 开机自启动\n* 封装了大量常用接口，只需要会写 Python\n* 完全网络化，脱离 USB 数据线/USB 集线器等实体\n* 大文件上传下载\n* 大大降低门槛以及闲杂琐事上的时间成本\n* 获取/重放系统中最近的 Activity\n* 唤起应用的 Activity\n* 可使用 ssh 登录设备终端\n* 只要有网即可连接任意地方运行了 LAMDA 的设备\n* 前后台运行 shell 命令，授予撤销应用权限等\n* 内置 http/socks5 代理，可设置系统/指定应用的代理\n* 内置 frida 15.x, IDA 7.5 server 等工具\n* 内置 crontab 定时任务\n* 内置 Python3.9 及部分常用模块\n* 内置 OpenVPN 可实现全局/非全局的 VPN\n* WIFI 远程桌面（web）\n* WEB 端文件上传下载\n* UI自动化，通过接口实现自动化操作\n\n如果觉得以下教程过于复杂看不懂，可以选择观看网友制作的 [视频教程](https://lamda.run/tutorial/video)。\n\n## 无视恶意软件对抗\n\nMOMO (vvb2060) 是我们认为目前最强的ROOT特征检测软件，如 MOMO 所说：我们的目标是提高用户的知识水平。注意这段描述的功能**并不属于 LAMDA 框架的能力范畴**，它是由 LAMDA 和**未公开**的基建项目共同组成，我们只是以此来引出：你可以相信 LAMDA。\n\n![反检测动图演示](image/detection.gif)\n\n## 一键中间人流量分析\n\n支持常规以及国际APP流量分析，DNS流量分析，得益于 [mitmproxy flow hook](https://docs.mitmproxy.org/stable/api/events.html)，你可以对任何请求做到最大限度的掌控，mitmproxy 功能足够丰富，你可以通过其 `Export` 选项导出特定请求的 `curl` 命令或者 `HTTPie` 命令，分析重放、拦截修改、功能组合足以替代你用过的任何此类商业/非商业软件。如果你仍不清楚 mitmproxy 是什么以及其具有的能力，请务必先查找相关文档，因为 LAMDA 将会使用 mitmproxy 为你展现应用请求。\n\n通过 tools/ 目录下的 `globalmitm`，`startmitm.py` 实现，使用方法请看其同目录 README。\n\n![中间人流量分析动图演示](image/mitm.gif)\n\n## 拖拽上传\n\n可直接在远程桌面拖拽上传，支持上传整个目录，最大支持单个 256MB 的文件，文件将始终被上传到 `/data/local/tmp` 目录下。\n\n![拖拽上传动图演示](image/upload.gif)\n\n## 远程桌面连接\n\n即使手机不在身边也可以使用浏览器随时操作界面，并且内置了 Python 以及相关 frida 工具，是你的另一个在线 shell。\n\n![远程桌面动图演示](image/lamda.gif)\n\n## 通过代码自动化\n\n直接通过代码点点点，可以替代大部分手动操作。\n\n![自动化动图演示](image/automation.gif)\n\n## 界面布局检视\n\n可在远程桌面即时检视安卓应用的界面布局用以编写自动化代码，在远程桌面按下 `CTRL + I` 即可进入模式，\n按下 `CTRL + R` 刷新布局，再次按下 `CTRL + I` 退出。\n\n![界面布局检视](image/inspect.gif)\n\n## 设备目录索引\n\n你可以在浏览器浏览设备上的文件，同时你也可以点击文件名来下载所需的文件。\n\n![目录索引动图演示](image/listing.gif)\n\n如果你希望继续看下去，请确保：有一台已经 root 且运行内存大于 2GB，可用存储空间大于 1GB 的安卓设备或者安卓模拟器（推荐使用最新版**夜神**，**雷电**模拟器，或者 AVD [Android Studio Virtual Device]）。**不完全支持** 网易 Mumu，**不支持**腾讯手游助手、蓝叠以及安卓内虚拟如 VMOS 等），对于真机，推荐运行最接近原生系统的设备如谷歌系、一加、安卓开发板等，或系统仅经过轻度改造的设备。如果你使用的是OPPO/VIVO/华为/小米的设备，经过尝试后无法正常运行，建议改用模拟器。\n\n对于**云手机**，支持阿里云/华为云手机，不支持X手指、X多云、X电、X云兔、X子星、X马云及任何其他品牌。\n\n<br>\n\n# 目录\n\n- [目录](#目录)\n- [免责声明及条款](#免责声明及条款)\n- [前言](#前言)\n- [安装 LAMDA](#安装-lamda)\n  - [注意事项](#注意事项)\n    - [基础要求](#基础要求)\n    - [系统设置](#系统设置)\n    - [网络设置](#网络设置)\n    - [其他设置](#其他设置)\n  - [安装客户端](#安装客户端)\n  - [安装服务端](#安装服务端)\n    - [通过 Magisk 安装](#通过-magisk-安装)\n    - [手动安装](#手动安装)\n      - [方式 1](#方式-1)\n      - [方式 2](#方式-2)\n  - [启动服务端](#启动服务端)\n  - [退出服务端](#退出服务端)\n  - [卸载服务端](#卸载服务端)\n- [使用 LAMDA](#使用-lamda)\n  - [远程桌面](#远程桌面)\n  - [文件上传](#文件上传)\n  - [文件下载](#文件下载)\n  - [移动代理](#移动代理)\n  - [连接设备](#连接设备)\n  - [先来一个热身](#先来一个热身)\n  - [设置系统代理](#设置系统代理)\n  - [安装中间人证书](#安装中间人证书)\n  - [设置 OpenVPN](#设置-openvpn)\n  - [连接内置的 FRIDA](#连接内置的-frida)\n  - [使用 FRIDA 暴露 Java 接口](#使用-frida-暴露-java-接口)\n  - [使用内置的定时任务](#使用内置的定时任务)\n  - [使 LAMDA 可被任意地点连接](#使-lamda-可被任意地点连接)\n  - [读写系统属性](#读写系统属性)\n  - [读写系统设置](#读写系统设置)\n  - [获取设备运行状态](#获取设备运行状态)\n  - [在设备上执行命令](#在设备上执行命令)\n  - [使系统可调试](#使系统可调试)\n  - [启动 IDA 调试服务](#启动-ida-调试服务)\n  - [无线连接内置的 WIFI ADB](#无线连接内置的-wifi-adb)\n  - [文件操作](#文件操作)\n  - [关机重启](#关机重启)\n  - [应用操作](#应用操作)\n  - [WIFI操作](#wifi操作)\n  - [基本UI操作](#基本ui操作)\n  - [进阶UI操作](#进阶ui操作)\n  - [接口锁](#接口锁)\n  - [使用内置终端](#使用内置终端)\n- [工具及教程](#工具及教程)\n  - [一键中间人](#一键中间人)\n  - [国际代理进行中间人](#国际代理进行中间人)\n  - [安装 ADB 公钥](#安装-adb-公钥)\n  - [OpenVPN 服务](#openvpn-服务)\n  - [SOCKS5 服务](#socks5-服务)\n  - [端口转发服务](#端口转发服务)\n  - [注入 Frida RPC 脚本](#注入-frida-rpc-脚本)\n  - [生成加密连接证书](#生成加密连接证书)\n  - [列出内网设备](#列出内网设备)\n\n# 免责声明及条款\n\n为了下载使用由 rev1si0n (账号 github.com/rev1si0n)（以下简称“本人”）个人开发的软件 LAMDA ，您应当阅读并遵守《用户使用协议》（以下简称“本协议”）。请您务必审慎阅读、充分理解各条款内容，特别是免除或者限制责任的条款，并选择接受或不接受；除非您已阅读并接受本协议所有条款，否则您将无权下载、安装或使用本软件及相关服务。您的下载、安装、使用、获取账号、登录等行为即视为您已阅读并同意受到上述协议的约束；若您需要获得本服务，您（以下称"用户"）应当同意本协议的全部条款并按照页面上的提示完成全部申请使用程序。您可以在本文档的相同目录找到 [DISCLAIMER.TXT](DISCLAIMER.TXT)，或者点此 [免责声明](DISCLAIMER.TXT) 查阅。由于并未完全开源，除以上条款外：**授权您对 LAMDA 本身进行以恶意代码分析为目的的逆向**。\n\n请确认您已阅读并接受本协议所有条款，否则您将无权下载、安装或使用本软件及相关服务。\n\n# 前言\n\nLAMDA 是个人开发的免费软件 (freeware)，目前仅客户端及协议是开源的，但个人承诺它没有任何对您违规或多余的行为，如果仍有担心，您可以**立即离开**或者选择**付费**寻求心理安慰。互相尊重，使用请遵守使用条款。合作交流可以 [点此发送邮件](mailto:ihaven0emmail@gmail.com)。\n\n为什么部分开源？因为 LAMDA 亦黑亦白，很容易被不法分子利用使作者处于危险之中，所以请尊重条款使用。建议在 Linux 或者 Mac 系统上操作文档及样例中的代码。部分功能需要配合 `tools/` 目录下的工具实现，如何使用请参照 [tools/README.md](tools/README.md)。\n\n**特别注意**：**请勿在自用设备上运行，当有可能在公网或不信任的网络中使用时，务必确保在启动时指定了PEM证书**\n\n> 使用后的副作用\n\n你可能会把 Python 代码中的 `lambda` 写成 lamda，这是正常现象。\n\n> 问题反馈及建议\n\n因为安卓被各种设备广泛使用，无法保证百分百的兼容性，可能会有运行异常等各种未知情况，出现的异常情况包括：无故重启，APP经常崩溃，触摸失效或无故乱动等等，冻屏等情况。如果经常遇到，建议停止使用。\n点此 [报告问题/建议](https://github.com/rev1si0n/lamda/issues/new)，请详细描述并附上机型系统等信息。\n\n社区讨论：[电报 t.me/lamda_dev](https://t.me/lamda_dev) | [gitter.im/lamda-dev](https://gitter.im/lamda-dev/community)\n\n> 顺便支持作者\n\n如果需要购入服务器，可以选择通过下方的**推广链接**购买云服务。\n\n<a href="https://lamda.run/referral/aliyun"><img src="image/logo-aliyun.png" alt="阿里云" height="40"></a>\n<a href="https://lamda.run/referral/tencent"><img src="image/logo-tencent.svg" alt="腾讯云" height="40"></a>\n\n<br>\n\n# 安装 LAMDA\n\n> 分为客户端以及服务端，客户端主要是 Python 相关库及接口，服务端则是运行在设备/手机上的服务。\n\n## 注意事项\n\n### 基础要求\n\nLAMDA 最理想的运行环境是你刚刚 root（如：新建模拟器，自带权限的ROM，Magisk 刚 root），启动前**务必确保**：\n\n```\n* 必须关闭 Magisk Hide\n* 必须关闭 frida-server\n* 建议关闭 Xposed/Magisk 插件\n* 确认完毕重启设备\n```\n\n并且不会在启动后启用任何上述任何标记为`必须`的条目。\n\n### 系统设置\n\n> 检查时区时间\n\n打开系统设置，找到日期与时间，检查是否已自动设置**中国标准时间**或者你所在地的时区，检查时间是否正确或在可接受的误差范围内，如果没有请关闭**使用网络提供的时区** 以及**网络时间**，并手动设置时区及时间为你当前所在地的时区及时间。\n\n> 关闭无障碍\n\n打开系统设置，找到无障碍（系统或更多设置中），关闭或卸载所有使用无障碍的应用（例如 talkback，autojs 等）。\n\n### 网络设置\n\n对于真机，你只需要确保电脑与手机在同一网络下即可。\n对于模拟器，默认创建的模拟器正常情况下与你的本机网络并不互通，如果你使用的是 android x86 (基于 VMWare 的安卓虚拟机)，\n请尝试在虚拟机设置中将网络模式设置为桥接模式。对于雷电，夜神等模拟器，需要在其设置中根据提示安装驱动并开启桥接模式随后重启模拟器。\n对于 Android Studio 的 Virtual Device，则没有相关设置，如果需要连接 AVD，请先执行 `adb forward tcp:65000 tcp:65000`，\n并使用 `localhost` （不要使用 127.0.0.1）进行连接。\n\n\n### 其他设置\n\n> WSA (Windows Subsystem Android)\n\n如果使用的是 WSA (Windows Subsystem Android)，请确保 WSA 版本不低于 2210.40000 并且已 root。随后打开 WSA 设置 -> Subsystem Resources -> 选择 Continuous，关闭 Advanced Networking。随后重启 WSA 子系统即可。\n\n> AVD (Android Studio Virtual Device)\n\n如果使用的是 AVD (Android Studio Virtual Device)，请先使用如下方式扩展默认存储空间的大小。\n\n```bash\n# Pixel_5_API_29 为虚拟机ID，可以使用命令 emulator -list-avds 列出\n# -partition-size 部分新建的 AVD 可用存储空间可能只有百兆，这里修改为 2G\nemulator -avd Pixel_5_API_29 -partition-size 2048 -no-snapshot-load\n# 随后每次启动虚拟机时都使用该命令\n#\n# 可能会遇到找不到 emulator 命令的情况，\n# 请参阅此文档获知此命令的位置 https://developer.android.com/studio/run/emulator-commandline?hl=zh-cn 并将其加入 PATH 变量中\n#\n# 如果你无法完成上面的命令，请手动点击 Android Studio 中的 Virtual Device Manager，新建一个虚拟机，随后找到对应虚拟机并点击后方的编辑按钮（一个笔的符号），\n# 点击 Show Advanced Settings，找到 Storage -> Internal Storage 并将其设置为至少 2GB。\n```\n\n> Redroid (android in docker)\n\n注意目前**仅支持基于 ARM (aarch64) 宿主机**的 Redroid，你可以通过命令 `uname -m` 来检查。\n\n如果使用的是 Redroid (android in docker)，以官方建议的 `Ubuntu 20.04` 为例，首先安装 linux-modules-extra 相关模块，（注意下列方法可能不适合其他 Linux 发行版，如果你不熟悉 Linux，我们不太建议你继续下面的操作）。\n\n```bash\napt install linux-modules-extra-`uname -r`\n```\n\n编辑文件 `/etc/modules`，将下列名称复制并插入文件底部，重启当前宿主机。\n\n```bash\n# redroid modules\nmac80211_hwsim\n\nbinder_linux\nashmem_linux\n```\n\n**或者**每次宿主机重启后执行（注意如果不用上述的方法那么每次重启都要这么做）\n\n```bash\nmodprobe mac80211_hwsim\nmodprobe binder_linux devices="binder,hwbinder,vndbinder"\nmodprobe ashmem_linux\n```\n\n最后使用以下命令启动，`redroid_gpu_mode` 请根据实际进行修改（注意这与官方写的命令有所不同）。\n\n```bash\ndocker run -itd --rm --privileged --pull always -v /lib/modules:/lib/modules:ro -v ~/redroid:/data -p 127.0.0.1:5555:5555 -p 127.0.0.1:65001:65000 redroid/redroid:12.0.0-latest androidboot.redroid_gpu_mode=guest\n```\n\n> 这里将容器 65000 映射到本机 65001 是因为部分工具需要临时绑定到 65000 端口。\n\n随后，你可以在宿主机上通过 `http://127.0.0.1:65001` 访问到 LAMDA。\n\n## 安装客户端\n\n请使用 3.6 - 3.10 版本的 Python，建议有条件使用 Python 3.9\n\n```bash\npip3 install -U lamda\n# 即可\n#\n# 如果需要使用内置 frida，务必使用下列方法安装\n# 你可能需要外网访问来安装 frida，否则可能会卡住许久(~10分钟)直至安装失败\n# 即使之前安装过 frida，也应该重新执行以下命令\npip3 install -U --force-reinstall \'lamda[frida]\'\n# 请注意完成安装后，你需要同时使用 pip 更新任何依赖 frida\n# 的第三方库例如 frida-tools objection 等（如果安装过的话）\n# 否则后期使用可能会出现难以察觉的异常\n```\n\n安装完成后，执行命令 `python3 -m lamda.client` 检查是否安装正确。如果出现如下类似报错\n\n```python\n* AttributeError \'NoneType\' object has no..\n* TypeError: Couldn\'t build proto file..\n```\n\n可能是因为安装的其它依赖 protobuf 的包产生冲突。请尝试执行如下命令\n\n```bash\npip3 install -U --force-reinstall lamda\n```\n\n如果仍然存在问题，请创建 virtualenv 来使用。\n\n\n## 安装服务端\n\n**默认方式安装的 LAMDA 没有开启任何认证，其他人可以访问你设备上的任意内容，监听你的设备甚至接入你的网络进行进一步控制。请特别留意`启用接口认证`的部分，请务必在可以`信任的网络`内使用。**\n\n安装前，请先选择合适的架构，可以通过 adb shell 命令 `getprop ro.product.cpu.abi` 来获取当前的系统架构。\n正常情况下，对于现时代的手机，可以直接选择 `arm64-v8a` 版本，而对于模拟器如雷电，你会在新建模拟器时选择32或64位版本的安卓系统，\n32位模拟器系统对应 `x86`，64位则对应 `x86_64`，正常情况下，雷电模拟器默认创建的为基于 `x86` 的安卓 7.0 系统。\n\nLAMDA 支持设备状态主动上报，你可以编写接口或使用 grafana 来记录设备运行状况，其中包含了系统、网络、内存、CPU、磁盘等等信息。\n\n```bash\n# 如果不清楚这个功能是什么请不要执行，注意替换掉以下链接\necho "stat-report.url=http://example.com/report" >>/data/local/tmp/properties.local\n```\n\n这样 LAMDA 会在启动后**每分钟**向此链接**POST**设备状态信息（JSON），由于字段较多，将不在此罗列。\n\n\nLAMDA 会定期从 github 更新，默认频道更新频率约1-2月一次，stable 的更新频率为 3-6 月，建议定期手动从 github release 下载最新版本手动更新。如果该频率会影响到你的使用，在首次启动 LAMDA 之前执行以下命令创建更新配置。\n\n```bash\n# 进入 adb shell 执行\necho "upgrade.channel=stable" >>/data/local/tmp/properties.local\n```\n\n在开始前，有必要介绍一下上面的 `properties.local` 文件，\nproperties.local 为 LAMDA 的启动配置文件，通常存储于设备之上，其中包含了 `a=b` 类型的字符串，\n通过编写此文件，你可以实现在 LAMDA 启动时自动连接到 OpenVPN、代理、端口转发等。\nLAMDA 在启动时，会从 `/data/usr`、`/data/local/tmp`、`${CFGDIR:-/data/local}` 查找该文件并载入。\n你可以在以上三个位置任意一个放置你的 properties.local 配置文件。\n\n除了 `properties.local`，还有一个从加载远端配置的参数 `--properties.remote`，它可以让 LAMDA 在启动时从HTTP服务器下载配置，请继续看往启动 LAMDA 的章节。\n\n关于如何编写配置，在各个功能中会有介绍。\n\n> launch.sh 可能出现的错误及解决方法\n\n```bash\n# 显示 llllaamDaa started 则服务已经正常进入 daemon 模式，可以退出终端\n\nalready running     (已经在运行，请不要多次启动)\ninvalid TZ area     (时区未设置，在系统时间设置中设置时区即可，可能出现于国外或原生系统上)\nnot run as root     (没有以 root 身份运行)\nunsupported sdk     (在不支持的安卓系统上运行)\nabi not match       (使用了错误的 tar.gz 包)\n```\n\n### 通过 Magisk 安装\n\n如果你的设备使用了 Magisk，那么你可以以最简单的方法完成安装，并且 LAMDA 可以**开机自启动**。需要确保 Magisk 版本 >= 20.4 且只支持在 **Magisk App** 中安装。同时，使用 Magisk 安装更便于统一化，你可以自定义配置，例如，你想要所有使用该 magisk 模块刷入后的 LAMDA 都启用接口认证（certificate），\n或者希望这些设备都在启动时自动连接代理，你只需要编写 properties.local 或者生成PEM证书并重命名为 `lamda.pem`（请查看 tools/ 中的工具使用方法），\n随后使用**压缩软件**打开 `lamda-magisk-module.zip`，并将其（`lamda.pem` 或者 `properties.local`）拖入 `common` 文件夹即可实现启动时自动配置！\n\n现在，从 [lamda/releases](https://github.com/rev1si0n/lamda/releases) 页面下载 `lamda-magisk-module.zip`，并将其 push 到 `/sdcard`，打开 Magisk App，点击 模块->从本地安装，选择 lamda-magisk-module.zip 稍作等待即可。\n\n刷入成功后，请重启设备。重启后，LAMDA 应该会在开机时自启动。但是为了避免可能的崩溃问题，lamda 会在 30 秒后启动而不是立即启动，你将有足够的时间去禁用 LAMDA 模块（请在开机后2分钟再连接使用 LAMDA）。安装完成后，你无需再看下段手动安装的内容，跳过即可。\n\n### 手动安装\n\n手动安装是通常做法，下面将会介绍两种方式，两种方式的区别是：部分老旧设备可能无法通过系统的 `tar` 命令来解压 tar.gz 后缀的文件，所以提供了 `*-install.sh` 用来作为补充，其内置了一个 busybox 用来解压。已知 getprop 获得的设备架构为 `arm64-v8a`，现在将设备连接到当前电脑并确保已授权 ADB、可以正常切换 root。\n\n#### 方式 1\n\n从 `release` 页面 [lamda/releases](https://github.com/rev1si0n/lamda/releases)\n下载 `arm64-v8a.tar.gz-install.sh`。\n\n```bash\n# /data/local/tmp 是标准服务安装路径，但并不是强制要求\n# 你可以放到除了 /sdcard 之外任何具备可读写权限的文件夹\nadb push arm64-v8a.tar.gz-install.sh /data/local/tmp\n# 进入 adb shell\nadb shell\n# 输入 su 确保为 root 身份\nsu\n# 切换到目录\ncd  /data/local/tmp\n# 执行安装脚本并启动（这将解包并启动服务）\nsh arm64-v8a.tar.gz-install.sh\n# 删除安装包\nrm arm64-v8a.tar.gz-install.sh\n```\n\n#### 方式 2\n\n从 `release` 页面 [lamda/releases](https://github.com/rev1si0n/lamda/releases)\n下载 `arm64-v8a.tar.gz`。\n\n```bash\n# /data/local/tmp 是标准服务安装路径，但并不是强制要求\n# 你可以放到除了 /sdcard 之外任何具备可读写权限的文件夹\nadb push arm64-v8a.tar.gz /data/local/tmp\n```\n\n完成后，进入 `adb shell`，解包文件：\n\n```bash\n# 你现在应该在 adb shell 内\ncd /data/local/tmp\n# 解包服务端文件\n# 注意自带的 tar 命令可能因为不支持 z 选项导致解包失败，你可能需要使用 busybox tar 来解包\n# 如果系统不附带 busybox 命令，请自行从 https://busybox.net/downloads/binaries/1.20.0 下载合适架构的版本\ntar -xzf arm64-v8a.tar.gz\n# 删除安装包\nrm arm64-v8a.tar.gz\n```\n\n## 启动服务端\n\n对于方式 1 安装，安装后会顺带启动服务，所以使用该方法**安装后**你无需执行下面的命令，但是按照下面的操作再来一次也并没有问题。\n对于上面任意一种安装方法，你永远只需要在首次安装时操作，但是**启动服务**的过程则需要在每次 设备重启 或者 你手动关闭 LAMDA 后执行，因为 LAMDA 不会自己运行。\n\n进入 adb shell，并切换为 `su` root 身份，执行：\n\n```bash\n# 你现在应该在 adb shell 内，切换到目录\ncd /data/local/tmp\n#\n# 启动服务端\n# 注意，arm64-v8a 这个目录根据平台不同名称也不同\n# 如果你使用的是 x86 版本，那么这个目录名则是 x86/，你需要对命令做相应修改\nsh arm64-v8a/bin/launch.sh\n#\n# 如果你想要启用加密传输\n# 请先使用 tools/ 中的 cert.sh/py 来生成PEM证书\n# 将其push到设备例如 /data/local/tmp/lamda.pem\n# 并将其属主及权限设置为 root 以及 600 (chown root:root lamda.pem; chmod 600 lamda.pem)\n# 并使用以下命令启动，lamda.pem 必须为绝对路径\nsh arm64-v8a/bin/launch.sh --certificate=/data/local/tmp/lamda.pem\n# 这将加密任何通过 LAMDA 客户端产生的通信流量\n# 但不包括 webui 远程桌面的流量\n#\n# 从远端加载 properties.local\n# 有时候你可能希望从链接加载启动配置，这时你可以将 properties.local 上传到服务器\n# LAMDA 在下载此配置时，会提供当前设备的部分信息如，设备唯一ID，设备型号，当前版本等。\n# 你也可以自行编写web服务来根据这些设备参数分发不同的启动配置\n# 建议使用 HTTPS 链接增加安全性，请确保设备时间正确。\n# 随后使用如下方式启动 LAMDA\nsh arm64-v8a/bin/launch.sh --properties.remote=http://example.com/config/properties.local\n# 对于开启了 Basic Auth 的静态文件服务，同样支持提供用户名密码\nsh arm64-v8a/bin/launch.sh --properties.remote=http://user:password@example.com/config/properties.local\n# 提示：LAMDA 会在超时或者返回 50x 状态码时重试请求，\n# 如果连续 5 次仍然失败，LAMDA 会放弃尝试并继续启动。\n#\n# 当然，可以自定义重试次数但是注意，如果服务器持续无响应，LAMDA 也将永远卡在这里\n# 什么时候需要设置重试次数：刚开机时设备可能并没有网络连接，如果你要在这时启动 LAMDA 你可以增大该值\nsh arm64-v8a/bin/launch.sh --properties.remote=http://example.com/config/properties.local --properties.tries=30\n# 重试机制的每轮等待秒数n会随着重试次数的增加而增加。所以请谨慎设置该值。\n#\n# 如果你需要 LAMDA 监听到特定端口而不是 65000\n# 如果修改，请确保所有内网设备均以相同端口启动\n# 否则设备发现等功能无法正常工作\nsh arm64-v8a/bin/launch.sh --port=8123\n# 请不要绑定 1024 以下的端口\n```\n\n静待退出，随即关闭终端，至此服务启动完成。\n\n**注意**：首次启动时有几率出现远程桌面一直加载。发生这种情况时，请首先尝试重启设备并重新启动 lamda。\n如果在启动或使用中多次遇到设备黑屏/重启卡顿等类似情况，建议停止使用。\n\n## 退出服务端\n\nLAMDA 设计为一个 7*24 小时后台运行的服务，不建议频繁启动关闭，如果确需这样做，请务必确保你通过以下两种方式关闭。如需使用接口关闭服务请参照下方 `关机重启` 章节，考虑到可能不方便使用接口，你也可以使用以下命令。\n\n```bash\nkill -SIGUSR2 $(cat /data/usr/lamda.pid)\n```\n\nLAMDA 服务完全退出可能需要十几秒的时间，请不要连续多次执行此命令。\n\n## 卸载服务端\n\nLAMDA 对于自身数据的规划非常规范，绝对不会在你的系统中随意放置文件。\n你可以通过几条命令完全卸载 lamda，在进行前，请先按照上方 `关闭 LAMDA 服务` 执行并等待至少30秒以确保服务正常退出。\n\n```bash\n# 删除 LAMDA 相关目录\nrm -rf /data/local/tmp/arm64-v8a /data/usr\n# 重启设备\nreboot\n```\n\n# 使用 LAMDA\n\n设备上的 `65000` 端口为本服务的标准公用端口，可能需要记住，但是大部分情况下，你不需要显式提供此端口号。\n下面请先在 WLAN 设置中取得**当前设备的IP地址**，你也可以通过 tools/ 目录里的工具来列出当前网络中的所有设备及IP，\n下面将会一直**假设**设备的IP为 `192.168.0.2`。\n\n## 远程桌面\n\n远程桌面功能仅为 Chrome 95+ 设计，不支持多人访问，不保证兼容所有浏览器，如遇功能不正常请使用 Chrome。\n\n在浏览器中打开链接 `http://192.168.0.2:65000` 可进入 web 远程桌面，你可以在此操作设备以及通过该界面的root模拟终端执行命令。如果启动服务端时指定了PEM证书 `--certificate`，远程桌面将需要你输入密码才能继续访问，你可以在PEM证书最后一行找到这个32位的固定密码。\n\n你也可以自定义远程桌面的 视频帧率(fps)、分辨率缩放比例(res)以及图像质量(quality)。同时，支持 H.264 软编码（部分情况下使用流量更少更流畅，仅支持最新版 Chrome 浏览器）。\n你只需要将以上参数组成如下链接即可 `http://192.168.0.2:65000/?fps=25&quality=20&res=0.5&h264`，此链接代表，显示25fps的远程桌面，图像质量为20，缩放到原始分辨率的0.5倍，同时开启H264支持。除 h264 默认为不开启外，其他均为默认值。但是请注意，调整以上参数并不一定会产生正向效果，请依据事实调整。\n\n如果需要键盘输入等更加人性化的操作体验，请先看下面的章节 `无线连接内置 root 权限的 WIFI ADB`，\n完成 adb connect 到 LAMDA 后，安装使用 [Genymobile/scrcpy](https://github.com/Genymobile/scrcpy) 或者 [barry-ran/QtScrcpy](https://github.com/barry-ran/QtScrcpy) 即可，具体使用方法请查看其使用文档。\n\n## 文件上传\n\n你可以在此页面直接**拖动文件或目录到右侧终端**上来上传文件/文件夹到设备，支持同时拖动多个文件或文件夹，单个文件最大不得超过 256MB，最多只支持同时上传 2k 个文件，上传的任何文件权限均为 644，文件将始终上传到 `/data/local/tmp` 目录下。\n\n## 文件下载\n\nLAMDA 允许你通过浏览器浏览设备上的目录及下载文件，只需要在浏览器打开链接 `http://192.168.0.2:65000/fs/` 即可（注意最后面的 `/`）。\n\n## 移动代理\n\n有些时候，你的APP可能在某些网络条件下会发生错误，或者你想处在设备相同的网络IP下做一些测试。\nLAMDA 的 tunnel2 功能，支持你将运行 LAMDA 的设备作为 http 网络代理服务器，它同样继承了 LAMDA 的强大功能：你在任何地方都能处在近乎与设备相同的网络之中。你可以通过以下 curl 命令快速体验，你也可以在 Firefox 设置-手动配置代理将 `192.168.0.2` 端口 `65000` 设置为代理并且勾选 `也将此代理用于 HTTPS`，这样你的 Firefox 将会与设备有着相同的出网IP。\n\n```bash\n# 默认代理无需任何认证，但是当你使用了 --certificate 启动时\n# 那么登录用户名为: lamda，密码与远程桌面登录令牌 (token) 相同\ncurl -x http://192.168.0.2:65000 https://httpbin.org/ip\n```\n\n自定义代理配置\n如果你想使用移动网络（4G/5G）作为代理出口，需要说明的是，在已连接 WIFI 网络的情况下，rmnet 移动数据可能并不会启用，而在连接移动数据后，WIFI 通常又不会开启。也就是说，当你连接了 WIFI，默认就是通过WIFI出网，而当你断开了 WIFI，默认就是从数据流量出网，它们之间存在一定的互斥关系（不同系统版本可能表现也不一样）。所以配置 iface 参数就变成了一个可有可无的选项，提供此配置只是为了多一种可能，除非你自行让 rmnet 以及 wlan 网卡均处于活动状态此选项才变得符合本意。以下示例仅更改了默认代理的登录用户信息。\n\n```ini\n# 追加到 properties.local 配置文件\ntunnel2.login=lamda\ntunnel2.password=mypassword\n# 不建议配置 iface 参数除非你知道自己在做什么\n#tunnel2.iface=wlan0\n```\n如果希望从任何地点都可使用设备作为代理，请查看 `使 LAMDA 可被任意地点连接` 章节。\n\n## 连接设备\n\n> 现在，将配合 lamda 库进行介绍，在开始前，请先确保你已经根据上文 `客户端安装` 章节正确安装了客户端库。\n\n建议顺带翻看客户端的源码，并不是需要理解，仅仅是让你能了解到底有什么参数可以使用。\n\n```python\nfrom lamda.client import *\n\nd = Device("192.168.0.2")\n# 如果在服务端启用了 certificate 请这样连接\nd = Device("192.168.0.2", certificate="/path/to/lamda.pem")\n```\n\n或者，如果你熟悉 uiautomator2，也可以通过 u2 来使用部分自动化功能\n\n```python\nimport uiautomator2 as u2\n\n# 注意：只兼容约7成主要接口，并且服务端未启用 certificate 选项\nd = u2.connect("http://192.168.0.2:65000")\n```\n\n或者，直接执行命令\n```bash\n# 注意这个DEVICE参数是IP，自行替换\npython3 -m lamda.client -device 192.168.0.2\n# 随后可以直接在此 shell 中输入下方语句\n```\n\n> 下文中的 `d` 将始终假设为 `d = Device("192.168.0.2")` 实例。\n\n## 先来一个热身\n\n如下方法可以使你的手机发出一声蜂鸣，当有一堆设备的时候，需要定位其中一台，可以调用此接口。（需要手机为非静音状态）\n\n```python\nd.beep()\n```\n\n## 设置系统代理\n\n只支持 http 以及 socks5 代理，不支持 IPv6\n\n\n> 假设你从服务商处获得的代理为 http://123.123.123.123:8080，\n> 仅需如下几行代码来让设备上的 tcp 流量通过此代理\n\n```python\nprofile = GproxyProfile()\nprofile.type = GproxyType.HTTP_CONNECT\n\n# 此选项请根据实际情况选择你是否需要\nprofile.drop_udp = True\nprofile.host = "123.123.123.123"\nprofile.port = 8080\n\nd.start_gproxy(profile)\n```\n\n> 详细的参数配置信息\n\n```python\nprofile = GproxyProfile()\n# socks5 代理则为 GproxyType.SOCKS5\nprofile.type = GproxyType.HTTP_CONNECT\n# 如果你需要重定向 DNS 查询到 114.114.114.114\n# 注意此 DNS 是系统全局的，系统发出的所有DNS将会被转发\n# 如果是与OpenVPN共存的情况，不要设置为OpenVPN的内网DNS服务器，否则可能会导致彻底断网\n# 去掉 nameserver 配置行将使用系统默认 DNS\n#\n# 为什么有此选项：你可以修改一些应用的 dns 域名解析\nprofile.nameserver = "114.114.114.114"\nprofile.host = "代理服务器地址"\nprofile.port = 代理服务器端口\n\n# 如果这个代理服务器需要登录信息（注意：如果没有，请注释或删除如下两行）\nprofile.password = "代理服务器登录密码"\nprofile.login = "代理服务器登录用户"\n\n# socks5 模式支持 udp 代理，但是 http 代理并不支持\n# 因为 udp 多数情况下并不会被代理，所以禁用 udp 流量是一个不错的选择\n# 当 drop_udp 为 True 时，应用/系统的 UDP 流量将会被屏蔽，默认为 False\nprofile.drop_udp = False\n\n# 本地流量是否需要*不经过*代理，如果为 True，本地流量\n# 如 192.168.x.x 10.x.x.x 等路由器内网网段的流量将不会经过代理，默认为 False\n# 注意：如果开启了 udp_proxy，此选项对于 UDP 流量无效\nprofile.bypass_local_subnet = True\n\n# 是否需要代理 udp 流量\n# 注意，http 代理服务不支持代理 udp 协议，开启此选项必须使用 socks5 作为代理服务器\n# (GproxyType.SOCKS5)，且 socks5 代理服务器必须配置开启 udp 代理模式，\n# 需要稍加复杂的服务器配置，为了避坑，请参照 tools/socks5 里的介绍进行安装配置\n# 当你使用 http 代理或者 drop_udp 选项为 True，此设置将会被忽略\nprofile.udp_proxy = False\n\n# 如果需要仅对特定应用使用代理（例如安卓浏览器，如果是全局则删除这两行）\napp = d.application("com.android.browser")\nprofile.application.set(app)\n\n#     注意事项以及提示：\n# 设置代理后，正在运行的应用是不会立即使用设置的代理的\n# 因为这些应用在设置代理之前就已经完成了 tcp 连接的建立\n# 所以，需要你手动关闭应用并启动，应用才会通过代理建立连接\n# 也就是说，如果你是做中间人流量分析，那设置代理后\n# 你需要关闭应用再重新打开才会看到应用的请求\n#\n# 注：本机的 DNS 流量始终不会经过代理\n\n# 启动代理\nd.start_gproxy(profile)\n# 关闭代理\nd.stop_gproxy()\n```\n\n> 快速搭建一个 socks5 代理\n\nLAMDA 在 tools/ 中提供了一个开箱即用同时支持 udp 的 socks5 代理服务 docker，请转到 tools/socks5 目录查看 README.md。\n\n> 在 LAMDA 启动时自动连接代理\n\n复制下列配置并修改相关配置为你的代理信息\n\n```txt\ngproxy.enable=true\ngproxy.type=http-connect\ngproxy.host=123.333.333.333\ngproxy.port=8080\ngproxy.password=\ngproxy.login=\n```\n\n将其追加或者写入到 properties.local，重启 LAMDA 即可。\n\n## 安装中间人证书\n\n> 建议你使用或参考已经封装好的 tools/ 目录下的 startmitm.py, globalmitm 工具，这里介绍的是相关接口。\n\n请先确保你已经准备好 fiddler, mitmproxy 给你的证书，对于 mitmproxy，\n给你的证书为 pem 格式如下示例。而对于 fiddler，则可能是 crt 格式，直接将该文件路径\n作为参数提供即可无需关心任何转换/文件名问题。\n\n为了避免浪费不必要的时间，在这里推荐使用 `mitmproxy`，\n如果你使用的是 `Charles` 等，我无法确保你可以一次性完成设置，\n因为此类应用配置项目较为复杂且你可能需要理解各种代理类型才能正确配置SSL中间人，\n如果你一定要使用，建议使用 Charles 的 socks5 作为代理协议。\n\n注意：有可能不支持安卓 13\n\n```python\nimport os\n\n# 拼接 mitmproxy-ca-cert.pem 文件的路径\nHOME = os.path.expanduser("~")\ncert_path = os.path.join(HOME, ".mitmproxy", "mitmproxy-ca-cert.pem")\n# 以 mitmproxy 为例，使用如下代码安装证书\nd.install_ca_certificate(cert_path)\n\n# 使用如下代码卸载证书（如不常变化不建议频繁安装卸载）\nd.uninstall_ca_certificate(cert_path)\n# 此证书安装接口是通用的，你可以用它安装任何应用要求你安装的证书\n# 你同样可以用其安装 Fiddler/Charles 要求你安装的证书\n# 只需要提供文件路径即可\n```\n\n接着，看 `设置 http/socks5 代理` 节，将代理设置为中间人应用监听的地址即可。\n按照流程完成后如果没有截获到流量请参加设置代理部分的**特别注意**。\n\n## 设置 OpenVPN\n\n> 此 OpenVPN 只支持使用证书登录，可以与 http/socks5 代理共存。\n> 需要注意的是，此功能只包含OpenVPN的主要功能，除了 `DNS` 配置，暂无法应用服务端推送的其他配置信息。\n> 这些配置包括但不限于 PAC 代理，http 代理配置等。为了省却你安装服务的麻烦，\n> LAMDA 提供了一个开箱即用的 OpenVPN docker 镜像，它有脚本可以生成下面这个配置，请继续往下看。\n\n非常建议使用 tools 里的 OpenVPN docker 安装及生成如下连接配置。\n\n```python\nprofile = OpenVPNProfile()\n\n# 是否全局 VPN，为 False 时仅路由服务器端推送的特定网段\nprofile.all_traffic  = True\n# 服务器端开启的连接协议 (或者为 OpenVPNProto.TCP)\nprofile.proto        = OpenVPNProto.UDP\nprofile.host         = "OpenVPN 服务器地址"\nprofile.port         = OpenVPN 服务器端口\n# 服务器端通道加密方法\nprofile.cipher       = OpenVPNCipher.AES_256_GCM\n\nprofile.tls_encryption = OpenVPNEncryption.TLS_CRYPT\nprofile.tls_key_direction = OpenVPNKeyDirection.KEY_DIRECTION_NONE\nprofile.tls_key = """\n-----BEGIN OpenVPN Static key V1-----\ntls key / tls auth\n-----END OpenVPN Static key V1-----\n"""\n\nprofile.ca = """\n-----BEGIN CERTIFICATE-----\n服务端配置的 ca 证书\n-----END CERTIFICATE-----\n"""\n\nprofile.cert = """\n-----BEGIN CERTIFICATE-----\n客户端证书\n-----END CERTIFICATE-----\n"""\n\nprofile.key = """\n-----BEGIN PRIVATE KEY-----\n客户端私钥\n-----END PRIVATE KEY-----\n"""\n\n# 启动 OpenVPN\nd.start_openvpn(profile)\n# 关闭 OpenVPN\nd.stop_openvpn()\n```\n\n> 快速搭建一个 OpenVPN 服务\n\nLAMDA 在 tools/ 中提供了一个开箱即用的 OpenVPN docker，请转到 tools/openvpn 目录查看 README.md。\n\n> 在 LAMDA 启动时自动连接 VPN\n\n你可以使用 tools/openvpn 提供的命令来生成 properties.local 配置，请不要自行编写。\n\n## 连接内置的 FRIDA\n\n> 非逆向工作无需阅读此节\n\n启动本框架前后，**请勿**再次自行启动任何 frida-server，否则有可能会导致系统崩溃。你只需要通过下列代码使用内置 frida 即可。\n\n1. 通过代码连接\n\n```python\n# 使用 LAMDA 时的做法\ndevice = d.frida\ndevice.enumerate_processes()\n```\n\n等效于\n\n```python\n# 只是示例，请尽量使用上述方法连接\nmanager = frida.get_device_manager()\ndevice = manager.add_remote_device("192.168.0.2:65000")\ndevice.enumerate_processes()\n```\n\n2. 通过命令行使用\n\n对于所有 frida 官方命令行工具，你只需要加上参数 `-H 192.168.0.2:65000` 即可。\n\n```bash\nfrida -H 192.168.0.2:65000 -f com.android.settings\n# 如果你在服务端启动时指定了 certificate 选项，请注意也需要在此加入 --certificate 参数例如\nfrida -H 192.168.0.2:65000 -f com.android.settings --certificate /path/to/lamda.pem\n```\n\n对于 objection 以及 r0capture 等，这些第三方工具可能并不会完全遵循原生 frida 工具的命令行用法，如果你需要使用这些第三方工具，需要确保 LAMDA 启动时**没有使用** `--certificate` 参数（加密传输），因为这些工具可能并没有可以传递PEM证书的参数。\n\n```bash\n# objection 示例连接方法 (-N -h 192.168.0.2 -p 65000)\nobjection -N -h 192.168.0.2 -p 65000 -g com.android.settings explore\n```\n\n```bash\n# r0capture 示例连接方法 (-H 192.168.0.2:65000)\npython3 r0capture.py -H 192.168.0.2:65000 -f com.some.package\n```\n\n```bash\n# jnitrace 示例连接方法 (-R 192.168.0.2:65000)\njnitrace -R 192.168.0.2:65000 -l libc.so com.some.package\n```\n\n```bash\n# frida-dexdump 示例连接方法 (-H 192.168.0.2:65000)\nfrida-dexdump -H 192.168.0.2:65000 -p PID\n```\n\n其他未提及的第三方工具请自行查看其使用方法。\n\n## 使用 FRIDA 暴露 Java 接口\n\n这个功能类似于 [virjar/sekiro](https://github.com/virjar/sekiro)，关于它的用途请参考 virjar 大佬的\n项目。此功能需要你能熟练编写 frida 脚本。\n\n> 请转到 tools 目录查看使用方法。\n\n此功能需要你能熟练编写 frida 脚本。示例中使用的脚本请参照 test-fridarpc.js 文件，特别注意: frida 脚本中 rpc.exports 定义的函数参数以及返回值只能为 int/float/string/list/jsdict 或者任意 js 中**可以被 JSON序列化**的值。假设设备IP为 192.168.0.2。\n\n> 执行以下命令注入 RPC 到 com.android.settings（注意查看是否有报错），下面的相关文件在 tools 目录\n\n```bash\npython3 fridarpc.py -f test-fridarpc.js -a com.android.settings -d 192.168.0.2\n```\n\n现在已经将接口暴露出来了，只需要请求 `http://192.168.0.2:65000/fridarpc/myRpcName/getMyString?args=["A","B"]` 即可得到脚本内方法的返回结果，链接也可以用浏览器打开，接口同时支持 POST 以及 GET，参数列表也可以同时使用多个参数，空列表代表无参数，注意这里的 args 参数序列化后的字符串最长**不能超过** `32KB`。\n\n链接中的两个字符串参数 "A", "B" 即为注入的脚本中的方法 `getMyString(paramA, paramB)` 的位置参数。\n\n注意参数的提供形式，是**双引号**，请**不要手打**或者**字符串拼接**这个参数，务必使用 json.dumps(["A", "B"])\n\n> 用 requests 调用\n```python\nimport json\nimport requests\nurl = "http://192.168.0.2:65000/fridarpc/myRpcName/getMyString"\n# 请求接口\nres = requests.post(url, data={"args": json.dumps(["A","B"])})\nprint (res.status_code, res.json()["result"])\n\n#* 状态码 200 一切正常\n#* 状态码 410 需要重新注入脚本或者脚本未注入（目前不支持自动重新注入）\n#* 状态码 500 脚本或参数异常\n#* 状态码 400 参数错误\n```\n\n响应结果的格式是固定的，可在浏览器打开查看。同样，配合下面一节的内容，你将可以在公网直接使用接口。\n\n## 使用内置的定时任务\n\n内置了用于执行定时任务的 cron 服务，这样你可以在设备上定期执行一些脚本，所有规则都将以 root 身份执行。\n\n> 此功能需要你会编写 crontab 规则，如果你不清楚 crontab，请先自行了解。\n\n现在，请打开 web 控制台或者连接设备的 ssh/adb shell，执行命令 `crontab -e`，你将进入编辑模式，在英文输入模式下按下字母 `i`，随后写下相关规则，并依次按下 `ESC`，`SHIFT` + `:`，输入 `wq` 并按下回车来保存即可。受限于安卓休眠机制，息屏后定时任务可能并不会以你期望的时间运行，你可能需要将设备设置为常亮。\n\n> 一些规则示例\n\n```\n@reboot      echo 框架启动/重载(reload)时执行\n0 */1 * * *  echo 每一小时执行\n* * * * *    echo 每一分钟执行\n0 8 * * *    echo 每天八点执行\n```\n\n## 使 LAMDA 可被任意地点连接\n\n有时候你可能遇到这种情况：你的手机在家里而你不在家该怎么使用呢。\n开始前，你可能需要先准备一台公网服务器。为了安全考虑，这里使用的是最保守的配置，最后会说明如何做到完整介绍的功能。\n\n因为有了公网服务器，lamda 有很多方法可以做到这个要求，使用 **OpenVPN** 来实现更加优雅。当然最方便的还是使用 frp。tools 文件夹内都提供了相关服务的 docker 镜像并且这些镜像可以一键命令生成下面的配置信息，可以转到 tools 查看使用方法。\n\n本服务使用了较为成熟的端口转发程序 [fatedier/frp](https://github.com/fatedier/frp)，关于如何配置服务端，请在此项目中自行探索。注意：请勿将转发后的端口绑定到公网地址，请确保你的公网服务器关闭了所有不必要的端口。\n这里给你一个最简单安全的配置，可以直接使用如下命令启动服务端。\n\n> 首先在你的公网服务器上执行以下命令启动 frps（注意你可能还需要配置防火墙）\n\n```bash\nfrps --token lamda --bind_addr 0.0.0.0 --bind_port 6009 --proxy_bind_addr 127.0.0.1 --allow_ports 10000-15000\n```\n\n> 然后编写 properties.local\n\n复制下列配置并修改**服务器地址**为你的服务器公网IP\n\n```txt\nfwd.host=服务器地址\nfwd.port=6009\nfwd.rport=12345\nfwd.token=lamda\nfwd.protocol=tcp\nfwd.enable=true\n```\n\n将其追加或者写入到 properties.local，重启 LAMDA 即可。\n\n> 如何透过上面的转发使用 lamda（需要在部署 frps 的那台公网服务器上使用，因为我们绑定了转发的端口到 127.0.0.1）\n\n```python\nfrom lamda.client import *\n# 端口为上面的 rport\nd = Device("127.0.0.1", port=12345)\n# 浏览器打开 http://127.0.0.1:12345 即可访问远程桌面\n# 其余任何接口调用实现均统一，无需做任何改动\n```\n\n> 如何批量转发而不用每次都改写一下 rport 配置\n\n如果你需要一次设置多台机器且不在乎每台机器绑定的端口，\n你可以将上方配置中的 `fwd.rport` 值改为 0，这将导致你的设备被随机绑定到 `10000-15000` 的端口范围中，\n你可以通过后期轮训端口范围来定位设备转发绑定的对应端口。\n\n> 我就是想在任意地方都能连接到设备\n\n首先，为了安全起见不建议这么做，如果确实需要这样用的话，建议使用 OpenVPN 将设备和你的电脑置于同一网段的方法来访问。\n如果你仍准备使用上述 frp 的方法实现任意访问，请先确保 LAMDA 服务启动时使用了**PEM证书**，并将启动 frps 命令时的 `--proxy_bind_addr 127.0.0.1`\n改为 `--proxy_bind_addr 0.0.0.0`，这将导致 12345 端口直接绑定到公网。如果你未使用PEM证书启动 lamda，任何人都将可以访问，这是**非常非常危险**的。\n其次需要注意，web 远程桌面的流量始终都是 http 的，如果有人在你和服务器通信之间进行中间人，你的登录凭证可能会被窃取。当然，如果此期间不用 web 桌面将不存在这个问题。\n\n\n## 读写系统属性\n\n> 设置/读取系统属性\n\n```python\n# 获取 ro.secure 的值\nd.getprop("ro.secure")\n\n# 设置 ro.secure 的值\nd.setprop("ro.secure", "0")\n```\n\n## 读写系统设置\n\n> 设置/读取安卓系统设置\n\n```python\nsettings = d.stub("Settings")\n\n# 如果你对以下 screen_brightness 等字符串表示疑惑，请查看下列文档。有些常量\n# 在不同版本的安卓可能并不兼容，以及部分厂商会有自定义的变量，需要注意。\n\n# https://developer.android.com/reference/android/provider/Settings.System\n# https://developer.android.com/reference/android/provider/Settings.Secure\n# https://developer.android.com/reference/android/provider/Settings.Global\n\n# 你可以使用如下代码将系统屏幕的亮度设置为手动\nsettings.put_system("screen_brightness_mode", "0")\n\n# 示例：获取并修改屏幕亮度为 5 (0-255)\nsettings.get_system("screen_brightness")\nsettings.put_system("screen_brightness", "5")\n\n# 示例：关闭开发者选项\nsettings.get_global("development_settings_enabled")\nsettings.put_global("development_settings_enabled", "0")\n\n# 示例\nsettings.get_secure("screensaver_enabled")\nsettings.put_secure("screensaver_enabled", "0)\n```\n\n## 获取设备运行状态\n\n```python\nstatus = d.stub("Status")\n\n# 获取设备启动时间\nstatus.get_boot_time()\n\n# 获取设备磁盘使用情况\nstatus.get_disk_usage(mountpoint="/data")\n\n# 获取电池信息\nstatus.get_battery_info()\n# 获取CPU使用情况\nstatus.get_cpu_info()\n# 获取总体磁盘读写情况\nstatus.get_overall_disk_io_info()\n# 获取用户数据磁盘的读写情况 (userdata)\nstatus.get_userdata_disk_io_info()\n# 获取总体网络收发情况\nstatus.get_overall_net_io_info()\n# 获取 wlan0 接口的网络收发情况\nstatus.get_net_io_info("wlan0")\n# 获取内存使用情况\nstatus.get_mem_info()\n```\n\n## 在设备上执行命令\n\n> 在设备后台，前台执行 shell 脚本/命令\n\n```python\n# 执行前台脚本（执行时间短（0-10秒内）的脚本）\ncmd = d.execute_script("whoami")\nprint (cmd.exitstatus)\nprint (cmd.stdout)\nprint (cmd.stderr)\n\n# 执行后台脚本（执行时间长的脚本）\n# 对于后台脚本，因考虑可能用户写出死循环脚本无限输出导致内存占满等问题\n# 暂时无法获知其执行结果\nID = d.execute_background_script("sleep 100; exit 0;")\n# 检查后台脚本是否结束\nd.is_background_script_finished(ID)\n# 强制结束后台脚本\nd.kill_background_script(ID)\n```\n\n## 使系统可调试\n\n如果你需要使用JEB，IDA等动态分析，你可能需要设置此标志才能进行，当然也内置了这个功能，你可以这么做而无需永久修改 `ro.debuggable`。\n但是记住，这个接口你并不是一定需要调用，仅当你看到任何文章/教程让你修改 `ro.debuggable` 时使用。\n\n注意：调用此接口成功后，系统会自动重启，你可能仍需像首次启动时等待一段时间到本框架恢复\n\n> 慎用，此功能可能不稳定且可能随时移除\n\n```python\ndebug = d.stub("Debug")\n\nr = debug.set_debuggable()\nprint (r)\n```\n\n## 启动 IDA 调试服务\n\n> 内置了 IDA 7.5 服务端\n\n```python\ndebug = d.stub("Debug")\n\n# 启动 IDA 32 服务端（端口可自定义）\ndebug.start_ida(port=22032)\n# 检查是否已启动\ndebug.is_ida_running()\n# 关闭 IDA 32 服务端\ndebug.stop_ida()\n# 如果调试的是64位程序，将方法名中的 ida 替换为 ida64 即可\n# 例如\ndebug.start_ida64(port=22064)\n#\n# 如果需要自定义 ida-server 的环境变量例如 IDA_LIBC_PATH (同样适用于 start_ida)\ndebug.start_ida64(port=22064, IDA_LIBC_PATH="/apex/com.android.runtime/lib64/bionic/libc.so")\n# 当你调试的目标程序是32位时使用 start_ida\n# 否则使用 start_ida64\n# 当你的设备系统为32位平台时，start_ida64 将会无效\n```\n\n## 无线连接内置的 WIFI ADB\n\n此 ADB 非全功能 adb，仅支持 shell,pull,push,forward,reverse 等常用功能\n通过此功能你将**无需开启开发者模式**即可连接最高权限的 adb。\n\n> 注：jdwp 调试相关功能具有唯一性，与系统内置存在冲突所以此 adb **目前**不支持。\n\n```python\n# LAMDA 内置的 adb 服务完全独立于系统本身提供的 adb 服务\n# 所以在使用之前需要先手动调用以下接口将你的 adb 公钥安装至设备上\n# 否则直接连接将会显示未授权（系统设置开发者模式中授权的秘钥与内置 adb 并不通用）\n#\n# tools 目录下的 adb_pubkey.py 封装了下面接口的安装过程\n# 你可以使用该脚本一键授权，允许本机连接，请查看其 README，以下代码仅做参考说明\n#\n# 这个秘钥文件位于你电脑上的 ~/.android 或者 C:\\\\Users\\xxxx\\.android，文件名为 adbkey.pub\n# 如果不存在这个文件但是存在文件 adbkey，请切换到该目录并执行命令\n# adb pubkey adbkey >adbkey.pub 来生成 adbkey.pub\n#\n# 随后使用 python 代码来拼接这个生成的 adbkey.pub 路径\nimport os\nkeypath = os.path.join("~", ".android", "adbkey.pub")\nabs_keypath = os.path.expanduser(keypath)\nprint (abs_keypath)\n#\n# 然后安装这个 adbkey.pub 到 LAMDA\nd.install_adb_pubkey(abs_keypath)\n# 这样你就可以连接内置 adb 了\n# 通过命令 adb connect 192.168.0.2:65000 连接到设备\n# 你完全可以将其理解为 WIFI ADB\n#\n# 或者如果你需要从 LAMDA 内置 adb 移除这个公钥\nd.uninstall_adb_pubkey(abs_keypath)\n```\n\n## 文件操作\n\n> 将文件上传至设备或从其下载文件（支持大文件）\n\n```python\n# 下载文件到本地\nd.download_file("/verity_key", "写入到的本地文件")\n\n# 下载文件到 内存/已打开的文件\nfrom io import BytesIO\nfd = BytesIO()\nd.download_fd("/verity_key", fd)\nprint (fd.getvalue())\n\n# 注意必须使用 w+b 模式打开被写入文件\nfd = open("写入到的本地文件", "wb")\nd.download_fd("/verity_key", fd)\n\n# 上传文件到设备\nd.upload_file("本地文件路径.txt", "/data/local/tmp/上传到设备上的文件.txt")\n\n# 从 内存/已打开的文件 上传文件\nfrom io import BytesIO\nd.upload_fd(BytesIO(b"fileContent"), "/data/local/tmp/上传到设备上的文件.txt")\n\n# 注意必须使用 rb 模式打开文件\nfd = open("myfile.txt", "rb")\nd.upload_fd(fd, "/data/local/tmp/上传到设备上的文件.txt")\n\n# 删除设备上的文件\nd.delete_file("/data/local/tmp/文件.txt")\n\n# 修改设备上的文件权限\nd.file_chmod("/data/local/tmp/文件.txt", mode=0o777)\n\n# 获取设备上文件的信息\nd.file_stat("/data/local/tmp/文件.txt")\n```\n\n## 关机重启\n\n```python\n# 关闭系统（等于关机）\nd.shutdown()\n# 重启系统（等于重启）\nd.reboot()\n\n# 关闭设备上运行的 LAMDA 服务\nd.exit()\n```\n\n\n## 应用操作\n\n> 列出系统上已安装的所有应用的ID\n\n```python\nd.enumerate_all_pkg_names()\n```\n\n> 列出设备上所有正在运行的应用\n\n```python\nd.enumerate_running_processes()\n```\n\n> 获取当前处于前台的应用\n\n```python\nd.current_application()\n\n# 等价于\nd.application(d.current_application().applicationId)\n\n# 获取当前前台的 activity\nd.current_application().activity\n```\n\n> 启动、获取 Activity\n\n```python\n# 导入 FLAG_ACTIVITY* 常量定义\nfrom lamda.const import *\n\n# 获取系统中最近的10条活动（最多16条）\nactivities = d.get_last_activities(count=10)\nprint (activities)\n\n# 你可以直接重放最后一条活动（注意并不是所有活动都可以重放）\nactivity = activities[-1]\nprint (activity)\nd.start_activity(**activity)\n\n# 手动组装 activity 信息\n# 附加数据只支持 boolean, int, short, long, double, float 以及 string 类型\nd.start_activity(action="***", category="***", component="***",\n                 extras={"boolean": False, "int": 1, "string": "act", "float": 1.123},\n                 flags=FLAG_ACTIVITY_NEW_TASK|FLAG_ACTIVITY_CLEAR_TASK,\n                 data="***", debug=False)\n\n# flags 的定义请参考文档\n# https://developer.android.com/reference/android/content/Intent#FLAG_ACTIVITY_BROUGHT_TO_FRONT\n# flags 以及 debug 参数不是必须的，只是多了一种可能\n\n# 拨打 10000 客服电话\nd.start_activity(action="android.intent.action.CALL", data="tel:10000")\n\n# debug 参数代表：是否以调试模式启动该活动\n# 如果你知道 Waitting for debugger，那么它可能对你有用\n# 你可以像下面这样以调试模式启动一个应用（你的设备或者APP需要是可调试的）\nla = d.application("com.android.settings").query_launch_activity()\nd.start_activity(**la, debug=True)\n\n# 例如：启动 设置 APP（当然这几乎等价于直接启动app）\nd.start_activity(action="android.intent.action.MAIN",\n                 category="android.intent.category.LAUNCHER",\n                 component="com.android.settings/.Settings")\n\n# 例如：进入证书设置\nd.start_activity(action="com.android.settings.TRUSTED_CREDENTIALS")\n```\n\n> 授予/撤销 APP 权限\n\n注意，你应在APP未启动时进行权限设置，在APP请求权限时调用并不会产生帮你点击允许的效果。\n\n```python\napp = d.application("com.my.app")\n\n#导入 PERMISSION_READ_PHONE_STATE 常量（版本>3.90）\nfrom lamda.const import *\n\n# 获取应用所有权限\napp.permissions()\n# 授予 READ_PHONE_STATE 权限\napp.grant(PERMISSION_READ_PHONE_STATE, mode=GrantType.GRANT_ALLOW)\n# 拒绝 READ_PHONE_STATE 权限\napp.grant(PERMISSION_READ_PHONE_STATE, mode=GrantType.GRANT_DENY)\n# 检查是否已授予权限\napp.is_permission_granted(PERMISSION_READ_PHONE_STATE)\n# 撤销已授予的权限\napp.revoke(PERMISSION_READ_PHONE_STATE)\n```\n\n> 清除应用缓存，重置应用\n\n```python\n# 删除应用的缓存数据\napp = d.application("com.my.app")\napp.delete_cache()\n# 重置应用数据\napp.reset_data()\n```\n\n> 启动/停止应用\n\n```python\napp = d.application("com.my.app")\n\n# 启动应用\napp.start()\n# 检查应用是否正在前台运行\napp.is_foreground()\n# 关闭应用\napp.stop()\n```\n\n> 其他\n\n```python\napp = d.application("com.my.app")\n# 获取应用信息\napp.info()\n\n# 检查应用是否已安装\napp.is_installed()\n# 卸载应用\napp.uninstall()\n\n# 查询该应用的启动 Activity（入口活动）\napp.query_launch_activity()\n\n# 启用应用\napp.enable()\n# 禁用应用\napp.disable()\n```\n\n## WIFI操作\n\n目前WIFI操作部分功能由于可能导致设备异常未实现，仅介绍部分实现的功能\n\n```python\nwifi = d.stub("Wifi")\n\n# 获取wifi bssid,ssid ip 等相关信息\nwifi.status()\n\n# 获取黑名单中的所有 bssid\nwifi.blacklist_get_all()\n\n# 将bssid加入黑名单(将不会显示在wifi列表)\nwifi.blacklist_add("3c:06:aa:8a:55:66")\n\n# 清空所有黑名单\nwifi.blacklist_clear()\n\n# 执行 wifi 扫描\nwifi.scan()\n\n# 获取周边 wifi 扫描结果\nwifi.scan_results()\n\n# 获取当前wifi的mac地址\nwifi.get_mac_addr()\n\n# 获取 wifi 信号强度，链接速率\nwifi.signal_poll()\n```\n\n## 基本UI操作\n\n> 获取设备信息\n\n```python\nd.device_info()\n```\n\n> 息屏/亮屏相关\n\n```python\n# 息屏\nd.sleep()\n# 亮屏\nd.wake_up()\n# 屏幕是否点亮\nd.is_screen_on()\n# 屏幕是否已锁定\nd.is_screen_locked()\n```\n\n> 剪切板\n\n```python\nd.set_clipboard("剪切板内容")\n\n# 获取剪切板内容（不支持安卓10+）\nd.get_clipboard()\n```\n\n> 物理按键\n\n```python\n# 此方法可使用如下17种按键\n# KEY_BACK\n# KEY_CAMERA\n# KEY_CENTER\n# KEY_DELETE\n# KEY_DOWN\n# KEY_ENTER\n# KEY_HOME\n# KEY_LEFT\n# KEY_MENU\n# KEY_POWER\n# KEY_RECENT\n# KEY_RIGHT\n# KEY_SEARCH\n# KEY_UP\n# KEY_VOLUME_DOWN\n# KEY_VOLUME_MUTE\n# KEY_VOLUME_UP\nd.press_key(Keys.KEY_BACK)\n\n# 同时为了可以使用更多按键，也可以使用这个方法\nd.press_keycode(KeyCodes.KEYCODE_CALL)\n# 可使用的 KEYCODE 可以自行查看此文档\n# https://developer.android.com/reference/android/view/KeyEvent#KEYCODE_0\n```\n\n> 屏幕截图\n\n```python\nquality = 60 # 截图质量，默认为全画质\nd.screenshot(quality).save("screenshot.png")\n# 截取屏幕上特定区域的图像\n# Bound 的参数 top,left 等定义：\n\n# top:     从距离屏幕顶部向下数 top 个像素\n# bottom:  从距离屏幕顶部向下数 bottom 个像素\n# left:    从距离屏幕左侧向右数 left 个像素\n# right:   到距离屏幕左侧向右数 right 个像素\n\n# 正常情况下 top 永远小于 bottom，left 永远小于 right\nbound = Bound(top=50, bottom=80, left=50, right=80)\nd.screenshot(quality, bound=bound).save("partial.png")\n```\n\n> 点击屏幕上的一个点\n\n```python\nd.click(Point(x=100, y=100))\n```\n\n> 点按点A并将其拖动到点B\n\n```python\nA = Point(x=100, y=100)\nB = Point(x=500, y=500)\n\nd.drag(A, B)\n```\n\n> 从点A滑动到点B\n\n```python\nA = Point(x=100, y=100)\nB = Point(x=500, y=500)\n\nd.swipe(A, B)\n```\n\n> 稍复杂的多点滑动（九宫格解锁）\n\n```python\np1 = Point(x=100, y=100)\np2 = Point(x=500, y=500)\np3 = Point(x=200, y=200)\n\n# 从点P1滑动到点P2随后滑动到点P3，可任意个点\nd.swipe_points(p1, p2, p3)\n```\n\n> 打开通知栏/快捷设置栏\n\n```python\nd.open_notification()\nd.open_quick_settings()\n```\n\n> 获取页面布局描述XML\n\n```python\nd.dump_window_hierarchy().getvalue()\n```\n\n> 等待界面布局停止刷新\n\n```python\n# 单位是毫秒，5*1000 代表5秒\nd.wait_for_idle(5*1000)\n```\n\n## 进阶UI操作\n\n> Selector\n\n界面布局检视，首先你需要打开设备的 web 远程桌面。随后，鼠标点击左侧屏幕确保焦点落在投屏上（否则焦点可能会被右侧的终端捕获），\n然后按下快捷键 `CTRL+I`(启动布局检视)，此时你将不能再滑动左侧屏幕，你可以点击屏幕上的虚线框来查看对应元素的信息，你可以将其中的部分属性作为 Selector 的参数。\n再次按下 `CTRL+I` 将关闭布局检视，布局检视并不会随着页面的改变而刷新，它始终是你按下快捷键那一刻的屏幕布局，如果需要刷新布局请手动按下快捷键 `CTRL+R`。\n\n正常情况下，我们只会使用 `resourceId`, `clickable`, `text`, `description` 作为参数。\n如果元素存在正常的 resourceId，优先使用其作为 Selector，即：`Selector(resourceId="com.android.systemui:id/mobile_signal_single")`。\n对于无 resourceId，则会使用其 text，即：`Selector(text="点击进入")`，或者更模糊一点 `Selector(textContains="点击")`\ndescription 与 text 同理，但是 description 用的会比较少。\n\n当然，Selector 不止可以使用一个参数，你可以做其他组合，例如 `Selector(text="点击进入", clickable=True)`\n\n> 注意：很少直接用 Selector()，大部分情况下，使用 d() 来进行。\n\n所有常见的匹配参数：\n\n```\ntext                    文本完全匹配\ntextContains            文本包含匹配\ntextStartsWith          文本起始匹配\nclassName               类名匹配\ndescription             描述完全匹配\ndescriptionContains     描述包含匹配\ndescriptionStartsWith   描述起始匹配\nclickable               可以点击\nlongClickable           可以长按\nscrollable              可滚动\nresourceId              资源ID匹配\n```\n\n大部分情况下，你不会直接用到 `Selector`，但是间接使用无处不在。\n\n> 元素操作\n\n上文都是介绍了如何坐标点击这种随意性的东西，现在开始介绍如何操作固定目标元素。首先，你需要知道如何选定元素。\n\n```python\n# 选择界面上的包含文字 被测APP 的元素\nelement = d(textContains="被测APP")\n# 当然，你不一定要这样赋值到 element，也可直接使用 d(textContains="被测APP")\n```\n\n好了，现在你知道了如何获取元素了，当然，这时并没有获取到，只是代表，你想要在当前界面操作这个元素，下面开始操作。\n\n\n```python\n# 我们现在假设，界面上这个 被测APP 是手机上被测APP的图标名称（图标下面的名称）。\nelement = d(textContains="被测APP")\n# 是否存在该元素\nelement.exists()\n# 点击该元素，不存在则会抛出异常\n# Corner.COR_CENTER 代表点击该元素中心点，你可查看 COR_CENTER 定义获取其他可点击的位置\nelement.click(corner=Corner.COR_CENTER)\n\n# 点击该元素，不存在不会抛出异常\nelement.click_exists(corner=Corner.COR_CENTER)\n\n# 长按该元素，不存在则会抛出异常\nelement.long_click(corner=Corner.COR_CENTER)\n\n# 获取元素信息\nelement.info()\n\n# 获取元素的中心点坐标\nelement.info().bounds.center()\n\n# 获取元素的左上点坐标\nelement.info().bounds.corner("top-left")\n\n# 获取元素的高度\nelement.info().bounds.height\n\n# 获取元素的宽度\nelement.info().bounds.width\n\n# 获取元素个数\nelement.count()\n\n# 等待元素出现，最多等待10秒\nelement.wait_for_exists(10*1000)\n\n# 等待元素消失，最多等待10秒\nelement.wait_until_gone(10*1000)\n\n# 获取该元素的截图（不是全屏，只是该元素）\n# quality 为截图质量 1-100\nelement.screenshot(quality=60)\n\n# 将此 APP 拖动归类到 购物 文件夹（依据实际情况修改）\nelement.drag_to(Selector(text="购物"))\n\n#########\n# 查找同级或者子级元素\n#########\n# 有时候会有一些重复元素或者无明显特征的元素，很难去定位\n# 这时你可以通过查找子级/同级元素的方法来缩小查找范围\n# 子级元素，举例为：一个聊天登录框，里面的输入框即为登录框的子级元素\n# 同级元素，举例为：聊天输入框里面的用户名和密码框为同级原始（正常情况下）\nform = d(resourceId="login_form")\nform.child(index=1)\n# 这将获取到 login_form 下 index 为 0 的元素\nform.child(index=1).sibling()\n# 你也这样来找与 login_form 同级的找回密码按钮\n#（其实已经可以通过字符串判断了，就不需要这样做了，这里只是演示）\nform.sibling(textContains="找回密码")\n# 它们本身就是一个element，你可以对其做任何 element 的操作\n\n\n############################\n# 现在 element 改变了其意义，变为选择了输入框\n############################\n\n# 示例为：在一加搜索应用界面的搜索框输入 被测APP\n\n# 注意，不要直接往看似输入框的地方输入文字，可能并无法输入\n# 有些输入框需要点击一次才会进入真正的输入框，请使用此真正输入框的资源ID\nelement = d(resourceId="net.oneplus.launcher:id/search_all_apps")\nelement.set_text("被测APP")\n\n# 获取输入的内容\nelement.get_text()\n\n# 清空刚刚输入的内容\nelement.clear_text_field()\n\n# 配合点击搜索，来完成一次类人的搜索操作。\n\n\n# 滑动操作（列表上下滑动翻页）\n# 注意，这些操作并不保证精度，下面这些方法正常情况下都并不需要选择器，\n# 但是你可根据实际情况自行加入选择器\n\n# 向上滑动， step 自行调整，越多会越慢，比较适合精度要求较高的滑动\nd().swipe(direction=Direction.DIR_UP, step=32)\n# 其他滑动方向：\n#DIR_UP     向上滑动\n#DIR_LEFT   向左滑动\n#DIR_DOWN   向下滑动\n#DIR_RIGHT  向右滑动\n\n#########\n# fling：甩动，即正常人滑动屏幕的行为，较快\n#########\n# 从上向下\nd().fling_from_top_to_bottom()\n# 从下往上\nd().fling_from_bottom_to_top()\n# 从左往右\nd().fling_from_left_to_right()\n# 从右往左\nd().fling_from_right_to_left()\n\n# 其他，一直向下/左右上滑，直到滑动到底\n# 因为并不是一定可以滑动到底或者检测到滑动到底\n# 所以 max_swipes 参数是必须的\nd().fling_from_top_to_bottom_to_end(max_swipes=32)\nd().fling_from_bottom_to_top_to_end(max_swipes=32)\nd().fling_from_left_to_right_to_end(max_swipes=32)\nd().fling_from_right_to_left_to_end(max_swipes=32)\n\n#########\n# scroll: 比较机械性的滑动\n#########\nstep = 60\nmax_swipes = 32\n# 从上往下滑动 step 步\nd().scroll_from_top_to_bottom(step)\n# 从下往上滑动 step 步\nd().scroll_from_bottom_to_top(step)\n# 从左往右滑动 step 步\nd().scroll_from_left_to_right(step)\n# 从右往左滑动 step 步\nd().scroll_from_right_to_left(step)\n\n# 其他，一直向下/左右上滑，直到滑动到底\n# 同上文 fling 描述\nd().scroll_from_top_to_bottom_to_end(max_swipes, step)\nd().scroll_from_bottom_to_top_to_end(max_swipes, step)\nd().scroll_from_left_to_right_to_end(max_swipes, step)\nd().scroll_from_right_to_left_to_end(max_swipes, step)\n```\n\n> 监视器\n\n监视器用来监听界面变化并在满足条件时执行设定的操作（点击元素或者按键），这可能对性能或者需要人工介入时产生影响，所以请谨慎使用，默认未开启。\n\n```python\n# 启动监视器循环\nd.set_watcher_loop_enabled(True)\n\n# 获取监视器是否已启动\nd.get_watcher_loop_enabled()\n\n# 移除系统中应用的所有 watcher，建议每次使用前都执行防止前面任务注册的未删除影响正常处理流程\nd.remove_all_watchers()\n\n# 获取系统中所有已应用的 watcher 名称列表\nd.get_applied_watchers()\n\n# 彻底移除一个 watcher\nd.remove_watcher(name)\n\n# 应用watcher到系统中（当 watcher_loop 启动，此watcher将会生效）\nd.set_watcher_enabled(name, True)\n# 取消应用\nd.set_watcher_enabled(name, False)\n\n# 获取此 watcher 是否应用\nd.get_watcher_enabled(name)\n```\n\n> 监视系统界面出现某个元素的次数\n\n```python\n# 做一些测试前的清理，当然，并不是每 register 一个就需要这样\n# 只是为了确保测试过程不被干扰\nd.remove_all_watchers()\nd.set_watcher_loop_enabled(True)\n\n# 应用监视界面出现 好的 的次数\n# 第二个参数为数组，可以给多个 Selector 表示条件都满足才会记录\n# 但是不建议超过三个\nd.register_none_op_watcher("RecordElementAppearTimes", [Selector(textContains="好的")])\nd.set_watcher_enabled("RecordElementAppearTimes", True)\n\n# ... 做满足条件的操作\n\n# 获取记录的次数\nd.get_watcher_triggered_count("RecordElementAppearTimes")\n\n# 重置记录的次数\nd.reset_watcher_triggered_count("RecordElementAppearTimes")\n\n# 移除\nd.remove_watcher("RecordElementAppearTimes")\n```\n\n\n> 当界面出现匹配元素时点击某个元素\n\n```python\n# 做一些测试前的清理，当然，并不是每 register 一个就需要这样\n# 只是为了确保测试过程不被干扰\nd.remove_all_watchers()\nd.set_watcher_loop_enabled(True)\n\n# 示例为，当APP启动后出现用户协议时，自动点击同意\n# 第二个参数为数组，可以给多个 Selector 表示条件都满足才会点击\n# 但是不建议超过三个\nd.register_click_target_selector_watcher("ClickAcceptWhenShowAggrement", [Selector(textContains="用户协议")],\n                                         Selector(textContains="同意", clickable=True))\nd.set_watcher_enabled("ClickAcceptWhenShowAggrement", True)\n\n# ... 做满足条件的操作\n\n# 移除\nd.remove_watcher("ClickAcceptWhenShowAggrement")\n```\n\n\n> 当界面出现匹配元素时点击物理按键\n\n```python\n# 做一些测试前的清理，当然，并不是每 register 一个就需要这样\n# 只是为了确保测试过程不被干扰\nd.remove_all_watchers()\nd.set_watcher_loop_enabled(True)\n\n# 示例为，当界面存在 个人中心 时，按下HOME键回到启动屏幕\n# 第二个参数为数组，可以给多个 Selector 表示条件都满足才会点击\n# 但是不建议超过三个\nd.register_press_key_watcher("PressBackWhenHomePageShows", [Selector(textContains="个人中心")], Keys.KEY_HOME)\nd.set_watcher_enabled("PressBackWhenHomePageShows", True)\n\n# ... 做满足条件的操作\n\n# 移除\nd.remove_watcher("PressBackWhenHomePageShows")\n```\n\n## 接口锁\n\n这里的基本功能让你可以锁定接口只能为当前 Device 实例使用。\n\n```python\n# 获得锁，此锁将在60秒后被自动释放，其他客户端将可以获得锁，你可以更改此时间\n# 但是，如果改得太高因为异常脚本退出，你将近乎永远无法连接设备，你可能需要进行重启\n# 此获得锁接口可重入，重入时等价于 _refresh_lock，建议只调用一次\nd._acquire_lock(leaseTime=60)\n# 刷新锁，每次调用后将锁过期时间设为此 leaseTime\n# 做定期调用来保持设备锁定\nd._refresh_lock(leaseTime=60)\n# 释放锁，其他客户端将可以获得锁\nd._release_lock()\n```\n\n## 使用内置终端\n\n这里的内部终端，指的是你通过 web 远程桌面或者 ssh/内置adb 连接的终端，里面内置了一些命令以及Python模块，你可以\n直接在里面执行一些操作或者运行一些 Python 代码，甚至可以直接在终端内完成自控，由于兼容性考虑，adb 连接的终端不存在部分命令提示等功能。\n\n> 现在假设你已经打开了 web 远程桌面，你应该已经在页面上看到了一个 linux 终端。\n执行命令 `cd` 可以切换到家目录（默认为 `/data/usr`），这是你的工作区，你可以在此存储文件。终端支持命令补全但不支持参数补全，你也可以在终端输入部分命令，随后通过上下键自动填补历史命令。同时，内部提供了一些命令别名，这些命令别名及功能如下。\n```\nl                  = 命令 ls\nll                 = 命令 ls -l\nla                 = 命令 ls -la\npy                 = 命令 python\n..                 = 切换到父目录\n...                = 切换到父目录的父目录\np                  = 切换到上一个目录\nt                  = 切换到 /data/local/tmp\n```\n\n> 其他一些实用命令。\n\n```\n* python           (Python)\n* strace           (syscall trace)\n* ltrace           (libcall trace)\n* curl             (cURL)\n* fsmon            (文件访问监控)\n* stunnel          (流量加密)\n* redir            (端口转发)\n* scapy            (流量分析)\n* iperf3           (网络性能测试)\n* nano             (文件编辑器)\n* vi               (文件编辑器)\n* ncdu             (查找磁盘文件占用)\n* socat            (网络工具)\n* sqlite3          (读取 SQLite 数据库，支持 cipher)\n* tcpdump          (流量分析)\n* busybox          (命令集合)\n* MemDumper        (https://github.com/kp7742/MemDumper)\n* frida            (frida-tools)\n* frida-ps         (frida-tools)\n* frida-trace      (frida-tools)\n* frida-ls-devices (frida-tools)\n* frida-discover   (frida-tools)\n* frida-kill       (frida-tools)\n* frida-apk        (frida-tools)\n* frida-create     (frida-tools)\n* frida-join       (frida-tools)\n* 等基础 linux 命令\n```\n\n> Python 也内置了一些三方库，注意无法通过 PIP 安装额外的库。\n\n```\n* lamda            (自身)\n* capstone         (反汇编引擎)\n* keystone_engine  (汇编引擎)\n* unicorn          (CPU模拟引擎)\n* lief             (二进制程序解析)\n* lxml             (xml/html解析)\n* redis            (redis客户端)\n* tornado          (web框架)\n* pyOpenSSL        (OpenSSL)\n* requests         (requests)\n* scapy            (流量分析)\n* frida            (frida)\n* pyaxmlparser     (APK解析)\n* xmltodict        (xml转dict)\n* msgpack_python   (msgpack)\n```\n\n这里不会介绍如何使用这些命令或库。\n\n\n# 工具及教程\n\n其中的每个文件夹下都有一份使用说明。\n\n## 一键中间人\n\n打开 [tools/README.md](tools/README.md) 查看。\n\n## 国际代理进行中间人\n\n打开 [tools/README.md](tools/README.md) 查看。\n\n## 安装 ADB 公钥\n\n打开 [tools/README.md](tools/README.md) 查看。\n\n## OpenVPN 服务\n\n打开 [tools/README.md](tools/README.md) 查看。\n\n## SOCKS5 服务\n\n打开 [tools/README.md](tools/README.md) 查看。\n\n## 端口转发服务\n\n打开 [tools/README.md](tools/README.md) 查看。\n\n## 注入 Frida RPC 脚本\n\n打开 [tools/README.md](tools/README.md) 查看。\n\n## 生成加密连接证书\n\n打开 [tools/README.md](tools/README.md) 查看。\n\n## 列出内网设备\n\n打开 [tools/README.md](tools/README.md) 查看。\n\n\n如果仍有疑问，请加入社区讨论：[电报 t.me/lamda_dev](https://t.me/lamda_dev) | [gitter.im/lamda-dev](https://gitter.im/lamda-dev/community)']
JAVA,存放JAVA开发的设计思想、算法：《剑指Offer》、《编程珠玑》、《深入理解Java虚拟机：JVM高级特性与最佳实践》、《重构-改善既有代码的设计 中文版》、《clean_code(中文完整版)》、《Java编程思想(第4版)》、《Java核心技术 卷I (第8版)》、《Quartz_Job+Scheduling_Framework》；一些大的上传不上来的文件在README,3941,https://github.com/singgel/JAVA,master,['#JAVA\n存放JAVA开发的框架、开源项目、服务器调优说明  \n大的存放不下的文件我放在了CSDN上\n图解TCP_IP_第5版.pdfhttps://download.csdn.net/download/singgel/10575268  \n\nJAVA并发编程实践 https://download.csdn.net/download/singgel/10575062  \n\nJ2EE核心模式.pdf https://download.csdn.net/download/singgel/10575054  \n\nhead+first+servlets jsp https://download.csdn.net/download/singgel/10575054  \n\n深入理解Java虚拟机JVM高级特性与最佳实践 https://download.csdn.net/download/singgel/10575034  \n\n从PAXOS到ZOOKEEPER分布式一致性原理与实践 https://download.csdn.net/download/singgel/10575025  \n\neffective java https://download.csdn.net/download/singgel/10575008\n\n深入浅出MyBatis技术原理与实战 https://download.csdn.net/download/singgel/10616746\n\n大型网站系统及Java中间件实践 https://download.csdn.net/download/singgel/10621351\n\n深入分析Java Web技术内幕 https://download.csdn.net/download/singgel/10623623\n\nHotSpot实战 https://download.csdn.net/download/singgel/10623740\n\nJava多线程编程核心技术 https://download.csdn.net/download/singgel/10623743\n\nSpring源码深度解析 https://download.csdn.net/download/singgel/10623766\n\n深入解析Spring架构与设计原理 https://download.csdn.net/download/singgel/10637765\n']
NIM_Duilib_Framework,网易云信Windows应用开发框架。,1735,https://github.com/netease-im/NIM_Duilib_Framework,master,['# NIM Duilib\n\nNIM Duilib 包含了一整套桌面软件的开发部件，与其说这是一个界面库，不如说它是一个开发框架。从原有 Duilib 基础上拓展了一些新的能力，并整合了 Google base 基础类库（线程、内存、闭包等）。您完全可以直接使用这个框架来开发任何你想要的桌面应用。\n\n![GitHub](https://img.shields.io/badge/license-MIT-green.svg)\n[![Build status](https://ci.appveyor.com/api/projects/status/u29yl0j7pasopm3h?svg=true)](https://ci.appveyor.com/project/nmgwddj/nim-duilib-framework) [![Join the chat at https://gitter.im/NIM_Duilib_Framework/community](https://badges.gitter.im/NIM_Duilib_Framework/community.svg)](https://gitter.im/NIM_Duilib_Framework/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[English](README_en-US.md)\n\n## 特色\n\n - 多国语言支持\n - 通用样式支持\n - DPI 缩放支持\n - GIF 动画支持\n - CEF 控件支持（CEF 2623 支持 XP）\n - 触控设备支持（Surface、Wacom）\n - 抽象渲染接口（为其他渲染引擎提供支持）\n\n## 预览\n\n![preview](docs/PREVIEW.gif)\n\n## 开始\n\n克隆项目到你的磁盘中\n\n```bash\ngit clone https://github.com/netease-im/NIM_Duilib_Framework\n```\n\n进入 `NIM_Duilib_Framework/examples` 目录，使用 Visual Studio 2013 Update 5 以上版本 IDE 打开 `examples.sln`，按下 F7 即可编译所有示例程序\n\n## 文档\n\n - [快速上手](docs/GETTING-STARTED.md)\n - [中文文档](docs/SUMMARY.md)\n\n## 目录\n\n├─`base` 基础类库  \n├─`bin` 各个示例程序输出目录，包含预设的皮肤和语言文件以及 CEF 依赖  \n├─`docs` duilib 接口的说明文档  \n├─`duilib` duilib 核心代码，依赖 base 但不依赖 shared  \n├─`libs` 静态库编译后的输出目录，包含预设的一些 CEF 组件静态库  \n├─`examples` 各类示例程序源代码  \n├─`third_party` 第三方库，目前仅有 cef_control 有依赖  \n├─`ui_components` 基于 duilib 封装的常用组件库如 `msgbox`、`toast`、`cef_control` 等  \n\n## 交流\n\n - 遇到问题：欢迎查看我们整理过的[中文文档](docs/SUMMARY.md)参考[示例程序](examples/README.md)来帮助你解决疑惑\n - 提交缺陷：在确保使用最新版本依然存在问题时请尽量以简洁的语言描述清楚复现该问题的步骤并提交 issue\n - 功能建议：如果你有什么好的想法或者提案，欢迎提交 issue 与我们交流\n\n#推荐好友使用云信，即享1500元京东卡奖励# 点击参与https://yunxin.163.com/promotion/recommend?channel=github\n[![main]( https://yx-web-nosdn.netease.im/quickhtml%2Fassets%2Fyunxin%2Fdefault%2F2022%2Fgithub%2F233.png)](https://yunxin.163.com/promotion/recommend?channel=github)\n']
Android-Plugin-Framework,Android插件框架，免安装运行插件APK ，支持独立插件和非独立插件,1713,https://github.com/limpoxe/Android-Plugin-Framework,master,['# Android-Plugin-Framework\n\nREADME: [中文](https://github.com/limpoxe/Android-Plugin-Framework/blob/master/README.md)\n\nAndroid-Plugin-Framework是一个Android插件化框架，用于通过动态加载的方式免安装运行插件apk\n\n### 最新版本: \'com.github.limpoxe:Android-Plugin-Framework:0.0.73@aar\'\n               \n### 此项目主要目标是为了运行非独立插件，而不是任意第三方app。\n\n尽管此框架支持独立插件，但目标并不是为了支持任意三方app，不同于平行空间或应用分身之类的产品。\n非独立插件相比任意三方app来说，可以预见到其使用了哪些系统api和特性，而且所有行为都是可以预测的。而任意三方app是不可预测的。\n框架的做法是按需hook，即需要用到哪些系统特性和api，就对哪些特性和api提供支持。这种做法对开发非独立插件和二方独立插件而言完全足够。\n目前已经添加了对常用特性和api的支持，如需使用的api还未支持请联系作者。\n\n### FEATURE\n- 框架透明, 插件开发与普通apk开发无异，无约定约束\n- 支持非独立插件和独立插件(非任意三方)\n- 支持四大组件/Application/Fragment/Accessibility/LaunchMode/so\n- 支持插件Theme/Style,宿主Theme/Style,轻松支持基于主题属性的皮肤切换\n- 支持插件发送Notification/时在RemoteViews中携带插件中的资源（只支持5.x及以上, 且不支持miui8）\n- 支持插件热更新：即在插件模块已经被唤起的情况先安装新版本插件，无需重启插件进程（前提是插件高度内敛，宿主```不主动```持有插件中的任何对象）\n- 支持全局服务：即插件向容器注册一个服务，其他所有插件已经宿主都获取并调用此服务\n- 支持DataBinding（仅限独立插件）\n- 支持插件WebView加载插件本地HTML文件\n- 支持插件Fragment/View内嵌宿主Activity中\n- 支持FileProvider\n- 支持2.3-12.0\n\n### LIMIT\n- 不支持插件Activity转场动画使用插件中的动画资源\n- 不支持插件Manifest中申请权限，所有权限必须预埋到宿主Manifest中\n- 不支持第三方app试图唤起插件中的组件时直接使用插件组件的Intent。\n  第三方app要唤起插件中的静态组件，例如Activity/service/Provider，必须由宿主程序进行桥接，即此组件需同时预埋到宿主和插件的Manifest中\n- 不支持android.app.NativeActivity\n- 不支持当一个插件依赖另一个插件时，被插件依赖的包含资源\n- 不支持插件中的webview弹出```原生Chrome组件```\n  例如通过html的<input type="date"/>标签设置时间选择器。\n  说明：是否能支持原生组件取决于系统中使用WebView的实现。\n       如果是使用的Android System Webview，则可以支持。因为它packageId是以0x3f开头；\n       如果是使用的Chrome Webview，则不支持。因为它packageId是以0x7f开头，会和插件冲突。\n       这是采用Public.xml进行资源分组的缺陷。\n- 可能不支持对插件或者宿主进行加壳加固处理，未尝试\n\n# HOW TO USE\n```\n    buildscript {\n        dependencies {\n            //gradle-7.3.3-all\n            classpath "com.android.tools.build:gradle:7.2.0"\n        }\n    }\n    \n    allprojects {\n    \t\trepositories {\n    \t\t\t...\n    \t\t\tmaven { url \'https://jitpack.io\' }\n    \t\t}\n    }\n```\n### 宿主侧\n1、 新建一个工程，作为宿主工程\n\n2、 在宿主工程的build.gradle文件下添加如下3个配置\n```\n    //插件脚本\n    apply from: "https://raw.githubusercontent.com/limpoxe/Android-Plugin-Framework/master/FairyPlugin/agp7_2_0/host.gradle"        \n\n    android {\n        defaultConfig {\n            //这个配置不可省略\n            applicationId 宿主app包名        \n        }\n    }\n```\n\n```\n    dependencies {\n        //请务必使用@aar结尾，以中断依赖传递\n        implementation(\'com.github.limpoxe:Android-Plugin-Framework:latest.release@aar\')\n        //可选，用于支持插件全局函数式服务，不使用全局函数式服务不需要添加此依赖\n        //implementation(\'com.limpoxe.support:android-servicemanager:1.0.5@aar\')\n    }\n```\n\n```\n    fairy {\n        //可选配置，用于指定插件进程名。默认插件进程为单独的进程，进程名为":plugin"\n        //若设置为空串或者null即是使用宿主进程作为插件进程\n        //pluginProcess = ""\n        //pluginProcess = null\n        //pluginProcess = ":xxx"\n    }\n```\n\n3、 在宿主工程中新建一个类继承自Application类, 并配置到AndroidManifest.xml中并重写这个类的下面2个方法\n```\n    @Override\n    protected void attachBaseContext(Context base) {\n        super.attachBaseContext(base);\n        \n        //框架日志开关, 默认false\n        FairyGlobal.setLogEnable(true);\n        \n        //首次加载插件会创建插件对象，比较耗时，通过弹出loading页来过渡。\n        //这个方法是设置首次加载插件时, 定制loading页面的UI, 不传即默认没有loading页\n        //在宿主中创建任意一个layout传进去即可\n        //注意：首次唤起插件组件时，如果是通过startActivityForResult唤起的，如果配置了loading页，\n        //则实际是先打开了loading页，再转到目标页面，此时会忽略ForResult的结果。这种情况下应该禁用loading页配置\n        FairyGlobal.setLoadingResId(R.layout.loading);\n        \n        //是否支持插件中使用本地html, 默认false\n        FairyGlobal.setLocalHtmlenable(true);\n        \n        //初始化框架\n        PluginLoader.initLoader(this);\n    }\n```\n        \n```\n    @Override\n    public Context getBaseContext() {\n        return PluginLoader.fixBaseContextForReceiver(super.getBaseContext());\n    }\n```\n\n4、在宿主工程中通过下面3个方法进行最基本的插件操作\n```\n    安装: PluginManagerHelper.installPlugin( SDcard上插件apk的路径 );\n    卸载: PluginManagerHelper.remove( 插件packageName );\n    列表: PluginManagerHelper.getPlugins();\n```\n    \n5、通过构造一个插件组件Intent打开插件\n\n   例如打开插件的Launcher界面\n```       \n   Intent launchIntent = getPackageManager().getLaunchIntentForPackage( 插件packageName );\t\t\t\n   startActivity(launchIntent);\n```\n   宿主编译完成后，会在outputs/distrubites目录下生成一个名为host.bar的基线包，作为编译插件的基线。\n   以上所有内容及更多详情可以参考Demo\n\t\n### 插件侧 \xa0\n独立插件：\n\n    新建一个工程, 作为插件工程，无需任何其他配置，编译出来即可当插件apk安装到宿主中。\n\n非独立插件：\n\n1、新建一个工程, 作为插件工程。\n            \n2、在build.gradle中添加如下2个配置\n```\n    //插件脚本\n    apply from: "https://raw.githubusercontent.com/limpoxe/Android-Plugin-Framework/master/FairyPlugin/agp7_2_0/plugin.gradle"\n\n    android {\n        defaultConfig {\n            //这个配置不可省略\n            applicationId 插件app包名        \n        }\n    }\n    \n    dependencies {\n        //***这是demo中的示例，请根据自己的实际情况修改，作用是指向插件依赖的宿主基线包***\n        //支持文件、maven坐标等写法\n        //baselinePatch \'xxx:xxx:xxx@bar\'\n        //debugBaselinePatch \'xxx:xxx:xxx@bar\'\n        //releaseBaselinePatch \'xxx:xxx:xxx@bar\'\n        baselinePatch files(project(\':Samples:PluginMain\').getBuildDir().absolutePath + \'/distributions/host.bar\')\n    }\n\n ```       \n  \n  完成以上2步后即可编译出非独立插件，以上所有内容及更多详情可以参考Demo\n  \n### Demo编译方法\n\n   a）如果是命令行中：\n   \n```\n   cd  Android-Plugin-Framework\n   \n   ./gradlew clean\n  \n   ./gradlew :Samples:PluginMain:assembleF1Debug\n   \n   ./gradlew :Samples:PluginTesBase:assembleF1Debug\n   \n   ./gradlew assembleF1Debug\n   \n   ./gradlew :Samples:PluginMain:assembleF1Debug\n   \n   说明：由于框架、demo宿主和各个demo插件都在同一个工程下，依赖关系互相影响，因此需要一定的编译顺序才能正常运行\n   \n   第一个assembleF1Debug是为了编译宿主，产生基线bar文件\n   \n   第二个assembleF1Debug是为了编译基础插件，产生插件apk和jar，基础插件jar会被其他插件依赖\n   \n   第三个assembleF1Debug是为了编译所有插件，产生插件apk\n   \n   第四个assembleF1Debug是为了重新编译宿主，将前面编译生成的插件apk内置到宿主的assets目录中，作为内置插件使用\n   \n   接下来将宿主的out目录下的apk安装到设备上即可\n   \n```\n   \n\n   b）如果是studio中：\n   \n   打开studio右侧gradle面板区，点clean、点assembleDebug。不要使用菜单栏的菜单编译。\n\n   重要：\n        \n        1、由于编译脚本依赖Task.doLast, 使用其他编译方法（如菜单编译）可能不会触发Task.doLast导致编译失败\n        \n        2、必须先编译宿主，再编译非独立插件。（这也是使用菜单栏编译会失败的原因之一）\n           原因很简单，既然是非独立插件，肯定是需要引用宿主的类和资源的。所以编译非独立插件时会用到编译宿主时的输出物\n\n        3、由于宿主和插件在同一个工程中，点击assembleDebug时编译顺序不可控，会导致每次clean后，首次assembleDebug会失败，此时重新编译即可\n           可能需要执行3次assembleDebug，\n               第一次是编译宿主，产生bar文件，\n               第二次是依赖bar编译插件，产生插件文件\n               第三次是重新编译宿主，将插件文件内置到宿主assets中\n            所以如果使用其他编译方法，请务必仔细阅读build.gradle，了解编译过程和依赖关系后可以自行调整编译脚本，否则可能会失败。\n\n\t    4、Demo中使用了arm平台的so，若在x86平台上测试Demo可能会有so异常，请自行适配so。\n\t\n \xa0 待插件编译完成后，即可通过宿主在运行时下载插件apk或者将插件apk复制到sdcard调用PluginManagerHelper.installPlugin("插件apk绝对路径")进行插件安装。\n\n   通常插件会内置一个版本到宿主中随宿主一起发布，则需要将插件配置到宿主的assets目录下，再编译一次宿主（即上述3中的第三次编译）。\n   配置方法如下：\n\n        dependencies {\n            //支持坐标依赖\n            //innerPlugin \'xxx:xxx:xxx@apk\'\n            innerPlugin \'/xx/xx/xx/xx.apk\'\n        }\n\n\n   增加这个配置以后，宿主在打包时会将这个依赖的插件apk打包到宿主的assets目录中\n\n## 其他\n1. [使用指南](https://github.com/limpoxe/Android-Plugin-Framework/wiki/%E5%85%B6%E4%BB%96%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97)\n2. [原理简介](https://github.com/limpoxe/Android-Plugin-Framework/wiki/%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B)\n3. [使用Public.xml的坑和填坑](https://github.com/limpoxe/Android-Plugin-Framework/wiki/%E4%BD%BF%E7%94%A8Public.xml%E7%9A%84%E5%9D%91%E5%92%8C%E5%A1%AB%E5%9D%91).\n4. [更新记录](https://github.com/limpoxe/Android-Plugin-Framework/wiki/%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95)\n\n## 联系作者：\n  Q：15871365851，添加时请注明插件开发\n  \n  Q群：116993004，重要：添加前请务必仔细阅读此ReadMe！请务必仔细阅读Demo！\n']
MiPushFramework,[Archived, SEE THE LINK FOR FORK] Let supported push service run system-ly on every Android devices,2059,https://github.com/MiPushFramework/MiPushFramework,master,['# MiPushFramework\n\n[![Build Status](https://travis-ci.org/MiPushFramework/MiPushFramework.svg?branch=master)](https://travis-ci.org/MiPushFramework/MiPushFramework)\n[![License GPL-3.0](https://img.shields.io/badge/license-GPLv3.0-blue.svg)](https://github.com/MiPushFramework/MiPushFramework/blob/master/LICENSE)\n![Min Android Version](https://img.shields.io/badge/android-lollipop-%23860597.svg)\n\n在非 MIUI 系统上体验小米系统级推送。\n\n![](https://raw.githubusercontent.com/MiPushFramework/MiPushFramework/master/art/tab_events.jpg)\n![](https://raw.githubusercontent.com/MiPushFramework/MiPushFramework/master/art/tab_permissions.jpg)\n![](https://raw.githubusercontent.com/MiPushFramework/MiPushFramework/master/art/ask.jpg)\n![](https://raw.githubusercontent.com/MiPushFramework/MiPushFramework/master/art/tab_settings.jpg)\n![](https://raw.githubusercontent.com/MiPushFramework/MiPushFramework/master/art/tab_apps.jpg)\n\n## 什么是小米系统级推送，为什么会有这个项目\n\n小米推送是小米公司提供的推送服务，许多 App 都在使用（如酷安）。\n\n它非常轻量，会在 MIUI 设备上自动启用系统推送，而非 MIUI 设备则在后台保持长连接。\n\n\n\n### 系统级推送\n\n类似 GCM，小米推送的系统级推送是在 MIUI 完成的。应用在启动时，会判断如果是 MIUI ROM 则向系统注册推送，推送工作都由系统完成，应用无需后台，更省电。\n\n然而在非 MIUI，每个使用小米推送的应用都会在后台启动一个 `XMPushService`， 10个应用就有10个，20个就有20个服务.. 非常耗电耗内存费流量。\n\n\n\n### 本项目的意义\n\n本项目就是想让任何不用MIUI的用户都能用上小米的系统推送，这样既能保证推送，又保证了无需后台。\n\n\n## 注意\n\n* 请勿使用 黑域、绿色守护、Xposed一些模块 对 `Push` 做操作，可能导致推送不稳定\n* 只有推送功能。其他完整功能（如查找手机）请使用 MIUI\n* 服务本身不需要 Root、Xposed 支持，但是为了伪装为MIUI设备，建议使用伪装增强模块\n\n\n\n## 优点\n\n* 简单，安装非常简单\n* 使用后，其他应用的 `XMPushService` 会自动禁用，就像在 MIUI，同时还能保证推送\n* 完整事件记录，可以监控每个应用的 注册和推送\n* 拦截小米推送产生的不必要唤醒，也能阻止它读取您的隐私\n\n\n\n\n## 开始使用\n\n安装步骤非常简单 ：\n\n* 前往 [Releases 标签](https://github.com/MiPushFramework/MiPushFramework/releases)，下载最新的 Release APK ，并安装。\n* 跟着向导进行设置。\n\n\n## 反馈问题\n\n遇到任何问题，请先看看 Issues 里面有没有人提过。（常见问题：无法收到推送）\n如果没有找到答案，请为每个问题提交一份 Issue，并务必带上如下内容，以便开发者解决：\n\n* 你的 ROM 是什么，Android 版本是什么\n* 有没有使用框架等工具\n\n同时，请使用 设置-获取日志 获取你的日志文件，写进 Issue。\n\n## 日志\n\n框架会自动记录日志，保存到私有目录。您可以前往 设置-高级配置 中清理。\n\n\n\n## 参与项目\n\n请参考 [Contribution Guideline](CONTRIBUTION.md)\n\n## 已知问题\n\n* 对于部分小众的ROM （如 360OS）导致无法正常工作的情况，我们只会竭尽全力保证推送的运行，其它不妨碍推送的「特殊适配」会被忽略。对于这些情况，建议您更换更好的 ROM 以获得最佳体验。\n* 努比亚ROM应用（第三方使用 MiPush 的应用）可能不会自动禁用其 XMPushService 并启动服务，请尝试将框架设为系统应用\n* 锤子 ROM 下，Push 可以正确收到通知，但是通知栏没有提示 #143\n* 开发者学生党，开学了更新可能不太及时，请谅解\n* 一些通知 Feature 可能无法使用（如通知都会显示为推送框架发出，而不是目标应用）\n\n## 感谢\n\n* @Rachel030219 提供文件\n* Android Open Source Project, MultiType, greenDao, SetupWizardLibCompat, Condom, MaterialPreference，GreenDaoUpgradeHelper, epic, Log4a，helplib，RxJava RxAndroid，RxActivityResult，RxPermissions, hiBeaver\n* 酷安 @PzHown @lmnm011223 @苏沐晨风丶（未采纳） 提供图标\n\n\n# License\n\nGPL v3，有些狗不遵守开源协议（非本项目），请**务必**遵守开源协议\n']
wet-boew,Web Experience Toolkit (WET): Open source code library for building innovative websites that are accessible, usable, interoperable, mobile-friendly and multilingual. This collaborative open source project is led by the Government of Canada.,1504,https://github.com/wet-boew/wet-boew,master,["([Français](#boîte-à-outils-de-lexpérience-web-boew))\n\n# Web Experience Toolkit (WET)\n\n[![Build Status](https://secure.travis-ci.org/wet-boew/wet-boew.svg?branch=master)](https://travis-ci.org/wet-boew/wet-boew)\n[![devDependency Status](https://david-dm.org/wet-boew/wet-boew/dev-status.svg)](https://david-dm.org/wet-boew/wet-boew#info=devDependencies)\n\n## What is the Web Experience Toolkit?\n\n* An [award-winning](https://wet-boew.github.io/wet-boew/docs/ref/accolades-en.html#awards) front-end framework for building websites that are [accessible](https://wet-boew.github.io/wet-boew/index-en.html#accessibility), [usable](https://wet-boew.github.io/wet-boew/index-en.html#usability), [interoperable](https://wet-boew.github.io/wet-boew/index-en.html#interoperability), [mobile friendly](https://wet-boew.github.io/wet-boew/index-en.html#mobile-friendly-responsive-design) and [multilingual](https://wet-boew.github.io/wet-boew/index-en.html#multilingual)\n* A collection of [flexible and themeable templates and reusable components](https://wet-boew.github.io/wet-boew/index-en.html#themeable-and-reusable)\n* A [collaborative open source project led by the Government of Canada](https://wet-boew.github.io/wet-boew/index-en.html#collaborative-approach)\n\n## Key resources\n\n* [Documentation](https://wet-boew.github.io/wet-boew/docs/index-en.html)\n* [Downloads](https://wet-boew.github.io/wet-boew/docs/versions/dwnld-en.html)\n* [Examples](https://wet-boew.github.io/wet-boew/demos/index-en.html)\n* [Version history](https://wet-boew.github.io/wet-boew/docs/versions/index-en.html) and [roadmap](https://wet-boew.github.io/wet-boew/docs/versions/rdmp-en.html)\n* [Terms and conditions](https://wet-boew.github.io/wet-boew/License-en.html) (MIT license)\n* [Source code repository](https://github.com/wet-boew/wet-boew/) and [contributing guidelines](https://wet-boew.github.io/wet-boew/docs/start-en.html#develop)\n* [Communications material](https://wet-boew.github.io/wet-boew/docs/comms-en.html)\n* [Websites using WET](https://wet-boew.github.io/wet-boew/docs/ref/wetsites-en.html)\n\n## Benefits\n\n### Accessibility\n\n* Conforms to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) level AA\n* Leverages [WAI-ARIA](https://www.w3.org/TR/wai-aria/) to further enhance accessibility\n* Assistive technology testing (Access Working Group)\n\n### Usability\n\n* Iterative approach to design\n* Design patterns and usability testing (User Experience Working Group)\n\n### Interoperability\n\n* [HTML5](https://www.w3.org/TR/html5/)-first approach (leveraging native HTML5 support and filling support gaps with “polyfills”)\n* Supporting a wide variety of browsers (IE, Firefox, Chrome, Safari, Opera)\n* Building support for HTML data ([RDFa 1.1 Lite](https://www.w3.org/TR/rdfa-lite/), [Schema.org](https://www.schema.org/))\n\n### Mobile friendly responsive design\n\n* Adapts to different screen sizes and device capabilities\n* Touchscreen support\n* Optimized for performance\n* Building support for device-based mobile applications\n\n### Multilingual\n\n* Currently supports 33 languages (including right-to-left languages)\n  * English\n  * French\n  * Afrikaans\n  * Albanian\n  * Arabic\n  * Armenian\n  * Bulgarian\n  * Chinese\n  * Chinese (Simplified)\n  * Czech\n  * Dutch\n  * Estonian\n  * German\n  * Greek\n  * Hindi\n  * Hungarian\n  * Icelandic\n  * Indonesian\n  * Italian\n  * Japanese\n  * Korean\n  * Latvian\n  * Lithuanian\n  * Polish\n  * Portuguese\n  * Portuguese (Brazilian)\n  * Russian\n  * Slovak\n  * Spanish\n  * Thai\n  * Turkish\n  * Ukranian\n  * Vietnamese\n\n### Themeable and reusable\n\n* Flexible framework that supports custom themes\n* Includes support for [2 different themes](https://wet-boew.github.io/wet-boew/docs/ref/themesstyle-en.html)\n* Reusable templates, [plugins](https://wet-boew.github.io/wet-boew/docs/ref/plugins-en.html) and widgets\n* [Adapted to various CMS and programming frameworks](https://wet-boew.github.io/wet-boew/docs/ref/variants-en.html) (Drupal, WordPress, SharePoint (in development), DotNetNuke (in development), PHP, SSI, Java/Maven)\n\n### Reduces costs by openly sharing and collaborating\n\n* Drives down research and development costs\n* Avoids duplication of effort\n* Produces better quality results\n\n### Collaborative approach\n\n* Project managed openly on GitHub, including discussion through the issues tracker\n* Encouraging a free flow of ideas, dialogue and innovation including sharing of challenges and ideas\n* External contributions welcome\n  * Pull requests\n  * Design patterns\n  * Issues and suggestions\n  * Documentation\n  * Testing\n* Multi-level review process for contributions to ensure code integrity (combination of automated and manual reviews)\n\n## How to Contribute\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## License\n\nUnless otherwise noted, the source code of this project is covered under Crown Copyright, Government of Canada, and is distributed under the [MIT License](LICENSE).\n\nThe Canada wordmark and related graphics associated with this distribution are protected under trademark law and copyright law. No permission is granted to use them outside the parameters of the Government of Canada's corporate identity program. For more information, see [Federal identity requirements](https://www.canada.ca/en/treasury-board-secretariat/topics/government-communications/federal-identity-requirements.html).\n\n-------------------------------------------------------------------\n\n# Boîte à outils de l’expérience Web (BOEW)\n\n## Qu’est-ce que la Boîte à outils de l’expérience Web?\n\n* Une bibliothèque de code [primée](https://wet-boew.github.io/wet-boew/docs/ref/accolades-fr.html#primes) pour construire des sites Web [accessibles](https://wet-boew.github.io/wet-boew/index-fr.html#accessibilit), [faciles d'emploi](https://wet-boew.github.io/wet-boew/index-fr.html#facilit-demploi), [interopérables](https://wet-boew.github.io/wet-boew/index-fr.html#interoprabilit), [optimisés pour les appareils mobiles](https://wet-boew.github.io/wet-boew/index-fr.html#conception-optimise-pour-les-appareils-mobiles-et-ractive) et [multilingues](https://wet-boew.github.io/wet-boew/index-fr.html#multilingue)\n* [Des modèles, ainsi que des composants réutilisables, qui sont flexibles et personnalisables](https://wet-boew.github.io/wet-boew/index-fr.html#personnalisable-et-rutilisable)\n* Un [projet à source ouverte collaboratif dirigé par le Gouvernement du Canada](https://wet-boew.github.io/wet-boew/index-fr.html#approche-collaborative)\n\n## Ressources clés\n\n* [Documentation](https://wet-boew.github.io/wet-boew/docs/index-fr.html)\n* [Téléchargements](https://wet-boew.github.io/wet-boew/docs/versions/dwnld-fr.html)\n* [Exemples pratiques](https://wet-boew.github.io/wet-boew/demos/index-fr.html)\n* [Historique des versions](https://wet-boew.github.io/wet-boew/docs/versions/index-fr.html) et [feuille de route](https://wet-boew.github.io/wet-boew/docs/versions/rdmp-fr.html)\n* [Conditions régissant l'utilisation](https://wet-boew.github.io/wet-boew/Licence-fr.html) (licence MIT)\n* [Dépôt de code source](https://github.com/wet-boew/wet-boew/) et [lignes directrices pour les contributeurs](https://wet-boew.github.io/wet-boew/docs/start-fr.html#develop)\n* [Matériel de communications](https://wet-boew.github.io/wet-boew/docs/comms-fr.html)\n* [Sites Web qui se servent de la BOEW](https://wet-boew.github.io/wet-boew/docs/ref/wetsites-fr.html)\n\n## Avantages\n\n### Accessibilité\n\n* Conforme aux [Règles pour l'accessibilité des contenus Web (WCAG) 2.0](https://www.w3.org/Translations/WCAG20-fr/) niveau AA\n* S'appuie sur [WAI-ARIA](https://www.w3.org/TR/wai-aria/) pour améliorer l'accessibilité\n* Vérification avec les technologies d'assistance (Groupe de travail sur l'accessibilité)\n\n### Facilité d'emploi\n\n* Approche itérative pour la conception\n* Patrons de conception et les essais de facilité d'emploi (Groupe de travail sur l'expérience des utilisateurs)\n\n### Interopérabilité\n\n* Approche centrée sur le [HTML5](https://www.w3.org/TR/html5/) (s'appuyant sur le soutien HTML5 natif et puis les &laquo;correctifs&raquo; pour résoudre les problèmes de soutien)\n* Soutien pour plusieurs navigateurs (IE, Firefox, Chrome, Safari, Opera)\n* Soutien en développement pour les données HTML ([RDFa 1.1 Lite](https://www.w3.org/TR/rdfa-lite/), [Schema.org](https://www.schema.org/))\n\n### Conception optimisée pour les appareils mobiles et réactive\n\n* S'adapte à différentes tailles d'écran et capacités d'appareil\n* Soutien pour les écrans tactiles\n* Optimisé pour les performances\n* Soutien en développement pour les applications s’installant sur un appareil mobile\n\n### Multilingue\n\n* Soutien actuellement 33 langues (y compris les langues droite-à-gauche)\n  * Anglais\n  * Français\n  * Afrikaans\n  * Albanais\n  * Allemand\n  * Arabe\n  * Arménien\n  * Bulgare\n  * Chinois\n  * Chinois (simplifiée)\n  * Coréen\n  * Espagnol\n  * Estonien\n  * Grec\n  * Hindi\n  * Hongrois\n  * Indonésien\n  * Islandais\n  * Italien\n  * Japonais\n  * Letton\n  * Lituanien\n  * Néerlandais\n  * Polonais\n  * Portugais\n  * Portugais (brésilien)\n  * Russe\n  * Slovaque\n  * Tchèque\n  * Thaï\n  * Turc\n  * Ukrainien\n  * Vietnamien\n\n### Personnalisable et réutilisable\n\n* Cadre flexible qui supporte des thèmes personnalisés\n* Soutien [2 thèmes différents](https://wet-boew.github.io/wet-boew/docs/ref/themesstyle-fr.html)\n* Modèles, [plugiciels](https://wet-boew.github.io/wet-boew/docs/ref/plugins-fr.html) et gadgets réutilisables\n* [Adapté aux différents systèmes de gestion de contenu et cadres de programmation](https://wet-boew.github.io/wet-boew/docs/ref/variants-fr.html) (Drupal, WordPress, SharePoint (en développement), DotNetNuke (en développement), PHP, SSI, Java/Maven)\n\n### Réduit les coûts en partageant et en collaborant ouvertement\n\n* Réduit les coûts de recherche et de développement\n* Évite la duplication des efforts\n* Produit des résultats de meilleure qualité\n\n### Approche collaborative\n\n* Projet géré ouvertement sur GitHub, y compris les discussions à travers le système de suivi des questions\n* Encourage la libre circulation des idées, du dialogue et de l'innovation, y compris le partage des défis et des idées\n* Les contributions externes sont invités\n  * Soumissions de code\n  * Patrons de conception\n  * Problèmes et suggestions\n  * Documentation\n  * Évaluations\n* Processus d'examen sur plusieurs niveaux pour les contributions pour assurer l'intégrité du code (combinaison d'évaluations automatisées et manuelles)\n\n## Comment contribuer\nVoir [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Licence\nSauf indication contraire, le code source de ce projet est protégé par le droit d'auteur de la Couronne du gouvernement du Canada et distribué sous la [licence MIT](LICENSE).\n\nLe mot-symbole « Canada » et les éléments graphiques connexes liés à cette distribution sont protégés en vertu des lois portant sur les marques de commerce et le droit d'auteur. Aucune autorisation n'est accordée pour leur utilisation à l'extérieur des paramètres du programme de coordination de l'image de marque du gouvernement du Canada. Pour obtenir davantage de renseignements à ce sujet, veuillez consulter les [Exigences pour l'image de marque](https://www.canada.ca/fr/secretariat-conseil-tresor/sujets/communications-gouvernementales/exigences-image-marque.html).\n"]
kft-activiti-demo,Demo for workflow framework and BPM platform -- Activiti,1583,https://github.com/henryyan/kft-activiti-demo,master,['# 简介\n\n本项目旨在让初学者快速入门Activiti。\n\n**作者**：[咖啡兔](http://www.kafeitu.me)\n\n**项目主页**：[http://www.kafeitu.me/activiti/2012/05/26/kft-activiti-demo.html](http://www.kafeitu.me/activiti/2012/05/26/kft-activiti-demo.html)\n\n**在线演示**：[http://demo.kafeitu.me:8080/kft-activiti-demo](http://demo.kafeitu.me:8080/kft-activiti-demo)\n\n**Wiki文档**: [https://github.com/henryyan/kft-activiti-demo/wiki](https://github.com/henryyan/kft-activiti-demo/wiki)\n\n**QQ群在线支持：**: 236540304\n\n**《Activiti实战》**：Activiti项目Team Leader **Tijs Rademakers**认可并推荐，详情访问 [http://www.kafeitu.me/activiti-in-action.html](http://www.kafeitu.me/activiti-in-action.html)\n\n----\n![](https://raw.githubusercontent.com/henryyan/kft-activiti-demo/master/src/main/webapp/images/activiti-in-action.jpg)\n\n----\n去 <a href="http://product.china-pub.com/3770832" style="font-size:17pt;color:red">China-Pub</a>| <a href="http://item.jd.com/11599588.html" style="font-size:17pt;color:red">京东</a>| <a href="http://product.dangdang.com/23622065.html" style="font-size:17pt;color:red">当当网</a>| <a href="http://www.amazon.cn/Activiti%E5%AE%9E%E6%88%98-%E9%97%AB%E6%B4%AA%E7%A3%8A/dp/B00RRCOYAQ/ref=sr_1_4?ie=UTF8&qid=1420773978&sr=8-4&keywords=activiti" style="font-size:17pt;color:red">亚马逊</a> 购买\n----\n\n# 框架版本\n\n* Activiti: **5.19.0**\n\n* Spring: **4.1.5.RELEASE**\n\n# 分支选择\n\nDemo提供Maven版本和no-maven版本，分别适用于会用mavne和不会用maven的同学。\n\n* **maven**分支：对应与git的`master`分支，便于安装和数据库初始化\n* **no-maven**分支：直接是一个eclipse工程，包含eclipse的项目配置文件和WEB-INF/lib下面的所有的jar文件\n\n## Maven方式运行\n\n> mvn clean jetty:run\n\n在 **pom.xml** 中配置了 **h2** 数据库与 **mysql** 数据库，默认启用 **h2** 数据库配置方式，如果使用 **mysql** 请启用mysql的配置(使用下面的命令)。\n\n> mvn clean jetty:run -Pmysql\n\n# 演示说明文档\n\n* [配置说明](https://github.com/henryyan/kft-activiti-demo/wiki/%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E)\n* [功能演示](https://github.com/henryyan/kft-activiti-demo/wiki/%E5%8A%9F%E8%83%BD%E6%BC%94%E7%A4%BA)\n \n![kft-activiti-demo截图](http://www.kafeitu.me/files/2012/05/kft-activiti-demo.png)\n\n## Changelog\n\n### 1.14.0（2015-11-26）\n1. 添加查看引擎参数功能\n2. 添加查看引擎数据库功能\n3. 添加管理用户与组功能\n4. 添加作业管理功能\n5. 5.17+方式嵌入Rest服务\n\n### 1.13.0（2015-11-23）\n1. 集成基于5.17+的流程设计器(Activiti Modeler,很漂亮),demo依赖的版本支持5.17以上\n2. 数据库配置属性转移到pom.xml里面,可以直接修改`pom.xml`文件的参数,也可以在运行时通过`-Djdbc.password=111111`参数覆盖\n\n### 1.11~1.12(unknown)\n1. 内部消耗掉了，不要问我...\n\n### 1.10.1（2014-04-23）\n1. 修复在最新版本Chrome（V34）不能运行Activiti Modeler问题\n\n### 1.10.0（2014-04-18）\n1. 集成了diagram-viewer，目前提供了三种流程跟踪方式\n2. 添加了针对JPA的演示\n3. 添加了全局监听的演示\n4. 使用5.15.1-kft版本（修复了5.15版本中查询待办任务<包含指定到人、候选人、候选组>方法的Bug）\n\n### 1.9.0（2014-01-01）\n1. 升级Activiti到5.14\n2. 同时支持纯Rest接口和Activiti Modeler的Rest路径映射\n\n### 1.8.0（2013-06-22）\n1. 升级Activiti至5.13\n2. 移除了全局监听器（以后的版本会再加入）\n\n### 1.7.2（2013-04-17）\n1. 升级Activiti至5.12.1-kft版本\n2. 添加全局监听器演示\n\n### 1.7.1（2013-04-10）\n1. 解决流程引擎自动生成的图片跟踪坐标错乱问题\n2. 使用重新打包的5.12.1，解决JDK6部署时报错问题\n3. 解决跟踪流程图时（调用引擎的图片生成工具）中文乱码\n\n### 1.7.0（2013-03-10）\n1. 添加分页查询演示\n2. 添加流程定义对象(ProcessDefinition)缓存演示, see: [Tweaking the process definition cache in Activiti 5.12](http://www.jorambarrez.be/blog/2012/12/20/tweaking-process-definition-cache/)\n3. 添加activityFontName属性配置，可以解决流程图中包含中文导致生成的流程图乱码问题\n4. 整合Activiti Modeler，可以在线设计流程\n\n> 特别说明：5.12.1不是官方提供，是我自己打包的一个版本（支持Native Query分页查询功能，5.13将会直接提供此功能）\n\n### 1.6.0（2013-01-06）\n1. 添加多实例（发文）演示\n2. 添加自动部署流程定义演示\n\n### 1.5.0 (2012-12-16)\n1. 13fc350 添加对流程定义状态的控制功能\n2. c50ec09 添加流程实例状态控制功能\n3. 9a97cda formkey查询任务时使用native query\n4. 3e8ab24 清理垃圾\n5. 9035e56 动态表单和外置表单的运行中列表显示的当前节点的英文名称，并在查询流程数据时区分动态、外置表单\n6. 7f955c4 重写JuelFormEngine，解决windows平台读取表单内容乱码问题\n7. d72778b 升级portlet插件为1.1.1\n8. 5e4007c 升级初始化sql的activiti版本为5.11\n9. 684c8a0 解决jsp文件中出现两个head问题\n10. 3bcbd56 菜单的传统改为普通，外部改为外置\n11. 645347c 移除不需要的依赖版本号\n\n### 1.4.1 (2012-12-01)\n\n1.升级jquery.portlet.js解决把一列的portlet拖走后不能再拖回问题\n\n2.升级:jquery -> 1.83，jquery ui -> 1.9.2, jquery.layout -> 1.3，html头部声明用html标准代替xhtml\n\n### 1.4 (2012-11-27)\n\n1.表单名称重构，portlet添加关于作者和表单概念模块\n\n2.首页用jquery.portlet插件显示信息，并添加一个待办任务列表的portlet\n\n2. c50ec09 添加流程实例状态控制功能\n3. 9a97cda formkey查询任务时使用native query\n4. 3e8ab24 清理垃圾\n5. 9035e56 动态表单和外置表单的运行中列表显示的当前节点的英文名称，并在查询流程数据时区分动态、外置表单\n6. 7f955c4 重写JuelFormEngine，解决windows平台读取表单内容乱码问题\n7. d72778b 升级portlet插件为1.1.1\n8. 5e4007c 升级初始化sql的activiti版本为5.11\n9. 684c8a0 解决jsp文件中出现两个head问题\n10. 3bcbd56 菜单的传统改为普通，外部改为外置\n11. 645347c 移除不需要的依赖版本号\n\n### 1.4.1 (2012-12-01)\n\n1.升级jquery.portlet.js解决把一列的portlet拖走后不能再拖回问题\n\n2.升级:jquery -> 1.83，jquery ui -> 1.9.2, jquery.layout -> 1.3，html头部声明用html标准代替xhtml\n\n### 1.4 (2012-11-27)\n\n1.表单名称重构，portlet添加关于作者和表单概念模块\n\n2.首页用jquery.portlet插件显示信息，并添加一个待办任务列表的portlet\n\n### 中间的版本没记录就忽略了。。。\n\n### 1.0.0（2011-10-23）鼻祖\n\n1. 第一个原始版本，当时应该只有流程部署和流程启动。。。\n']
freedom,Freedom是一个基于六边形架构的框架，可以支撑充血的领域模型范式。,2129,https://github.com/8treenet/freedom,master,['# Freedom DDD Framework\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/8treenet/gotree/blob/master/LICENSE) [![Go Report Card](https://goreportcard.com/badge/github.com/8treenet/freedom)](https://goreportcard.com/report/github.com/8treenet/freedom) [![Build Status](https://travis-ci.org/8treenet/gotree.svg?branch=master)](https://travis-ci.org/8treenet/gotree) [![GoDoc](https://godoc.org/github.com/8treenet/freedom?status.svg)](https://godoc.org/github.com/8treenet/freedom)\n[![GitHub release](https://img.shields.io/github/v/release/8treenet/freedom.svg)](https://github.com/8treenet/freedom/releases)\n<img align="right" width="200px" src="https://raw.githubusercontent.com/8treenet/blog/master/img/freedom.png">\n###### Freedom是一个基于六边形架构的框架，可以支撑充血的领域模型范式。\n\n## Overview\n- 集成 Iris\n- HTTP/H2C Server & Client\n- 集成普罗米修斯\n- AOP Worker & 无侵入 Context\n- 可扩展组件 Infrastructure\n- 依赖注入 & 依赖倒置 & 开闭原则\n- DDD & 六边形架构\n- 领域事件 & 消息队列组件\n- CQS & 聚合根\n- CRUD & PO Generate\n- 一级缓存 & 二级缓存 & 防击穿\n\n## 安装\n```sh\n$ go install github.com/8treenet/freedom/freedom@latest\n$ freedom version\n```\n\n## 脚手架创建项目\n```sh\n$ freedom new-project [project-name]\n$ cd [project-name]\n$ go run server/main.go\n```\n\n## 脚手架生成增删查改和持久化对象\n####\n```sh\n# freedom new-po -h 查看更多\n$ cd [project-name]\n\n# 数据库数据源方式\n$ freedom new-po --dsn "root:123123@tcp(127.0.0.1:3306)/freedom?charset=utf8"\n\n# JSON 数据源方式\n$ freedom new-po --json ./domain/po/schema.json\n```\n\n## Example\n\n#### [基础教程](https://github.com/8treenet/freedom/blob/master/example/base)\n#### [http2监听和依赖倒置](https://github.com/8treenet/freedom/blob/master/example/http2)\n#### [事务组件&自定义组件&Kafka&领域事件组件](https://github.com/8treenet/freedom/blob/master/example/infra-example)\n\n#### [一个完整的电商demo,包含CQS、聚合、实体、领域事件、资源库、基础设施](https://github.com/8treenet/freedom/blob/master/example/fshop)\n\n']
koishi,Cross-platform chatbot framework made with love,1921,https://github.com/koishijs/koishi,master,['./packages/koishi/readme.md']
sofa-bolt,SOFABolt is a lightweight, easy to use and high performance remoting framework based on Netty.,2272,https://github.com/sofastack/sofa-bolt,master,['# SOFABolt Project\n\n[![Build Status](https://travis-ci.com/sofastack/sofa-bolt.svg?branch=master)](https://travis-ci.com/sofastack/sofa-bolt)\n[![Coverage Status](https://codecov.io/gh/sofastack/sofa-bolt/branch/master/graph/badge.svg)](https://codecov.io/gh/sofastack/sofa-bolt)\n![license](https://img.shields.io/badge/license-Apache--2.0-green.svg)\n![version](https://img.shields.io/maven-central/v/com.alipay.sofa/bolt.svg?label=bolt)\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/sofastack/sofa-bolt.svg)](http://isitmaintained.com/project/sofastack/sofa-bolt "Percentage of issues still open")\n\n# 1. 介绍\nSOFABolt 是蚂蚁金融服务集团开发的一套基于 Netty 实现的网络通信框架。\n* 为了让 Java 程序员能将更多的精力放在基于网络通信的业务逻辑实现上，而不是过多的纠结于网络底层 NIO 的实现以及处理难以调试的网络问题，Netty 应运而生。\n* 为了让中间件开发者能将更多的精力放在产品功能特性实现上，而不是重复地一遍遍制造通信框架的轮子，SOFABolt 应运而生。\n\nBolt 名字取自迪士尼动画-闪电狗，是一个基于 Netty 最佳实践的轻量、易用、高性能、易扩展的通信框架。\n这些年我们在微服务与消息中间件在网络通信上解决过很多问题，积累了很多经验，并持续的进行着优化和完善，我们希望能把总结出的解决方案沉淀到 SOFABolt 这个基础组件里，让更多的使用网络通信的场景能够统一受益。\n目前该产品已经运用在了蚂蚁中间件的微服务 ([SOFARPC](https://github.com/sofastack/sofa-rpc))、消息中心、分布式事务、分布式开关、以及配置中心等众多产品上。\n\n# 2. 功能介绍\n![intro](.middleware-common/intro.png)\n\n## SOFABolt\u3000的基础功能包括：\n* 基础通信功能 ( remoting-core )\n    * 基于 Netty 高效的网络 IO 与线程模型运用\n    * 连接管理 (无锁建连，定时断链，自动重连)\n    * 基础通信模型 ( oneway，sync，future，callback )\n    * 超时控制\n    * 批量解包与批量提交处理器\n    * 心跳与 IDLE 事件处理\n* 协议框架 ( protocol-skeleton )\n    * 命令与命令处理器\n    * 编解码处理器\n    * 心跳触发器\n* 私有协议定制实现 - RPC 通信协议 ( protocol-implementation )\n    * RPC 通信协议的设计\n    * 灵活的反序列化时机控制\n    * 请求处理超时 FailFast 机制\n    * 用户请求处理器 ( UserProcessor )\n    * 双工通信\n    \n## 用法1\n将 SOFABolt 用作一个远程通信框架，使用者可以不用关心如何实现一个私有协议的细节，直接使用我们内置的 RPC 通信协议。可以非常简单的启动客户端与服务端，同时注册一个用户请求处理器，即可完成远程调用。同时，像连接管理、心跳等基础功能特性都默认可以使用。\n当前支持的调用类型如下图所示：\n\n![invoke_type](.middleware-common/invoke_types.png)\n\n* 示例 Demo 请参考我们的 [用户手册](https://github.com/sofastack/sofa-bolt/wiki/SOFA-Bolt-Handbook#14-%E5%9F%BA%E7%A1%80%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9E%8B)\n\n## 用法2\n将 SOFABolt 用作一个协议框架，使用者可以复用基础的通信模型、协议包含的接口定义等基础功能。然后根据自己设计的私有协议自定义 Command 类型、Command 处理器、编解码处理器等。如下图所示，RPC 和消息的 Command 定义结构：\n\n![msg_protocol](.middleware-common/msg_protocol.png)\n\n# 4. 如何贡献\n开放代码允许在签署协议之后，提交贡献代码。具体参考[如何参与贡献 SOFABolt 代码](./CONTRIBUTING.md)。\n\n对 SOFABolt 代码的修改和变更，需要遵守[版权协议](./LICENSE)。\n\n# 5. 多语言\n\n* [node](https://github.com/sofastack/sofa-bolt-node)\n* [python](https://github.com/sofastack/sofa-bolt-python)\n* [cpp](https://github.com/sofastack/sofa-bolt-cpp)\n\n# 6. 用户\n\n<div>\n<table>\n    <tr>\n      <td align="center" valign="middle">\n\t\t\t<img alt="蚂蚁集团" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*aK79TJUJykkAAAAAAAAAAAAAARQnAQ" height="60" />\n      </td>\n      <td align="center"  valign="middle">\n        <img alt="网商银行" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*uAmFRZQ0Z4YAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n        <img alt="恒生电子" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*_iGLRq0Ih-IAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n        <img alt="数立信息" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*JAgIRpjz-IgAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="Paytm" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*a0fvTKJ1Xv8AAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="天弘基金" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*99OQT7lDBsMAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="中国人保" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*P1BARJxwv1sAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="信美相互" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*jAzWQpIgFUAAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="南京银行" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*q9PMQI7hs8sAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="民生银行" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*GnUuSKmOtS4AAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="重庆农商行" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*FKrxSYhdi2wAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="中信证券" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*t-xbQb3WSjcAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="富滇银行" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*JCDYT6u6_asAAAAAAAAAAAAAARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="挖财" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*lVrVT4dpSDEAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="拍拍贷" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*TAePS6j56LsAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="OPPO金融" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*mU40QaJkwZYAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="运满满" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*_kBbQYUYdIQAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="译筑科技" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*wuKSTpZSEkEAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="杭州米雅信息科技" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*b-o5SITMKu0AAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="邦道科技" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*nsw1S5bt9DkAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="申通快递" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*C3ncSpDsjS8AAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="深圳大头兄弟文化" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*8AYmRowxSC0AAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="烽火科技" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*MjuuT4omCrwAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="亚信科技" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*vBBIRomYoEUAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="成都云智天下科技" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*p0OkQbC5RvsAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="上海溢米辅导" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*mJdtTJsn1PwAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="态赋科技" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*sfLDRL5TJx8AAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="风一科技" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*EGeMR4qprnkAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="武汉易企盈" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*31WRQ7zg3HIAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="极致医疗" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*cPOiS5q8NCwAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="京东" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*INhuS44qO8YAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="小象生鲜" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*K5ERQYbCRBgAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="北京云族佳" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*qzxjSZ2tlmIAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="欣亿云网" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*huOKQKvoLzwAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="山东网聪" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*INUFR7XIH1gAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="深圳市诺安赛威" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*eVGbR7RhDDkAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="上扬软件" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*VsqMT7n7p0AAAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="长沙点三" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*2eEzSqdPIc0AAAAAAAAAAABjARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="网易云音乐" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*66KbQ6seDqoAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="虎牙直播" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*uzr3RLUZ3RwAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="中国移动" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*vEo-T55XTOAAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="无纸科技" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*9aFQSLfyPhMAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="黄金钱包" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*tYZJRpANxNoAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="独木桥网络" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*GW6oTLIlAbcAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="wueasy" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*4uFWQacI-RwAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="北京攸乐科技" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*CD5VT50FXqMAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="易宝支付" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*oy0ZSquXXjAAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="威马汽车" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*LPf2TbTeJPwAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" valign="middle">\n      <img alt="亿通国际" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*tlq4R7QqUaEAAAAAAAAAAABkARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="新华三" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*gw9uTbZvsbAAAAAAAAAAAAAAARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      <img alt="klilalagroup" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*0cskToqBSi8AAAAAAAAAAAAAARQnAQ" height="60" />\n      </td>\n      <td align="center" valign="middle">\n      </td>\n    </tr>\n</table>\n</div>\n\n# 7. 联系我们\n\n- 微信\n  - 公众号：金融级分布式架构（Antfin_SOFA）：致力于打造一流的分布式技术在金融场景应用实践的技术交流平台，专注于交流金融科技行业内最前沿、可供参考的技术方案与实施路线。\n    \n    <img alt="Wechat" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*LVCnR6KtEfEAAAAAAAAAAABjARQnAQ" height="250" />\n  \n- 钉钉\n  - 钉钉交流群：\n    - ~~金融级分布式架构 SOFAStack 1群，群号：23127468~~ 已满\n    - ~~金融级分布式架构 SOFAStack 2群，群号：23195297~~ 已满\n    - ~~金融级分布式架构 SOFAStack 3群，群号：23390449~~ 已满\n    - ~~金融级分布式架构 SOFAStack 4群，群号：23372465~~ 已满\n    - ~~金融级分布式架构 SOFAStack 5群，群号：30315793~~ 已满\n    - 金融级分布式架构 SOFAStack 6群，群号：34197075\n\n      <img alt="DingTalk" src="https://gw.alipayobjects.com/mdn/sofastack/afts/img/A*SIFWTr5brrkAAAAAAAAAAAAAARQnAQ" height="250" />\n\n  - 钉钉交流群：SOFAStack 金牌用户服务群，如果您已经在生产环境使用了 SOFAStack 相关组件，还请告知我们，我们将会邀请您加入到此群中，以便更加快捷的沟通和更加高效的线上使用问题支持。\n']
ninja,Ninja is a full stack web framework for Java. Rock solid, fast and super productive.,1902,https://github.com/ninjaframework/ninja,develop,['     _______  .___ _______        ____.  _____   \n     \\      \\ |   |\\      \\      |    | /  _  \\  \n     /   |   \\|   |/   |   \\     |    |/  /_\\  \\ \n    /    |    \\   /    |    \\/\\__|    /    |    \\\n    \\____|__  /___\\____|__  /\\________\\____|__  /\n         web\\/framework   \\/                  \\/ \n        \n\n\nNinja - web framework\n=====================\n\nNinja is a full stack web framework for Java.\nRock solid, fast and super productive.\n\nGetting started\n---------------\n- Website with docs: https://www.ninjaframework.org\n- Source: https://github.com/ninjaframework/ninja\n- Continuous integration: ![Build Status](https://github.com/ninjaframework/ninja/actions/workflows/maven.yml/badge.svg)\n\n\n\n\n\n']
KSFramework,QQ Group：538722494，KSFramework = KEngine + SLua(or xLua) , Unity3D Framework/Toolsets focus on hot reload,1613,https://github.com/mr-kelly/KSFramework,master,['\n![KSFramework](Docs/KSFramework-logo.png)\n\n\n\n[![Build status](https://ci.appveyor.com/api/projects/status/lt34ynvl3lac62ln/branch/master?svg=true)](https://ci.appveyor.com/project/mr-kelly/ksframework/branch/master)\n\n[**K**Engine](https://github.com/mr-kelly/KEngine) + [**S**Lua](https://github.com/mr-kelly/slua) | [XLua](https://github.com/Tencent/xLua) | [ILRuntime](https://github.com/Ourpalm/ILRuntime)+ **Framework** = KSFramework\n\n**[KSFramework](https://github.com/mr-kelly/KSFramework)是一个整合KEngine、SLua/XLua/ILRuntime 的Unity3D Asset Bundle开发框架，并为程序、美术、策划、运营提供辅助工具集。**\n\n---------------------\n\n### Sponsor\n\n[![KSFramework](Docs/vikadata.png)](https://vika.cn)\n\n[维格表vika.cn](https://vika.cn)，支持API的数据表，完美实时协同，可用于丝滑般的项目管理、游戏策划配置表、数据整理等1000+场景。\n\n### ShowCase(商业案例)\n\nshowcase 列表：https://github.com/mr-kelly/KSFramework/wiki\n\n| [仙剑奇侠传4手游](http://www.9game.cn/xjqxcs/)    | [天域幻想](http://www.9game.cn/xjhmjh/)    | [巴清传](http://hh.sdo.com/w2/) | [少年剑影](http://www.9game.cn/shaonianjianying/)  | [撞击女神](http://u.360.cn/zjns_1) | [七七捕鱼](http://www.9game.cn/qiqibuyu/) |\n| ----------- | ----------- |----------- |----------- | ----------- | ----------- |\n| ![](https://raw.githubusercontent.com/wiki/mr-kelly/KSFramework/images/showcase/仙剑4-手游-icon.png) | ![](https://raw.githubusercontent.com/wiki/mr-kelly/KSFramework/images/showcase/天域幻想-icon.png) |  ![](https://raw.githubusercontent.com/wiki/mr-kelly/KSFramework/images/showcase/巴清传-icon.png) | ![](https://raw.githubusercontent.com/wiki/mr-kelly/KSFramework/images/showcase/少年剑影-icon.png) | ![](https://raw.githubusercontent.com/wiki/mr-kelly/KSFramework/images/showcase/撞击女神-icon.png) | ![](https://raw.githubusercontent.com/wiki/mr-kelly/KSFramework/images/showcase/七七捕鱼-icon.png) |\n| 命运抉择VR | [我的冒险屋](https://www.taptap.com/app/200744) | Moba游戏                                                     |                                                              |  |  |\n| ![](Docs/showcase/命运抉择.png) | ![](Docs/showcase/我的冒险屋.png) | 开发中 |  |  |  |\n\n### KSFramework\n\n**热重载**是KSFramework的开发重点——在不重启游戏的前提下，重载代码、配置表可立刻看到修改效果，最大限度的提升开发、调试的速度，方便运营阶段热更新。\n\n对于程序人员，可以使用AssetBundle加载与打包、脚本化的UI、配置表代码自动生成、下载更新等基础功能模块，大大减少游戏周边基础功能的工作量；\n\n对于策划人员，使用Excel进行编辑，可以在编辑过程中添加注释、图标、预编译指令，KSFramework会根据配置内容自动生成代码供程序使用。\n\n对于美术人员，只需将项目需要用到资源放到指定目录，将会自动的生成Asset Bundle；程序加载Asset Bundle跟Resources.Load一样方便。\n\n\n对于运营人员，利用KSFramework的热重载特性，可以针对运营需求，在项目运行过程中配置表、脚本代码在用户无知觉的情况下进行热更新。\n\n\n\n## Quick Start\n\n### 方式1，下载即用\n\n以下方法任选其一：\n\n- 方法一：把源码**git clone**到本地（推荐）：  https://github.com/mr-kelly/KSFramework.git\n\n- 方法二：在项目页面点击 **Clone or download**  选择 **Download ZIP** \n\n\n\n\n### 方式2，从产品包安装\n\n（这种方式获得的版本非最新版本），您可以从[KSFramework Release](https://github.com/mr-kelly/KSFramework/releases)页面下载最新版本的产品包。\n\n解压后直接用Unity打开KSFramework目录，或直接双击场景KSFramework/Assets/Game.unity。\n\n> 如遇到无法下载的网络问题, 备选下载站:\n>\n> - [KSFramework Appveyor Artifacts](https://ci.appveyor.com/project/mr-kelly/ksframework/branch/master/artifacts): 包含每次提交的构建结果\n> - [KSFramework OSChina镜像](http://git.oschina.net/mrkelly/KSFramework)): 国内的镜像Git\n\n\n\n### Unity3D版本支持\n\n| Unity3D版本 | 支持情况 | 备注                                         |\n| ----------- | -------- | -------------------------------------------- |\n| Unity 4.X   | 支持     | 请使用KEngine                                |\n| Unity 5.x   | 支持     | 部分版本的API有差异，建议使用5.3.7及以上版本 |\n| Unity 2017  | 支持     |                                              |\n| Unity 2018  | 支持     | 2018.2.7f1已测试                             |\n| Unity 2019  | 支持     | 2019.3.7f1已测试                             |\n| Unity2020   | 支持     | Unity 2020.1.2f1已测试                       |\n\n如果是Unity 4.x建议使用KEngine\n\n### 解决遇到的问题\n\n下载后，如果运行出错，或者使用其它版本的Unity打开无法运行，尝试以下方法：\n\n1. 重新生成Assetbundle，方法如下：点击菜单项 **KEngine** - **AssetBundle** - **Bulld All**\n\n2. 删除xLua、SLua、ILRuntime的生成代码，重新生成，不同Unity版本生成出来的代码有差异\n\n3. 如果前两步不能解决问题，请上传报错信息到[issues](https://github.com/mr-kelly/KSFramework/issues)。\n\n\n\nKSFramework常见问题解答篇：https://mr-kelly.github.io/KSFramework/faq/\n\n如果发现框架中存在的问题或有改进的地方，欢迎把你的修改[pull request](https://github.com/mr-kelly/KSFramework/pulls)到仓库中，或提[issues](https://github.com/mr-kelly/KSFramework/issues)。\n\n## 教程和文档\n\n- 常见问题解答：https://mr-kelly.github.io/KSFramework/faq/\n- [查看完整文档](https://mr-kelly.github.io/KSFramework/)\n- [功能特性](https://mr-kelly.github.io/KSFramework/overview/features/)\n- [策划指南：配置表的使用](https://mr-kelly.github.io/KSFramework/setting/guide/)\n- [**KSFramework: Unity3D开发辅助框架快速入门**](https://mr-kelly.github.io/KSFramework/quickstart/)\n- [KEngine策划指南: 配置表格的编辑与编译](https://mr-kelly.github.io/KSFramework/setting/guide/)\n- [KEngine: 资源的打包、加载、调试监控](https://mr-kelly.github.io/KSFramework/resource/guide/)\n- [KSFramework常见问题：Lua脚本热重载，内存状态数据会不会丢失？](https://mr-kelly.github.io/KSFramework/advanced/script-reload/)\n- [KSFramework常见问题：Excel如何进行SVN协作、差异比较？](https://mr-kelly.github.io/KSFramework/advanced/excel-diff/)\n\n\n\n## 结构组成\n\n![KSFramework由KEngine和SLua结合组成](Docs/Structure.png)\n\n\n\n## 涉及第三方库\n\n- [xLua is a lua programming solution for C# ( Unity, .Net, Mono) , it supports android, ios, windows, linux, osx, etc.](https://github.com/Tencent/xLua), master分支已为默认使用xLua\n- [SLua:基于Unity的Lua引擎，也可用于C#独立程序](https://github.com/pangweiwei/slua)  在slua分支\n- [ILRuntime项目为基于C#的平台（例如Unity）提供了一个纯C#实现，快速、方便且可靠的IL运行时，使得能够在不支持JIT的硬件环境（如iOS）能够实现代码的热更新](https://github.com/Ourpalm/ILRuntime) ,在ILRuntime分支\n- [KEngine:AssetBundle打包加载框架](https://github.com/mr-kelly/KEngine) (作者自己开发的)\n  - [ini-parser:Ini配置文件解析器，支持多文件合并](https://github.com/rickyah/ini-parser)\n  - [Premake:VS工程生成](https://github.com/premake/premake-core)\n- [TableML:表格标记语言，运行时与编译器](https://github.com/mr-kelly/TableML) (作者自己开发的)\n  - [NPOI:强大的Excel读写库](http://npoi.codeplex.com/)\n    - [ISharpZipLib:Zip格式读写库](https://github.com/icsharpcode/SharpZipLib)\n  - [DotLiquid:模板语言引擎](https://github.com/dotliquid/dotliquid)\n']
php-msf,PHP微服务框架即Micro Service Framework For PHP,1761,https://github.com/pinguo/php-msf,master,['<p align="center">\n<img src="./php-msf.png"/>\n</p>\n\n<p align="center">\n<img class="latest_stable_version_img" src="https://poser.pugx.org/pinguo/php-msf/version">\n<img class="total_img" src="https://poser.pugx.org/pinguo/php-msf/downloads">\n<img class="latest_unstable_version_img" src="https://poser.pugx.org/pinguo/php-msf/v/unstable">\n<img class="license_img" src="https://poser.pugx.org/pinguo/php-msf/license">\n<img class="composer_img" src="https://poser.pugx.org/pinguo/php-msf/composerlock">\n<p/>\n\n# Micro Service Framework For PHP\n\nPHP微服务框架即“Micro Service Framework For PHP”，是[Camera360](https://www.camera360.com)社区服务器端团队基于[Swoole](http://www.swoole.com)自主研发现代化的PHP协程服务框架，简称msf或者php-msf，是[Swoole](http://www.swoole.com)的工程级企业应用框架，经受了Camera360亿级用户高并发大流量的考验。php-msf由[Camera360](https://www.camera360.com)服务器团队主导研发，会持续更新与维护，也希望有更多优秀的[Swoole](http://www.swoole.com)应用实践开发者加入。php-msf核心设计思想是采用协程、异步、并行的创新技术手段提高系统的单机吞吐能力，降低整体服务器成本。\n\n## 主要特性\n\n* 精简版的MVC框架\n* IO密集性业务的单机处理能力提升5-10倍\n* 代码常驻内存\n* 支持对象池\n* 支持Redis连接池、MySQL连接池（异步与同步）\n* 内置Redis Proxy，支持分布式、master-slave集群（故障自动failover与recovery）\n* 内置MySQL Proxy，master-slave集群（读写分离、事务）\n* 支持异步、并行\n* 基于PHP Yield实现协程\n* 内建http/redis/mysql/mongodb/task等协程客户端\n* 纯异步的Http Server\n* RPC Server/Client\n* 支持命令行模式\n* 支持独立进程的定时器\n* 支持独立配置进程\n* 支持sendfile静态文件(需配置root目录)\n\n## 环境要求\n\n- Linux，FreeBSD，MacOS(有兼容问题)\n- Linux内核版本2.3.32以上(支持epoll)\n- PHP-7.0及以上版本（生产环境建议使用PHP-7.1）\n- gcc-4.4以上版本\n- [swoole-1.9.15](https://github.com/swoole/swoole-src/archive/v1.9.15.tar.gz)及以上版本（暂不支持Swoole-2.0）\n- [hiredis-0.13.3](https://github.com/redis/hiredis/archive/v0.13.3.tar.gz)\n- [yac](https://github.com/laruence/yac/archive/yac-2.0.2.tar.gz)\n- [phpredis](http://pecl.php.net/get/redis-3.1.2.tgz)\n- composer\n\n## 文档\n\n框架手册(Gitbook): [PHP-MSF开发手册](https://pinguo.gitbooks.io/php-msf-docs/)\n\nAPI Document(Rawgit): [类文档](https://cdn.rawgit.com/pinguo/php-msf-docs/4e0ed09d/api-document/index.html)\n\n示例DEMO项目: [PHP-MSF DEMO](https://github.com/pinguo/php-msf-demo)\n\n帮助完善文档: [https://github.com/pinguo/php-msf-docs](https://github.com/pinguo/php-msf-docs)，请提交PR。\n\n## 交流与反馈\n\nPHP-MSF#1群(QQ): 614054288\n\n## 快速起步\n\n```bash\n$>php -r "copy(\'https://raw.githubusercontent.com/pinguo/php-msf-docker/master/installer.php\', \'installer.php\');include(\'installer.php\');" && source ~/.bashrc\n```\n\n`installer.php`会检查运行环境，根据你的自定义配置，自动创建项目模板，composer安装依赖，启动服务。如果`cdn.rawgit.com`无法访问，可以直接克隆或者下载[php-msf-docker](https://github.com/pinguo/php-msf-docker)，提取`installer.php`，然后直接运行`php installer.php`\n\n如果一切顺利，运行到最后你将看到如下的输出：\n\n```bash\n[2017-09-06 16:08:34] Run composer install success\n[2017-09-06 16:08:34] Congratulations, all are installed successfully!\n[2017-09-06 16:08:34] You can, visit http://127.0.0.1:8990/Welcome for test\n      _______                               ____\n________  / /_  ____        ____ ___  _____/ __/\n___/ __ \\/ __ \\/ __ \\______/ __ `__ \\/ ___/ /_\n__/ /_/ / / / / /_/ /_____/ / / / / (__  ) __/\n_/ .___/_/ /_/ .___/     /_/ /_/ /_/____/_/\n/_/         /_/         Camera360 Open Source TM\n[2017-09-06 16:08:34] Swoole  Version: 1.9.18\n[2017-09-06 16:08:34] PHP     Version: 7.1.8\n[2017-09-06 16:08:34] Application ENV: docker\n[2017-09-06 16:08:34] Listen     Addr: 0.0.0.0\n[2017-09-06 16:08:34] Listen     Port: 8990\n```\n\n访问测试：\n\n```bash\n$>curl http://127.0.0.1:8990/Welcome\nhello world!\n```\n\n注意端口，如果你不是8990，你需要修改，然后访问测试。\n\n## 标准应用结构\n\n```\n├── app // PHP业务代码\n│\xa0\xa0 ├── AppServer.php // 应用server类，可根据需求自定义\n│\xa0\xa0 ├── Controllers // 控制器类目录\n│\xa0\xa0 ├── Lib // 特殊逻辑处理类目录\n│\xa0\xa0 ├── Models // Model类目录\n│\xa0\xa0 ├── Route // 特殊路由规则类目录\n│\xa0\xa0 ├── Tasks // Task类目录\n│\xa0\xa0 └── Views // 视图文件目录\n├── build.sh // 构建脚本（拉取docker镜像，启动容器）\n├── checkstyle.sh // 代码检查脚本\n├── composer.json // composer包依赖配置文件\n├── config // 配置目录\n├── server.php // server启动脚本\n├── console.php // 命令行脚本\n├── test // 单元测试目录\n```\n\n上述为基于php-msf的标准应用结构，一键安装程序installer.php会自动生成目录，用户可以根据需求创建一些自定义目录，只要符合psr4标准即可自动加载。\n\n## 服务启动\n\n调试模式\n\n```bash\n$>./server.php start\n```\n\nDaemon模式\n\n```bash\n$>./server.php start -d\n```\n\n\n停止服务\n\n```bash\n$>./server.php stop\n```\n\n重启服务\n\n```bash\n$>./server.php restart\n```\n\n## Docker\n\n我们制作了Docker镜像，方便Docker用户快速的安装环境，运行[PHP-MSF DEMO](https://github.com/pinguo/php-msf-demo)工程。另外期望在开发环境修改代码实时预览效果，建议使用Docker for [Mac](https://download.docker.com/mac/stable/Docker.dmg)/[Windows](https://download.docker.com/win/stable/InstallDocker.msi)桌面版。\n\n如果是升级Docker，它会自动迁移原有的镜像和容器，请耐心等待，千万不能中途kill掉Docker进程，否则再想迁移就难了。\n\nDocker Registry(阿里云):\n\n- 公网地址: `docker pull registry.cn-hangzhou.aliyuncs.com/pinguo-ops/php-msf-docker:latest`\n- 经典内网: `docker pull registry-internal.cn-hangzhou.aliyuncs.com/pinguo-ops/php-msf-docker:latest`\n- VPC网络: `docker pull registry-vpc.cn-hangzhou.aliyuncs.com/pinguo-ops/php-msf-docker:latest`\n- DockerHub(国外): `docker pull pinguoops/php-msf-docker`\n\n\n\n## 框架定位\n\n我们专注打造稳定高性能纯异步基于HTTP的微服务框架，作为nginx+php-fpm的替代技术栈实现架构的微服务化;而Tcp/WebSocket Server将作为插件的形势支持，或者作为其他独立的开源项目。\n\n对于小型团队或者业务系统我们建议还是采用传统的nginx+php-fpm技术栈，对于成本和性能来说没有瓶颈，也就完全没有必要引入全新的技术栈。\n\n对于大中型团队或者业务系统，处在服务治理或者服务化演进的重要阶段，php-msf是可选方案之一。\n\n对于庞大的PHP应用集群，想要大幅节约服务器成本，提升服务性能，php-msf是可选方案之一。\n\n对于聚合服务，比如大型的网站首页，想要通过服务器端聚合内容整合数据，php-msf是可选方案之一。\n\n## 手工安装\n\n推荐安装方式，通过编辑项目`composer.json`加入依赖`pinguo/php-msf`\n\n```json\n{\n    "require": {\n        "pinguo/php-msf": ">=3.0.0"\n    },\n    "minimum-stability": "dev"\n}\n```\n\n`"minimum-stability": "dev"`这个配置选项必须加上，因为日志组件依赖`"monolog/monolog": "2.0.x-dev"`，并且`monolog/monolog`无2.0的release包，不过我们在生产环境已经验证其稳定性。\n\n## 项目原则\n\n### 稳定\n\nphp-msf经受了[Camera360](https://www.camera360.com)社区服务大流量、高并发的洗礼，稳定性得到充分验证。稳定性是我们花了大量时间、精力去解决的最重要问题，是三大原则的最重要原则。\n\n### 高性能\n\nIO密集性业务的单机处理能力提升5-10倍，这是生产环境中得出的真实数据，如Camera360社区某聚合服务在流量高峰需要40台服务器抗住流量，而采用php-msf重构之后只需要4台相同配置的服务器就可以抗住所有流量。\n\n### 简单\n\n由于Swoole复杂的进程模型，并且有同步阻塞和异步非阻塞之分，所以在运行相同代码逻辑时，可能在调用方式、传递参数都不一致，从而直线拉高了学习成本，我们为了屏蔽低层的差异，做了大量的工作，实现和传统MVC框架的唯一区别在于添加“yield”关键字。我们参考了Yii2框架的部分代码实践，我们期望无缝的从Yii2开发切换过来。\n\n上述三大原则，是我们在新增特性、功能实现时，投票或者合并代码的依据，任何影响这些原则的PR也将会被拒绝。\n\n## 关于协程\n\n目前社区有几个PHP开源项目支持协程，它们大多采用Generator+Yield来实现，但是实现的细微差别会导致性能相差甚远，我们应该认识到协程能够以同步的代码书写方式而运行异步逻辑，故协程调度器的性能一定要足够的高，php-msf的协程调度性能是原生异步回调方式的80%，也就是说某个API采用原生异步回调写法QPS为10000，通过php-msf协程调度器调度QPS为8000。\n\n## 为什么是微服务框架？\n\n目前php-msf还在起步阶段，我们花了大量的时间和精力解决稳定性、高性能、内存问题，因为我们认为“基石”是“万丈高楼”的最基本的保障，只有基础打得牢，才能将“大楼”建设得“更高”。3.0版本是我们开源的起始版本，是我们迈出的重要一步，接下来我们重点会是分布式微服务框架的打磨。\n\n另外，由于基于PHP常驻进程，并直接解析HTTP或者TCP请求，这是服务化最重要的支撑，基于此我们可以做很多原来不敢去实现的想法，总之想像空间很大。\n\n## 感谢\n\nphp-msf最开始基于[SwooleDistributed-1.7.x](https://github.com/tmtbe/SwooleDistributed/)开发，而此次开源版本中，连接池主要采用了SD的实现。由于我们框架定位、解决的业务场景、稳定性的要求、代码风格等差异太大，因此我们决定自主研发微服务框架，每个框架都有自己的特色和优点，选择合适自己公司和业务场景的框架最重要，同时在此也感谢[白猫](https://github.com/tmtbe)；另外，在研发php-msf框架及生产环境应用过程中，遇到很多底层问题，不过都一一解决，而这些问题能够解决最重要就是[Swoole](http://www.swoole.com)开源项目创始人[韩天峰-Rango](https://github.com/matyhtf)的大力支持，在此深表感谢。\n\n## License\n\nGNU General Public License, version 2 see [https://www.gnu.org/licenses/gpl-2.0.html](https://www.gnu.org/licenses/gpl-2.0.html)\n']
QMUI_Web,An efficient front-end framework for developers building UI on the web.,1724,https://github.com/Tencent/QMUI_Web,master,['<p align="center">\n  <img src="https://raw.githubusercontent.com/QMUI/QMUIDemo_Web/master/public/style/images/independent/BannerForGithub_2x.png" width="220" alt="Banner" />\n</p>\n\n# QMUI Web [![Version Number](https://img.shields.io/npm/v/generator-qmui.svg?style=flat)](https://github.com/Tencent/QMUI_Web/ "Version Number")\n> 一个旨在提高 UI 开发效率、快速产生项目 UI 的前端框架\n>\n> 官网：[http://qmuiteam.com/web](http://qmuiteam.com/web)\n>\n> 下载 Demo：[https://github.com/QMUI/QMUIDemo_Web/releases](https://github.com/QMUI/QMUIDemo_Web/releases)\n\n[[English]](https://github.com/Tencent/QMUI_Web/tree/master/docs-translations/en-US/README.md) / [[简体中文]](https://github.com/Tencent/QMUI_Web/blob/master/README.md) / [[繁體中文]](//github.com/Tencent/QMUI_Web/tree/master/docs-translations/zh-TW/README.md)\n\n[![Build Status](https://travis-ci.org/Tencent/QMUI_Web.svg?branch=master)](https://travis-ci.org/Tencent/QMUI_Web "Build Status")\n[![Build status](https://ci.appveyor.com/api/projects/status/1h6de3rq6x45nnse?svg=true\n)](https://ci.appveyor.com/project/kayo5994/qmui-web)\n[![QMUI Team Name](https://img.shields.io/badge/Team-QMUI-brightgreen.svg?style=flat)](https://github.com/QMUI "QMUI Team")\n[![License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat)](http://opensource.org/licenses/MIT "Feel free to contribute.")\n\nQMUI Web 是一个专注 Web UI 开发，帮助开发者快速实现特定的一整套设计的框架。框架主要由一个强大的 SASS 方法合集与内置的工作流构成。通过 QMUI Web，开发者可以很轻松地提高 Web UI 开发的效率，同时保持了项目的高可维护性与稳健。如果你需要方便地控制项目的整体样式，或者需要应对频繁的界面变动，那么 QMUI Web 框架将会是你最好的解决方案。\n\n## 功能特性\n\n### 基础配置与组件\n通过内置的公共组件和对应的 SASS 配置表，你只需修改简单的配置即可快速实现所需样式的组件。（[QMUI SASS 配置表和公共组件如何帮忙开发者快速搭建项目基础 UI？](https://github.com/Tencent/QMUI_Web/wiki/Q&A#qmui-sass-%E9%85%8D%E7%BD%AE%E8%A1%A8%E5%92%8C%E5%85%AC%E5%85%B1%E7%BB%84%E4%BB%B6%E5%A6%82%E4%BD%95%E5%B8%AE%E5%BF%99%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%9F%BA%E7%A1%80-ui)）\n\n### SASS 增强支持\nQMUI Web 包含70个 SASS mixin/function/extend，涉及布局、外观、动画、设备适配、数值计算以及 SASS 原生能力增强等多个方面，可以大幅提升开发效率。\n\n### 完善的内置工作流\nQMUI Web 内置的工作流拥有从初始化项目到变更文件的各种自动化处理，包含了模板引擎，雪碧图处理，图片集中管理与自动压缩，静态资源合并、压缩与变更以及冗余文件清理等功能。\n\n### 扩展组件\nQMUI Web 除了内置的公共组件外，还通过扩展的方式提供了常用的扩展组件，如等高左右双栏，文件上传按钮，树状选择菜单。\n\n## 环境配置\n请确保安装 [Node.js](https://nodejs.org/)（建议 14.0 或以上版本），并用以下命令全局安装 gulp：\n\n```bash\n#安装 gulp\nnpm install --global gulp\n```\n\n## 快速开始\n推荐使用 [Yeoman](http://yeoman.io/) 脚手架 [generator-qmui](https://github.com/QMUI/generator-qmui) 安装和配置 QMUI Web。该工具可以帮助你完成 QMUI Web 的所有安装和配置。\n\n```bash\n#安装 Yeoman，如果本地已安装可以忽略\nnpm install -g yo\n#安装 QMUI 的模板\nnpm install -g generator-qmui\n#在项目根目录执行以下命令\nyo qmui\n```\n<img src="https://raw.githubusercontent.com/QMUI/QMUIDemo_Web/master/public/style/images/independent/Generator.gif" width="842" alt="效果预览" />\n\n### 完成后生成的项目目录结构\n```bash\n项目根目录\n├─public          // 静态资源目录，由 gulp 生成\n│  ├─js           // 静态资源 js 文件\n│  └─style        // 静态资源 UI 文件\n│     ├─css       // 静态资源 css 文件\n│     └─images    // 静态资源 images 文件\n├─UI_dev          // 实际进行开发的样式目录\n│  ├─project      // 项目相关 SASS 与 images 文件，由 gulp 生成\n│  │  ├─images    // 项目相关图片文件\n│  │  ├─logic     // 项目相关逻辑样式\n│  │  └─widget    // 项目相关公共组件样式\n│  └─qmui_web     // QMUI Web 主源码应放置在这一层目录\n├─UI_html         // 静态模板目录\n└─UI_html_result  // 静态模板 gulp 处理后的版本，用于前端拼接最终的模板\n```\n\n对于需要有更强定制性的开发者，请参考[创建新项目（高级）](http://qmuiteam.com/web/page/start.html#qui_createProject)\n\n## 工作流任务列表\n\n```bash\n#在 UI_dev/qmui_web 中执行以下命令可以查看工作流的任务列表及说明\ngulp list\n```\n\n也可以查看文档中的[详细说明](http://qmuiteam.com/web/page/scaffold.html)。\n\n## 完善框架\n如果有意见反馈或者功能建议，欢迎创建 [Issue](https://github.com/Tencent/QMUI_Web/issues) 或发送 [Pull Request](https://github.com/Tencent/QMUI_Web/pulls)，调试与修改框架请先阅读[文档](http://qmuiteam.com/web/page/start.html#qui_frameworkImprove)，感谢你的支持和贡献。\n\n设计稿 Sketch 源文件可在 [Dribbble](https://dribbble.com/shots/2895907-QMUI-Logo) 上获取。\n\n## QMUI Web Desktop\n\n推荐配合使用的桌面 App：[QMUI Web Desktop](https://github.com/Tencent/QMUI_Web_desktop)。它可以管理基于 QMUI Web 进行开发的项目，通过 GUI 界面处理 QMUI Web 的服务开启/关闭，使框架的使用变得更加便捷，并提供了编译提醒，出错提醒，进程关闭提醒等额外的功能。\n\n<img src="https://raw.githubusercontent.com/QMUI/QMUIDemo_Web/master/public/style/images/independent/App_2x.png" width="440" alt="QMUI Web Desktop" />\n']
POC-T,渗透测试插件化并发框架 / Open-sourced remote vulnerability PoC/EXP framework,1854,https://github.com/Xyntax/POC-T,2.0,['# POC-T: *Pentest Over Concurrent Toolkit* \n[![Python 2.7](https://img.shields.io/badge/python-2.7-yellow.svg)](https://www.python.org/) [![License](https://img.shields.io/badge/license-GPLv2-red.svg)](https://raw.githubusercontent.com/Xyntax/POC-T/master/doc/LICENSE.txt) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/1413552d34bc4a4aa84539db1780eb56)](https://www.codacy.com/app/xyntax/POC-T?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Xyntax/POC-T&amp;utm_campaign=Badge_Grade) [![PoC/Scripts](https://img.shields.io/badge/PoC/Scripts-52-blue.svg)](https://github.com/Xyntax/POC-T/wiki/%E5%86%85%E7%BD%AE%E8%84%9A%E6%9C%AC%E5%BA%93) \n\n脚本调用框架，用于渗透测试中 **采集|爬虫|爆破|批量PoC** 等需要并发的任务。  \n\n![banner.png](https://github.com/Xyntax/POC-T/blob/2.0/doc/banner.png) \n\n脚本收录 \n------------------------------------------------------------------\n欢迎提交PoC及实用脚本(提PR或邮件联系i@cdxy.me)，您贡献的PoC相关信息将会在以下位置公开。\n* [脚本库](https://github.com/Xyntax/POC-T/wiki/%E5%86%85%E7%BD%AE%E8%84%9A%E6%9C%AC%E5%BA%93)\n* [致谢](https://github.com/Xyntax/POC-T/wiki/%E8%87%B4%E8%B0%A2)\n\n\n特点\n---\n* 支持多线程/Gevent两种并发模式  \n* 极简式脚本编写，无需参考文档  \n* 内置脚本扩展及常用PoC函数  \n* 支持第三方搜索引擎API(已完成ZoomEye/Shodan/Google/Fofa免费版)  \n\n\n依赖\n---\n* Python 2.7\n* pip\n\n用户手册\n----\n\n* [快速开始](https://github.com/Xyntax/POC-T/wiki/02-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B)\n* [编写脚本](https://github.com/Xyntax/POC-T/wiki/03-%E7%BC%96%E5%86%99%E8%84%9A%E6%9C%AC)\n* [脚本扩展工具](https://github.com/Xyntax/POC-T/wiki/04-%E8%84%9A%E6%9C%AC%E6%89%A9%E5%B1%95%E5%B7%A5%E5%85%B7)\n* [第三方搜索引擎](https://github.com/Xyntax/POC-T/wiki/05-%E7%AC%AC%E4%B8%89%E6%96%B9%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E)\n* [需求与设计](https://github.com/Xyntax/POC-T/wiki/01-%E9%9C%80%E6%B1%82%E4%B8%8E%E8%AE%BE%E8%AE%A1)\n\n其他\n---\n* [问题反馈](https://github.com/Xyntax/POC-T/issues/new)\n* [版权声明](https://github.com/Xyntax/POC-T/wiki/%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E)\n\n联系作者\n----\n* mail:i@cdxy.me  \n\n  \n']
Android-ReadTheFuckingSourceCode,😜 记录日常的开发技巧，开发中遇到的技术重点、难点，各个知识点的总结，优质面试题等等。持续更新...,1900,https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode,master,['# Android 技术笔记\n\n> 图片看不到的小伙伴，请打开科学上网\n\n这里主要记录日常的开发技巧，开发中遇到的技术重点、难点，各个知识点的总结。同时也会分享一些优质面试题，职业规划，读书心得，个人感悟等等。😋\n\n 🌝🌔🌓🌒🌚🌚🌘🌗🌖🌝\n\n如果能帮助到你，我很开心。希望你能点击一下右上角的小星星「⭐️ Star」 一下，然后 [点击这里](https://github.com/jeanboydev) 找到头像下面按钮 Follow 一下我。你的 Star 和 Follow 是我分享的动力，十分感谢！😘\n\n如果你有什么疑问或者问题，可以 [点击这里](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/issues) 提交 issue，也可以发邮件给我 [jeanboy@foxmail.com](mailto:jeanboy@foxmail.com)。\n\n> 由于个人经验有限，内容上难免会有不足甚至错误的地方，恳请大家发现后提交 issue 或其它方式反馈给我，以免误导大家，万分感谢！🙏\n\n# 目录\n\n## 图解 Android 系列\n\n- :+1:[图解 Android 系列（一）揭秘 Android 系统启动过程](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/01_system_start.md)\n- :+1:[图解 Android 系列（二）深入理解 init 与 zygote 进程](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/02_init_zygote.md)\n- :+1:[图解 Android 系列（三）探索 SystemServer 进程创建过程](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/03_system_server_01.md)\n- :+1:[图解 Android 系列（四）原来 SystemServer 启动时干了这么多](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/04_system_server_02.md)\n\n## 性能优化系列\n\n- :+1:[性能优化系列（一）渲染性能优化](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/performance/01_render.md)\n- :+1:[性能优化系列（二）计算性能优化](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/performance/02_compute.md)\n- :+1:[性能优化系列（三）内存性能优化](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/performance/03_memory.md)\n- :+1:[性能优化系列（四）电量性能优化](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/performance/04_battery.md)\n- :+1:[性能优化系列（五）网络性能优化](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/performance/05_network.md)\n- :+1:[性能优化系列（六）启动性能优化](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/performance/06_launch.md)\n- :+1:[性能优化系列（七）APK 体积优化](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/performance/07_apk.md)\n\n## 深入理解 Java 虚拟机\n\n- [JVM 内存分配机制](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/java/jvm/JVM-内存分配机制.md)\n- [JVM 垃圾回收机制](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/java/jvm/JVM-垃圾回收机制.md)\n- :+1:[图解 Java 虚拟机系列（一）字节码文件结构](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/java/jvm/01_bytecode_class.md)\n- [图解 Java 虚拟机系列（二）字节码指令](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/java/jvm/02_bytecode_command.md)\n\n## 热修复与插件化系列\n\n- [聊聊反射](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/plugin/01_reflection.md)\n- [不得不学之代理模式](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/plugin/02_proxy.md)\n- [Hook 初探](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/plugin/03_hook.md)\n- [Hook 实战之 Hook AMS](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/plugin/04_hook_ams.md)\n\n## Android 基础知识\n\n- [四大组件之 Activity](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/01_activity.md)\n- [Fragment 相关知识点](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/02_fragment.md)\n- [如何正确的使用 Service？](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/03_service.md)\n- [分享一些 Broadcast 使用技巧](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/04_broadcast.md)\n- [很少有人知道的 ContentProvider 使用技巧](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/05_content_provider.md)\n- [屏幕适配最佳实践](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/06_multiple_screen_support.md)\n- :+1:[最通俗易懂的 Handler 源码解析](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/07_handler.md)\n- :+1:[Activity 的 Task 亲和关系](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/08_task_affinity.md)\n- :+1:[Android 签名机制 v1、v2、v3](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/09_signature.md)\n- [一个 Demo 学会搭建 Android Studio JNI 开发环境](https://github.com/jeanboydev/Android-JNITest)\n- [一篇文章学会使用 Android IPC 多进程](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/Android-IPC多进程.md)\n- [Windows 环境下载 Android 源码](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-Windows环境下载源码.md)\n- [Android 反编译指南](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/Android-反编译指南.md)\n- [Android 多渠道打包最佳实践](https://github.com/jeanboydev/Android-Flavors)\n- [Android Studio 3.x 升级指南](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/Android-Android_Studio3升级指南.md)\n- :+1: [一篇文章了解相见恨晚的 Android Binder 进程间通讯](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-Binder进程间通讯.md)\n- [一篇文章看明白 Android 系统启动时都干了什么](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-系统启动过程.md)\n- [一篇文章看明白 Android 从点击应用图标到界面显示的过程](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-Activity启动过程.md)\n- [一篇文章看明白 Activity 与 Window 与 View 之间的关系](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-Activity与Window与View之间的关系.md)\n- [一篇文章看明白 Android 图形系统 Surface 与 SurfaceFlinger 之间的关系](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-SurfaceFlinger图形系统.md)\n-  [一篇文章看明白 Android Service 启动过程](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-Service启动过程.md)\n- [一篇文章看明白 Android PackageManagerService 工作流程](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-PackageManagerService分析.md)\n- [一篇文章看明白 Android PowerManagerService 启动过程](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-PowerManagerService-%E5%90%AF%E5%8A%A8.md)\n- [一篇文章看明白 Android PowerManagerService WakeLock 机制](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-PowerManagerService-WakeLock.md)\n- [一篇文章看明白 Android PowerManagerService 亮屏过程](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-PowerManagerService-%E4%BA%AE%E5%B1%8F.md)\n- [一篇文章看明白 Android PowerManagerService 灭屏过程](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/framework/Android-PowerManagerService-%E7%81%AD%E5%B1%8F.md)\n- [Android 项目架构探索](https://github.com/jeanboydev/Android-Architecture)\n- [Android 性能优化 - UI优化](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/Android-性能优化-UI优化.md)\n- [Android 性能优化 - 内存优化](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/android/basic/Android-性能优化-内存优化.md)\n\n## Android 进阶攻略\n\n- [精华面试题，长期更新！](https://github.com/android-exchange/Android-Interview)\n- [Android 入门学习指南](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/interview/01_android_basic.md)\n- [Android 高级学习指南](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/interview/02_android_advanced.md)\n- [Android 资深（专家）学习指南](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/interview/03_android_senior.md)\n\n\n## Gradle\n\n- [Gradle 简介](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/gradle/Gradle-简介.md)\n- [Groovy Language](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/gradle/Gradle-Groovy.md)\n- [Gradle DSL](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/gradle/Gradle-Gradle_DSL.md)\n- [Android Plugin DSL](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/gradle/Gradle-Android_Plugin_DSL.md)\n- [插件开发](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/gradle/Gradle-插件开发.md)\n- [插件发布](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/gradle/Gradle-插件发布.md)\n\n## 网络通信\n\n- [一篇文章看明白 TCP/IP，TCP，UDP，IP，Socket 之间的关系](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/network/TCP_IP_UDP_Socket.md)\n- [一篇文章看明白 HTTP，HTTPS，SSL/TSL 之间的关系](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/network/HTTP_HTTPS_SSL_TSL.md)\n\n## 数据结构与算法\n\n### 线性表\n\n- [LinkedList 源码分析](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/java/basic/03_linkedlist.md)\n- [ArrayList 源码分析](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/java/basic/02_arraylist.md)\n\n### 栈和队列\n\n### 树\n\n- [HashMap 源码分析](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/java/basic/01_hashmap.md)\n- [Treemap 源码分析（上）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/java/basic/04_treemap_01.md)\n- [Treemap 源码分析（下）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/java/basic/05_treemap_02.md)\n\n### 图\n\n### 查找\n\n### 排序\n\n- [快速排序](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/data_structure_algorithm/01_quick_sort.md)\n- [冒泡排序](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/data_structure_algorithm/02_bubble_sort.md)\n\n## 前端\n\n- [前端发展简史](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/web_front/WebFront-发展简史.md)\n- [浏览器渲染机制](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/web_front/WebFront-浏览器渲染机制.md)\n- [JavaScript 运行原理 & V8 引擎分析](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/web_front/WebFront-JavaScript运行原理_V8引擎分析.md)\n- [响应式布局](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/web_front/WebFront-响应式布局.md)\n- [小程序原理解析](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/web_front/WebFront-小程序.md)\n- [小程序 vs App vs H5](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/web_front/WebFront-小程序_App_H5.md)\n- [Webpack 入门](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/web_front/WebFront-Webpack入门.md)\n- [Vue 入门](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/web_front/WebFront-Vue入门.md)\n- [Vue 加入 Bootstrap 和 jQuery](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/web_front/WebFront-Vue&BootStrap&jQuery.md)\n- [微信小程序 vs 支付宝小程序，开发终极实践](https://github.com/jeanboydev/WebApp-Arch)\n\n## Git\n\n- [Git 常用命令](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/git/Git常用命令.md)\n\n## Redis\n\n- [Redis 使用手册](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/java/basic/Redis.md)\n\n\n## 设计模式\n\n- [面向对象设计原则](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/面向对象设计原则.md)\n\n| 创建型模式                                                   | 结构型模式                                                   | 行为型模式                                                   |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| [Singleton（单例）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Singleton.md) | [Adapter（适配器）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Adapter.md) | [Chain of Responsibility（责任链）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Chain_of_Responsibility.md) |\n| [Factory（工厂）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Factory.md) | [Bridge（桥接）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Bridge.md) | [Command（命令）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Command.md) |\n| [Abstract Factory（抽象工厂）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Abstract_Factory.md) | [Composite（组合）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Composite.md) | [Interpreter（解释器）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Interpreter.md) |\n| [Builder（建造者）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Builder.md) | [Decorator（装饰）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Decorator.md) | [Iterator（迭代器）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Iterator.md) |\n| [Prototype（原型）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Prototype.md) | [Facade（外观）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Facade.md) | [Mediator（中介者）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Mediator.md) |\n|                                                              | [Flyweight（享元）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Flyweight.md) | [Memento（备忘录）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Memento.md) |\n|                                                              | [Proxy（代理）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Proxy.md) | [Observer（观察者）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Observer.md) |\n|                                                              |                                                              | [State（状态）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-State.md) |\n|                                                              |                                                              | [Strategy（策略）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Strategy.md) |\n|                                                              |                                                              | [Template Method（模板方法）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Template_Method.md) |\n|                                                              |                                                              | [Visitor（访问者）](https://github.com/jeanboydev/Android-ReadTheFuckingSourceCode/blob/master/article/design_patterns/设计模式-Visitor.md) |\n\n\n## 我的公众号\n\n欢迎关注我的公众号，分享各种技术干货，各种学习资料，职业发展和行业动态。\n\n<img src="https://raw.githubusercontent.com/jeanboydev/Android-ReadTheFuckingSourceCode/master/resources/images/about_me/qrcode_android_besos_banner.png" alt="Android 波斯湾" width="450" height="250" style="max-width:100%;">\n\n## 技术交流群\n\n同时欢迎加入技术交流群，来一起交流学习。\n\n<img src="https://raw.githubusercontent.com/jeanboydev/Android-ReadTheFuckingSourceCode/master/resources/images/about_me/qq群_横版.jpg" alt="QQ 技术交流群" width="450" height="129" style="max-width:100%;">\n\n<img src="https://raw.githubusercontent.com/jeanboydev/Android-ReadTheFuckingSourceCode/master/resources/images/about_me/微信群_横版.jpg" alt="微信技术交流群" width="450" height="129" style="max-width:100%;">\n']
MLN,高性能、小巧、易上手的移动跨平台开发框架. A framework for building Mobile cross-platform apps with Lua,1567,https://github.com/momotech/MLN,master,['简体中文 | [English](./README.en-US.md)\n# MLN\nMLN是一个移动跨平台开发框架，让开发者用一套代码构建Android、iOS应用。MLN设计思路贴近原生开发，客户端开发者的经验，可以迅速迁移到MLN上，轻易构建出跨平台移动应用。\n\n* 专为客户端开发者设计。\n\n* 增加包体积极小，1.2M。\n\n* 真正的原生性能。跨平台往往意味着性能受损，得益于lua虚拟机的高性能和MLN优化，我们极大减少了中间介质影响，即使在低端安卓手机加载页面也极快。\n\n* 支持热更新。  \n\n## 开发环境搭建\n  * IntelliJ IDEA：MLN推荐使用IDEA进行开发，IDEA安装插件后可以使用热重载方式进行页面预览\n  [配置指南](https://github.com/momotech/MLN/wiki/MLN开发环境搭建)  \n  * Android Studio(推荐使用3.5版本)：[下载地址](https://developer.android.com/studio/?gclid=EAIaIQobChMIoceaiI-q5gIVwWkqCh3nmAMREAAYASAAEgLoYfD_BwE)    \n  * Xcode：可在App Store中搜索下载  \n\n## Demo运行\n通过Demo了解MLN，前往[Demo运行](https://github.com/momotech/MLN/wiki/Demo运行)\n\n## SDK接入\n* [Android](https://github.com/momotech/MLN/wiki/sdk接入#Android接入)\n* [iOS](https://github.com/momotech/MLN/wiki/sdk接入#iOS接入)\n\n## 新增Bridge \n* [Android](https://github.com/momotech/MLN/wiki/新增Bridge#Android原生Bridge编写)\n* [iOS](https://github.com/momotech/MLN/wiki/新增Bridge#iOS原生Bridge编写)\n\n## 开发体验\nMLN支持热重载开发方式，修改代码，立即生效，免去编译等待阶段\n![热重载.gif](https://s.momocdn.com/w/u/others/custom/LuaNative/readme3.gif)\n\n## MLN在陌陌内部的应用\n陌陌首页、直播帧、更多帧部分内容、附近群组、狼人圈等一系列功能都是用MLN开发的。MLN的稳定性和性能在一年多的时间里，经受住了陌陌过亿量级MAU的考验。\n![](https://s.momocdn.com/w/u/others/2019/12/23/1577096701198-mln.png)\n## 如何交流\n\n我们正在把陌陌内部MLN社区迁移到github，不管是公司内部还是外部提出的issue，开发组都会做到高效支持。\n工作时间内（陌陌早十晚七，没有996）收到有效issue：\n+ 4小时内给出响应\n+ 能够重现的问题，一工作日内给出解决时间点\n\nProjects里有[MLN项目近期开发计划](https://github.com/momotech/MLN/projects/1)，如果你有更好的想法\n请在issue里提建议，我们一起讨论下一步该做什么。\n\n## 如何贡献代码\n\n沟通邮箱：zhang.yupeng@immomo.com\n\n']
Han,「漢字標準格式」印刷品般的漢字排版框架 Han.css: the CSS typography framework optimised for Hanzi.,2341,https://github.com/ethantw/Han,master,['\n- <b>中文</b>\n- [日本語](https://github.com/ethantw/Han/blob/master/README-ja.md)\n- [English](https://github.com/ethantw/Han/blob/master/README-en.md)\n\n\n漢字標準格式\n==========\n\n「漢字標準格式」是一個集「語意樣式標準化」「文字設計」「高階排版功能」三大概念的Sass/Stylus、JavaScript排版框架。其專為漢字網頁提供的美觀而標準化的環境，不僅符合傳統閱讀習慣、更為螢幕閱讀提供了既成標準，得以完整解決現今漢字網頁設計的排版需求。\n\n「漢字標準格式」完整支援繁體中文、簡體中文及日文等三個採用漢字的語言文字。\n\n[檢視範例測試頁](http://ethantw.github.io/Han/latest/)\n\n## 安裝\n- NPM `npm install --save han-css`\n- Bower `bower install --save Han`\n- Rails `gem install \'hanzi-rails\'`（[詳細說明](https://github.com/billy3321/hanzi-rails)）\n\n### 定製\n「漢字標準格式」提供多項定製功能，可經由變數設定、模組引用等方式定製專屬的樣式表。詳情請見[使用手冊][api]。\n\n[api]: http://css.hanzi.co/manual/sass-api\n\n### 使用CDN文件\n若毋須特別定製，你也可以直接使用以預設値編譯的CDN外連樣式表、腳本及網頁字體，以求高速下載及快取。[此服務由cdnjs.com提供][cdnjs]。\n\n[cdnjs]: http://cdnjs.com/libraries/han\n\n````html\n<link rel="stylesheet" media="all" href="//cdnjs.cloudflare.com/ajax/libs/Han/3.3.0/han.min.css">\n````\n\n腳本，\n\n````html\n<script src="//cdnjs.cloudflare.com/ajax/libs/Han/3.3.0/han.min.js"></script>\n````\n\nWeb字體，\n\n- WOFF `//cdnjs.cloudflare.com/ajax/libs/Han/3.3.0/font/han.woff`\n- OTF `//cdnjs.cloudflare.com/ajax/libs/Han/3.3.0/font/han.otf`\n\n## 使用方式\n\n1. 在網頁所有樣式表*前*引用經編譯的`han.min.css`（或使用Sass/Stylus匯入）。\n2. 依需求選用腳本`han.min.js`，並在`<html>`元素標籤上加入類別`han-init`以啓用DOM-ready渲染。\n3. 或依需求定製渲染方式，詳見[使用手冊][rendering]。\n\n[rendering]: http://css.hanzi.co/manual/js-api#rendering\n\n### 可選用的腳本\n「漢字標準格式」具低耦合、高度語意化等特性，樣式表與腳本各司其職、相互依賴性極低，並有多級樣式回退（fallback），故可依需求選用腳本。\n\n## 常見問題\n\n- [樣式的覆蓋](http://css.hanzi.co/manual/faq#yangshi_de_fugai)\n- [`han.js`腳本的運行環境](http://css.hanzi.co/manual/faq#han-js_de_yunxing_huanjing)\n\n## 瀏覽器支援\n\n- Chrome（最新版）\n- Edge（最新版）\n- Firefox（最新版）\n- Firefox ESR+\n- Internet Explorer 11\n- Opera（最新版）\n- Safari 9\n\n## 開發需求與指令\n\n- Node.js\n- LiveScript 1.4.0（`sudo npm install -g livescript`）\n\n下列清單展示了部分常用的開發指令，\n\n- 安裝需要的開發模組：`sudo npm install`\n- 啓動開發環境：`npm start`或`gulp dev`（包含本機運行及自動編譯）\n- 編譯發布文件：`gulp build`\n- 測試`han.js`API：`gulp test`（PhantomJS）\n- 更新依賴模組：`sudo npm update && gulp dep`\n\n* * *\n「漢字標準格式」版本：v3.3.0  \n本頁最後修改於：2016-3-19 00:11（UTC+8）\n\n']
FastDeploy,⚡️An Easy-to-use and Fast Deep Learning Model Deployment Toolkit for ☁️Cloud 📱Mobile and 📹Edge. Including Image, Video, Text and Audio 20+ main stream scenarios and 150+ SOTA models with end-to-end optimization, multi-platform and multi-framework support.,1688,https://github.com/PaddlePaddle/FastDeploy,develop,['README_EN.md\n']
feapder,🚀🚀🚀feapder is an easy to use, powerful crawler framework | feapder是一款上手简单，功能强大的Python爬虫框架。内置AirSpider、Spider、TaskSpider、BatchSpider四种爬虫解决不同场景的需求。且支持断点续爬、监控报警、浏览器渲染、海量数据去重等功能。更有功能强大的爬虫管理系统feaplat为其提供方便的部署及调度,1604,https://github.com/Boris-code/feapder,master,['# FEAPDER\n\n![](https://img.shields.io/badge/python-3.6-brightgreen)\n![](https://img.shields.io/github/watchers/Boris-code/feapder?style=social)\n![](https://img.shields.io/github/stars/Boris-code/feapder?style=social)\n![](https://img.shields.io/github/forks/Boris-code/feapder?style=social)\n[![Downloads](https://pepy.tech/badge/feapder)](https://pepy.tech/project/feapder)\n[![Downloads](https://pepy.tech/badge/feapder/month)](https://pepy.tech/project/feapder)\n[![Downloads](https://pepy.tech/badge/feapder/week)](https://pepy.tech/project/feapder)\n\n## 简介\n\n1. feapder是一款上手简单，功能强大的Python爬虫框架，内置AirSpider、Spider、TaskSpider、BatchSpider四种爬虫解决不同场景的需求。\n2. 支持断点续爬、监控报警、浏览器渲染、海量数据去重等功能。\n3. 更有功能强大的爬虫管理系统feaplat为其提供方便的部署及调度\n\n读音: `[ˈfiːpdə]`\n\n![Feapder](https://tva1.sinaimg.cn/large/008vxvgGly1h8byrr75xnj30u02f7k0j.jpg)\n\n## 文档地址\n\n- 官方文档：https://feapder.com\n- github：https://github.com/Boris-code/feapder\n- 更新日志：https://github.com/Boris-code/feapder/releases\n- 爬虫管理系统：http://feapder.com/#/feapder_platform/feaplat\n\n\n## 环境要求：\n\n- Python 3.6.0+\n- Works on Linux, Windows, macOS\n\n## 安装\n\nFrom PyPi:\n\n通用版\n\n```shell\npip3 install feapder\n```\n\n完整版：\n\n```shell\npip3 install feapder[all]\n```\n\n通用版与完整版区别：\n\n1. 完整版支持基于内存去重\n\n完整版可能会安装出错，若安装出错，请参考[安装问题](question/安装问题)\n\n## 小试一下\n\n创建爬虫\n\n```shell\nfeapder create -s first_spider\n```\n\n创建后的爬虫代码如下：\n\n```python\nimport feapder\n\n\nclass FirstSpider(feapder.AirSpider):\n    def start_requests(self):\n        yield feapder.Request("https://www.baidu.com")\n\n    def parse(self, request, response):\n        print(response)\n\n\nif __name__ == "__main__":\n    FirstSpider().start()\n        \n```\n\n直接运行，打印如下：\n\n```shell\nThread-2|2021-02-09 14:55:11,373|request.py|get_response|line:283|DEBUG|\n                -------------- FirstSpider.parse request for ----------------\n                url  = https://www.baidu.com\n                method = GET\n                body = {\'timeout\': 22, \'stream\': True, \'verify\': False, \'headers\': {\'User-Agent\': \'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36\'}}\n\n<Response [200]>\nThread-2|2021-02-09 14:55:11,610|parser_control.py|run|line:415|DEBUG| parser 等待任务...\nFirstSpider|2021-02-09 14:55:14,620|air_spider.py|run|line:80|INFO| 无任务，爬虫结束\n```\n\n代码解释如下：\n\n1. start_requests： 生产任务\n2. parse： 解析数据\n\n## 爬虫工具推荐\n\n1. 爬虫在线工具库：http://www.spidertools.cn\n2. 爬虫管理系统：http://feapder.com/#/feapder_platform/feaplat\n3. 验证码识别库：https://github.com/sml2h3/ddddocr\n\n\n## 微信赞赏\n\n如果您觉得这个项目帮助到了您，您可以帮作者买一杯咖啡表示鼓励 🍹\n\n也可和作者交个朋友，解决您在使用过程中遇到的问题\n\n\n![赞赏码](http://markdown-media.oss-cn-beijing.aliyuncs.com/2021/03/16/zan-shang-ma.png)\n\n## 学习交流\n\n<table border="0"> \n    <tr> \n     <td> 知识星球：17321694 </td> \n     <td> 作者微信： boris_tm </td> \n     <td> QQ群号：485067374 </td> \n    </tr> \n    <tr> \n    <td> <img src="http://markdown-media.oss-cn-beijing.aliyuncs.com/2020/02/16/zhi-shi-xing-qiu.jpeg" width=250px>\n </td> \n     <td> <img src="http://markdown-media.oss-cn-beijing.aliyuncs.com/2021/07/12/er-wei-ma.jpeg?x-oss-process=style/markdown-media" width="250px" /> </td> \n     <td> <img src="https://tva1.sinaimg.cn/large/008vxvgGly1h8byl060lnj30ku11c76h.jpg" width="250px" /> </td> \n    </tr> \n  </table> \n\n\n\n  加好友备注：feapder']
mass-Framework,一个模块化，面向大规模开发的javascript框架,653,https://github.com/RubyLouvre/mass-Framework,master,['mass Framework\n==================\n<h3>mass Framework的贡献者列表(排名不分先后)：</h3>\n<p>abcd(1群) ,Alucelx(1群)， <a href="http://stylechen.com/">带刀</a>(1群)，sapjax(2群) ,教主Franky(2群), 一三一四君(2B群), <a href="https://github.com/riophae">riophae</a>,<br/>\n    soom(5群),Hodor(5群)，小叶(3群，904591031)\n</p>\n<hr/>\n<p>一个模块化，以大模块开发为目标，jQuery式的框架。里面优先应用了大量HTML5新API，估计除了个别手机专属框架外，没有像它如此大范围应用了。这一来可以大大减少框架的体积，二来大幅提高运行效率。<p>\n<p>mass Framework的模块化经过一年化调整与改良，大致分为四类：</p>\n<ol>\n    <li>种子模块， mass.js，最精简的内核， 包含模块加载系统。</li>\n    <li>补丁模块， lang_fix.js, css_fix.js, event_fix.js, node_fix.js, attr_fix, ajax_fix, 主要是用于兼容IE678的，在chrome1+, FF4+, opera10+, safari4+是不会加载它们的。</li>\n    <li>核心模块， 所有位于根目录下，但不在其子目录下的JS文件， 提供框架的核心功能。</li>\n    <li>外围模块， 位于more的JS文件。</li>\n</ol>\n<hr/>\n<h3>mass Framework的源码阅读顺序</h3>\n<p>都是位于src目录下，里面的子目录是外围模块。</p>\n<p>mass.js -> lang.js(lang_fix.js) ->  class.js -> flow.js -> data.js -> support.js -> query.js -><br/>\n    node.js(node_fix.js) -> css.js(css_fix.js) -> attr.js(attr_fix.js) -> event.js(event_fix.js) -> fx.js -> ajax.js(ajax_fix.js)\n</p>\n<p>lang, class, flow, data专注于语言层面，query, node, css, attr, event, fx, ajax专注于DOM层面。</p>\n<hr/>\n<h3>mass Framework的文档：</h3>\n<p>它大部分文档已经转移到newland.js项目之下，我们可以在<a href="http://rubylouvre.github.com/doc/index.html">这里</a>访问得到它！</p>\n<h3>mass Framework的优点：</h3>\n<ol>\n    <li>多库共存。</li>\n    <li>多版本共存。</li>\n    <li>高度模块化，使用AMD规范的加载系统，实现并行加载，按需加载，自行处理依赖，有利于调试与最小化资源调度。(目前版本为v21)</li>\n    <li>flow提供自定义事件机制，$.Observer是一般化的观察者模块，</br/>\n\t$.Flow, 是其强化版， 专注于流程控制与从多处获取数据，解耦回调嵌套，减少等待时间，实现多路监听，一处归化;<br/>\n    </li>\n    <li>强大的类工厂。（目前版本为v11）</li>\n    <li>AS3式的补帧动画系统，支持回放，旋转，暂停！</li>\n    <li>第五代选择器引擎Icarus，全面兼容CSS3高级伪类与jQuery自定义伪类的。</li>\n    <li>与jQuery完全兼容的事件系统，强大的事件系统机制能轻松处理动态添加的节点的事件监听问题，此外还内置对滚轮事件的支持。</li>\n    <li>lang_fix模块已经为您修复了旧式IE的语言BUG，与添加上ECMA262v5的绝对大多数新API的支持与，因此痛快使用 String.prototype.trim,\n        Array.prototype.forEach, Array.prototype.map,Array.prototype.filter, Array.prototype.reduce,\n        Function.prototype.bind吧。</li>\n     <li>ajax模块支持XMLHTTPRequest2.0绝对大多数功能，能在旧式IE下上传下载二进制数据。</li>\n    <li>lang模块的提供语言链对象相当于把underscore.js这个库整合进来，你能想到语言扩展都有了。</li>\n    <li>API 95%与jQuery神似，学习成本极低。</li>\n    <li>全中文注释与大量参考链接与版本变更日志，绝对对你提高JS水平的好教程。</li>\n</ol>\n<h3>框架的使用：</h3>\n<p style="color:red; font-weight: bold;">点击上面的ZIP按钮将框架下载回来，解压，运行里面的Sws.exe服务器。</p>\n<p>一个简单的例子</p>\n<pre>\nrequire("ready,node",function(){\n/*待到domReady完成，执行回调*/\n   $.log("将日志打印到页面上",true)\n})\n</pre>\n<p>上面的代码相当于：</p>\n<pre>\nrequire("ready,node",function(){\n/*待到domReady完成，并且在node.js模块加载完毕，执行回调*/\n   $("&lt;pre&gt;将日志打印到页面上&lt;/pre&gt;").appendTo("body")\n})\n</pre>\n<p>我们在请求node.js时，会自动加载其依赖，如lang.js,support.js,class.js,query.js,data.js等等，\n    IE下还会加载lang_fix.js，但你无需理会它是怎么处理，只需专注于你的业务逻辑就行了。</p>\n<p>如果嫌麻烦，直接像jQuery那样，不过会把许多无用的部分都加载下来了。</p>\n<pre style="color:red">\n\n$(function(){\n  $("&lt;pre&gt;将日志打印到页面上&lt;/pre&gt;").appendTo("body")\n});\n</pre>\n<p>jQuery1.7最新的API它也支持了</p>\n<pre>\n$(function(){\n $("#dataTable tbody tr").on("click", function(event){\n\talert($(this).text());\n });\n});\n</pre>\n\n<p>相比于jQuery只限于DOM的操作，mass Framework对基本数据类型提供了大量的工具方法，甚至连es6的候选方法你都能找到。它们分别挂在$.String, $.Array, $.Number, $.Object之下。\n\n<h3>多库共存</h3>\n<pre>\n&lt;!DOCTYPE html&gt;\n&lt;html lang="en"&gt;\n    &lt;head&gt;\n        &lt;meta charset="utf-8"/&gt;\n        &lt;title&gt;多库共存&lt;/title&gt;\n        &lt;script&gt;\n            var $ = {\n                toString:function(){\n                    return "[object jQuery]"\n                }\n            };//假设这是已存在的库\n        &lt;/script&gt;\n        &lt;script type="text/javascript" src="../mass.js" charset="UTF-8"&gt;&lt;/script&gt;\n        &lt;script&gt;\n            //mass的命名空间将自动改为$+它当前的版本号\n            $1.require("lang",function(){\n                $1.log($+"")//[object jQuery]\n            })\n\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<pre>\n写个框架，将自己过往的积累都沉淀下来，等到回头去看时，发现之前攻克的每一个知识点，都乖巧地排在框架里，\n在你需要的时候，可以快速派上用场。这种感觉就像在组织自己的军团一样，军团中有驯服得很好的，也有个性还很浮躁的刺儿头。\n你慢慢将这支军团由一盘散沙驯练成精锐部队，这感觉真好。\n                                                     ——真阿当\n\t以前的程序员们，经常会为了做一个数据处理程序而自己开发一门编程语言。\n\t比如Charls Moore在美国国家天文台，做射电望远镜数据提取程序，开发了Forth。有的为了给自己写的书排版漂亮些，\n\t写了TeX。近的说，有人为了做网站写了Rails 和 Django。想想都不好意思称自己是程序员了。\t\t\t\t\t\t\t\t\t\t\t\t \n</pre>\n<h3>JS文件的合并</h3>\n<p>使用combo.js</p>\n<pre>\nnode.exe combo\n</pre>\n\n<h3>JS文件的压缩</h3>\n<p>使用compiler.jar( GCC，需要有JAVA运行环境)</p>\n<pre>\njava -jar compiler.jar --js mass_merge.js --js_output_file mass_min.js\njava -jar compiler.jar --js avalon.js --js_output_file avalon_min.js\n</pre>\n\n<h3>BUG提交与插件的友情贡献。</h3>\n\n<p>大家在github注册后，就可以在<a href="https://github.com/RubyLouvre/mass-Framework/issues">https://github.com/RubyLouvre/mass-Framework/issues</a>里面提交建议或BUG什么了。</p>\n<p>如果是想贡献力量，可以点击最上面的Fork按钮，拷贝一份作为自己的版本，然后在里面修改代码，添加插件，写完后通知我，好让我合并到主干上。</p>\n\n<p>by 司徒正美 （zhongqincheng）</p>\n<p>2011.11.15</p>\n<a href="http://www.cnblogs.com/rubylouvre/">http://www.cnblogs.com/rubylouvre/</a>\n<h1>如何贡献自己的力量</h1>\n<p>首先你总得有<strong>自己的github帐号</strong>吧，注册一个，非常简单，只需用户名，邮箱，密码，邮箱只是用来找回密码的，不做验证。因此注册后立即能用！比如我现在新注册一个叫JsLouvre的示范帐号。</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/1.jpg"/>\n<p>然后搜索我的项目——mass Framework</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/2.jpg"/>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/3.jpg"/>\n<p>第一个就是，点击进入项目，然后点上方的Fork按钮，这就拷贝一份我的项目的副本作为<strong>你自己的项目</strong></p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/4.jpg"/>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/5.jpg"/>\n<p>创建成功！</P>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/6.jpg"/>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/7.jpg"/>\n<p>接着就是修改代码了，这要在自己发现真的存在漏洞或有什么改进之处才要动手啊！不能想改就改。要通读你要改的那一部分，必要时通读全框架。因此新手们最好找国内高手的框架进行学习，\n    一来中文注释比较亲切，二来也方便接下来的交流。通常我们在clone git到本地进行修改的，这又涉及另外一些工具与命令的学习。不过，github完全允许你在线上进行修改，提交，合并。</p>\n<p>比如你发现data模块的注释与mass模块的不一样，要统一合并，将函数外的注释移到里头。（更有意义的方式是，打开<a href="http://www.jshint.com/">http://www.jshint.com/</a>，就能发现许多小问题。</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/8.jpg"/>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/9.jpg"/>\n<p>变成编辑状态，不过不太好用。大家有条件一定要学学如何使用TortoiseGit或Sublime Text 2下载github项目到本地，进行修改，提交，pull request啊！</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/10.jpg"/>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/11.jpg"/>\n<p>请认真写下你的修改日志，方便原框架作者查阅。</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/12.jpg"/>\n<p>修改成功后的样子：</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/13.jpg"/>\n<p>接着下来一步非常重要，就是提交你的修改给原作者。点击上方的pull request按钮！</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/14.jpg"/>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/15.jpg"/>\n<p>红色区域为原作者的项目，你要贡献的目标；亮蓝色区域为你的项目；黑色处填写标题与必须描述；点击右下方绿区域的按扭进行提交！</p>\n<hr/>\n<hr/>\n<p>接着下来就是框架作者的事儿了，我会在自己的项目看到你们的提交。万一以后你们有幸被别人贡献代码，也做这活儿。</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/16.jpg"/>\n<p>点击中间那个大大的pull request(2)的按钮到另一页面，中间有个被鲜绿色高亮的merge pull request按钮。作者查看你的修改，觉得可以就点它进行合并。</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/17.jpg"/>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/18.jpg"/>\n<p>最后你们就会在原项目上看到自己贡献的代码！</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/19.jpg"/>\n<hr/>\n<h1>如何让自己的项目与原作者的项目保持同步！</h1>\n<p>我经常看到许多人，只会fork一次，提交过一次修改就不知怎么办了！因此原框架作者是非常勤奋的，一天会提交N次，一个星期后许多文件都改动过了，而那些代码贡献者不可能一个个跟着修改。\n因此我们还是用到上方的pull request按钮。\n</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/20.jpg"/>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/21.jpg"/>\n<p>这次是把自己的项目放到左边，原框架作者放到右边，在选择过程中，你会发现原框架作者有许多贡献者的。这里我希望大家一定要浏览<em>Commits与Files Changed</em>进行学习!这也是github最大的价值所在！把握别人对代码的改进，最能提高我们编码水平。这里面会涉及大量的编码技巧！</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/22.jpg"/>\n<p>补上必要说明，然后点击下方send pull request按钮。</p>\n<p>很快你就看到评论区最下方有个鲜绿色高亮的按钮，继续点就是。</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/23.jpg"/>\n<p>继续让你确认，没问题就继续点！</p>\n<img src="https://raw.github.com/RubyLouvre/mass-Framework/master/course/24.jpg"/>\n<p>这样就同步成功！！！！！！</p>\n</fieldset>\n\n\n\n']
geek-framework,基于SpringBoot+Shiro+Redis+Jwt+Thymeleaf+MyBatis 开发的后台用户、角色、权限、会员管理、RestFul、Token和前台用户登录注册以及前后台用户分离的脚手架,823,https://github.com/liu-peiyu/geek-framework,master,['# Geek-Framework 微服务快速开发脚手架\r\n\r\n### 平台简介\r\n\r\nGeek-Framework是基于多个优秀的开源项目，高度整合封装而成的高效，高性能，强安全性的**开源**Java微服务快速开发框架。\r\n\r\nGeek-Framework是在SpringBoot基础上搭建的一个Java基础开发框架，以Spring MVC为模型视图控制器，MyBatis为数据访问层，\r\nApache Shiro和Spring-Security为权限授权层，redis进行缓存。\r\n\r\nGeek-Framework主要定位于微应用的开发，已内置后台系统的基础功能，用户管理、角色管理、权限管理、会员管理、日志管理等；前台已经实现用户登录，注册等基础功能。\r\n同时前后台会员实现分表管理，可扩展多角色系统、多权限系统。\r\n采用分层设计、双重验证、提交数据安全编码、密码加密、访问验证、数据权限验证。\r\n使用Maven做项目管理，提高项目的易开发性、扩展性。\r\n\r\n---\r\n\r\n###更新日期2019-01-16\r\n\r\n* 升级springboot版本为2.1.2.RELEASE application.yml增加以下配置，兼容最新的springboot版本\r\n  > spring:main:allow-bean-definition-overriding: true\r\n* 移除j2cache支持，移除原因为简化新手用户部署系统配置\r\n* 更改后台登录为单realm，不再支持多realm\r\n* 优化日期时间工具类，使用Instant、LocalDateTime、LocalDate实现线性安全\r\n* 修复Java开发规约中级警告及部分低级警告\r\n* 增加debug日志输出开关\r\n\r\n###更新日期2018-12-28\r\n\r\n* 项目增加健康检查暴露配置\r\n* 根据JAVA开发手册对项目部分不符合开发手册的代码进行了修正，已修复高级警告、中级警告，由于低级警告较多，尚未修复，后续将持续修复\r\n* 给前期已经使用项目的同学，可以使用【阿里巴巴Java开发规约插件p3c】进行修正，造成不便深表歉意\r\n\r\n\r\n###更新日期2018-10-08\r\n\r\n* 最近学习了远程过程调用协议RPC（Remote Procedure Call Protocol),将本框架与dubbo做了一个集成，详见dubbo分支，\r\n* 为了方便大学家习dubbo的运行机制，本框架将dubbo的provider和customer作了一个整合，将官方demo里的方多应用整合成了一个，即在同一应用内启动消费端和服务端\r\n* 注：如有实际业务需要请将服务端与消费端分离，此处整合仅供学习dubbo的运行机制和思想\r\n\r\n###更新日期2018-09-19\r\n* 升级mybatis包为mybatis-spring-boot-starter，移除原有mybatis包\r\n* 升级mapper包为mapper-spring-boot-starter\r\n* 升级pagehelper包为pagehelper-spring-boot-starter增加pagehelper-spring-boot-autoconfigure包\r\n* 更改mybatis、mapper和pagehelper为自动配置，配置方式详见application.yml\r\n* 移除MyBatisConfig.java和MybatisMapperScannerConfig.java文件\r\n* 更改升级pagehelper之后对排序方式的处理方式\r\n* 增加事务测试样例，详见AdminController的save方法，此坑很深，爬了一天，由于没有对spring事务的深入了解，导致事务一直不成功，原因在于spring事务只能处理没有被捕获的异常信息，如果对方法增加了事务，请尽量避免用catch来获取异常，或进在cache里面增加抛出异常功能，使事务能够访问到\r\n\r\n###更新日期2018-09-19\r\n* 升级J2cache为2.7.0版本，主要修复channel获取次数过多导致的错误问题，另个j2cache后期可能会移除对jedis的支持，所以还是提前升级了吧\r\n* 调整二级缓存redis为lettuce，lettuce为spring推荐的redis操作方式，另个j2cache也推荐使用\r\n* 配置文件application.yml和j2cache配置文件都增加了对lettuce的支持\r\n* 修改com.geekcattle.core.redis包下的RedisCacheManage为RedisShiroCacheManage,因为此文件名和spring源码中的一个文件重名，为了区分特此改名\r\n* 优化RedisConfiguration的JedisConnectionFactory为LettuceConnctionFoctory\r\n\r\n\r\n###更新日期2018-09-11\r\n本次主要更新了后台两个常用功能组件\r\n* 文件上传组件：上传组件支持本地上传、阿里云OSS上传、七牛上传，使用之前需先进行相关的配置\r\n* 编辑器组件：本组件使用百度UEditor作为编辑器插件，基础功能已经配置开发完成（编辑器初始加载、编辑器内容获取、文件上传等）\r\n\r\n\r\n###更新日期2018-06-20\r\n本次更新主要解决了前后台不能在同一浏览器登录的问题\r\n* 本次更新引入的spring-security用于对前台会员进行登录控制，后台管理仍使用shiro框架，前后台独立登录，不会出现挤掉另一端的BUG\r\n* spring-security已与JWT进行了完美的整合（不得不说spring家族的框架比shiro要好处理的太多了）\r\n* 数据库更新，对前台会员表进行了更新，引入了spring-security最新的密码验证机制BCryptPasswordEncoder，使用随机密钥方式，移除了原有的密码盐方式\r\n* 文件目录结构进行了优化调整\r\n* 数据库备份文件至data/geekcattle.sql\r\n* 修复上次提交时pom文件打包的错误\r\n* 修复j2cache不同环境配置文件的配置\r\n* 修复部署文件\r\n\r\n\r\n###更新日期2018-06-14\r\n更新说明：SpringBootAdmin已正式更名为Geek-Framework\r\n* 升级springboot1.5为了2.0，2.0版本变动比较大，1.5版本不可直接更新，如有需要可以查看更新记录\r\n* 已经建立1.0版本分支，如果需1.0版本代码，可下载v1.0分支\r\n* 整合了J2Cache二级缓存功能，J2Cache具体功能详见<http://www.oschina.net/p/j2cache>\r\n* 原有单redis缓存功能仍可使用，具体仍用方法见代码注释\r\n\r\nPS:现有代码中有J2Cache的源代码，原因是因为发现了一个J2Cache的BUG，官方版本已经更新，但未同步至中央仓库，暂时用源码替代，待仓库更新后移除现在源代码\r\n\r\n###更新日期2018-05-30\r\n\r\n* 增加了JWT工具类\r\n* 修复了jwt验证成功之后用户信息的传递，通过shiro的token登录传递，移除了以前的参数传递方法，此方法更为灵活好用\r\n* 引入了refresh_token的概念\r\n\r\n\r\n###更新日期2017-11-07\r\n\r\n* 项目整合redis存储，shiro可使用redisSession可使用于集群访问\r\n* 项目增加jwt模式\r\n* 增加默认启动模式为开发模式\r\n* 优化已知BUG\r\n\r\n## 内置功能\r\n\r\n1.\t管理员管理：管理员是系统操作者，该功能主要完成系统管理员相关配置和角色授权。\r\n2.\t角色管理：角色的基础功能以及角色分配权限。\r\n3.\t菜单管理：配置系统菜单，操作权限，按钮权限标识等。\r\n4. 会员管理：对前台注册会员的基础的管理。\r\n5.\t操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。\r\n\r\n## 技术选型\r\n\r\n1、后端\r\n\r\n* 核心框架：SpringBoot 2.0.2.RELEASE\r\n* 集成运行框架：Tomcat 8.5.31\r\n* 安全框架：Apache Shiro 1.4 Spring-Security 5.0.5\r\n* 视图框架：Spring MVC 5.0.6\r\n* 服务端验证：Hibernate Validator 6.0.9\r\n* 布局框架：Thymeleaf 3.0.9\r\n* 持久层框架：MyBatis 3.3.1\r\n* 数据处理框架：Mapper 3.3.9\r\n* 数据库连接池：Alibaba Druid 1.0\r\n* 缓存框架：Ehcache 3、Redis、J2Cache2.13\r\n* 日志管理：Log4j\r\n* TOKEN模式： jsonwebtoken 0.6\r\n* 工具类：Apache Commons、Jackson 2.9.5\r\n\r\n2、前端\r\n\r\n* JQ框架：jQuery 2.2.4\r\n* JQ兼容插件：jQuery-Migrate 1.4.1\r\n* CSS框架：Twitter Bootstrap 3.3.7+AdminLte 2.3.7\r\n* 客户端验证：jQuery Validate Plugin 1.15。\r\n* 数据表格：BootStrap-Table 1.11\r\n* 树数据列表：jQuery-Treegrid 0.2\r\n* 树结构控件：BootStrap-Treeview 1.2\r\n* 工具类框架：Layer 3.0\r\n\r\n4、平台\r\n\r\n* 服务器中间件：项目默认支持Tomcat8.5版本，如果需要打包部署到已有的Tomcat需做特殊处理后续会更新。\r\n* 数据库支持：目前仅提供MySql数据库的支持，但不限于数据库，后续会增加其它数据库支持接口，\r\n* 开发环境：Java1.8以上、IDEA、Maven 3.1以上、Git\r\n\r\n## 安全考虑\r\n\r\n1. 开发语言：系统采用Java 语言开发，具有卓越的通用性、高效性、平台移植性和安全性。\r\n2. 分层设计：（数据库层，数据访问层，业务逻辑层，展示层）层次清楚，低耦合，各层必须通过接口才能接入并进行参数校验（如：在展示层不可直接操作数据库），保证数据操作的安全。\r\n3. 双重验证：用户表单提交双验证：包括服务器端验证及客户端验证，防止用户通过浏览器恶意修改（如不可写文本域、隐藏变量篡改、上传非法文件等），跳过客户端验证操作数据库。\r\n4. 安全编码：用户表单提交所有数据，在服务器端都进行安全编码，防止用户提交非法脚本及SQL注入获取敏感数据等，确保数据安全。\r\n5. 密码加密：登录用户密码进行SHA1散列加密，此加密方法是不可逆的。保证密文泄露后的安全问题。\r\n6. 强制访问：系统对所有管理端链接都进行用户身份权限验证，防止用户直接填写url进行访问。\r\n\r\n## 功能预览\r\n\r\n![icon](https://github.com/liu-peiyu/Geek-Framework/blob/master/src/main/resources/static/img/pic1.png?raw=true)\r\n![icon](https://github.com/liu-peiyu/Geek-Framework/blob/master/src/main/resources/static/img/upload1.gif?raw=true)\r\n![icon](https://github.com/liu-peiyu/Geek-Framework/blob/master/src/main/resources/static/img/upload2.gif?raw=true)\r\n![icon](https://github.com/liu-peiyu/Geek-Framework/blob/master/src/main/resources/static/img/pic2.png?raw=true)\r\n![icon](https://github.com/liu-peiyu/Geek-Framework/blob/master/src/main/resources/static/img/pic3.png?raw=true)\r\n![icon](https://github.com/liu-peiyu/Geek-Framework/blob/master/src/main/resources/static/img/pic4.png?raw=true)\r\n![icon](https://github.com/liu-peiyu/Geek-Framework/blob/master/src/main/resources/static/img/pic5.png?raw=true)\r\n![icon](https://github.com/liu-peiyu/Geek-Framework/blob/master/src/main/resources/static/img/pic6.png?raw=true)\r\n\r\n\r\n\r\n## 账号信息\r\n\r\n* 后台账号密码：admin ---- admin \r\n* 前台账号密码：guest ---- hao123\r\n\r\nPS：测试数据库会不定期恢复。\r\n\r\n## 快速体验\r\n\r\n1. 具备运行环境：JDK1.8+、Maven3.0+、MySql5+。\r\n2. 修改src\\main\\resources\\application.properties、application-dev.properties、application-pro.properties文件中的数据库设置参数(application-dev.properties为开发环境的相应参数，application-pro.properties为部署环境的相应参数)。\r\n3. 根据修改参数创建对应MySql数据库用户和参数。\r\n4. 运行mvn package脚本，即可创建项目jar文件，同时也可以通过java -jar *.jar 即可本地预览\r\n5. data\\geekcattle.sql导入本地数据库即可\r\n6. 最高管理员账号，用户名：admin 密码：admin\r\n\r\n## 如何交流、反馈、参与贡献？\r\n\r\n* 为方便大家讨论交流，请加QQ群：805442966 加群回答：GeekFramework\r\n* GitHub：<https://github.com/liu-peiyu/Geek-Framework>\r\n* 开源中国：<https://gitee.com/liupeiyu/springbootadmin>\r\n\r\n## 版权声明\r\n\r\n本软件使用 [Apache License 2.0](http://www.apache.org/licenses/LICENSE-2.0) 协议，请严格遵照协议内容：\r\n\r\n1. 需要给代码的用户一份Apache Licence。\r\n2. 如果你修改了代码，需要在被修改的文件中说明。\r\n3. **在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。**\r\n4. 如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。\r\n5. Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售\r\n6. 你可以二次包装出售，**但还请保留文件中的版权和作者信息**，并在你的产品说明中注明SpringBootAdmin。\r\n7. 你可以以任何方式获得，你可以修改包名或类名，**但还请保留文件中的版权和作者信息**。\r\n\r\n## 捐赠支持\r\n\r\n![icon](https://github.com/liu-peiyu/Geek-Framework/blob/master/src/main/resources/static/img/pay.jpg?raw=true)\r\n']
xlua-framework,Unity游戏纯lua客户端完整框架---基于xlua，整合tolua的proto-gen-lua以及各个lua库和工具类,1001,https://github.com/smilehao/xlua-framework,master,['# xlua-framework\nUnity游戏纯lua客户端完整框架---基于xlua，整合tolua的proto-gen-lua以及各个lua库和工具类\n---未完成，持续更新中...\n\n-------------------------------------------------------------------\n\nXLua框架设计文档目录如下（具体内容查看工程下的《XLua框架设计文档.docx》）\n-\n一．总体设计\t4\n-\n1.1 概述\t4\n\n1.2 工程目录\t4\n\n1.3 游戏启动流程\t9\n\n1.4 运行指导\t9\n\n二．Lua简介\t15\n-\n\n2.1 lua设计语言简介\t15\n\n2.2 XLua简介\t15\n\n2.3 Unity侧功能的Lua实现\t18\n\n2.3 Lua通用扩展工具类\t20\n\n2.4 Lua面向对象程序设计\t21\n\n2.5 Lua数据表和常量表\t25\n\n2.6 Lua单例类\t26\n\n三．UI管理模块\t28\n-\n\n3.1 脚本目录结构\t28\n\n3.2 UI模块添加流程\t28\n\n3.3 UI框架总体设计\t28\n\n3.4 组件系统\t30\n\n3.5层级管理\t33\n\n3.6 窗口记录栈\t34\n\n四．协程管理\t36\n-\n\n4.1概述\t36\n\n4.2 协程操作\t36\n\n4.3 技术要点\t39\n\n4.4 其它说明\t40\n\n五．定时器管理\t41\n-\n\n5.1 概述\t41\n\n5.2 驱动原理\t41\n\n六．资源管理模块\t42\n-\n\n6.1 概述\t42\n\n6.2 AssetBundle设计概要\t42\n\n6.3 AssetBundle加载机制\t43\n\n6.4 AssetBundle打包机制\t45\n\n6.5 AssetBundle编辑器工具\t47\n\n6.6 热更新流程\t60\n\n6.7 资源预加载\t72\n\n6.8 资源缓存池\t72\n\n七．场景管理模块\t74\n-\n\n7.1 概述\t74\n\n7.2 工作流程\t74\n\n7.3 技术要点\t74\n\n八．网络管理模块\t77\n-\n\n8.1 概述\t77\n\n8.2 Protobuf协议\t77\n\n8.3 工作流程\t78\n\n8.4 其它说明\t79\n\n九．配置表\t80\n-\n\n9.1 概述\t80\n\n9.2 xlsx gen lua\t80\n\n9.3 proto gen lua\t80\n\n十．XLua工作流\t81\n-\n\n10.1 Lua脚本分类\t81\n\n10.2 XLua热修复\t82\n\n10.3 XLua动态库构建\t83\n\n10.4 XLua第三方库集成\t87\n\n10.5 XLua升级\t88\n\n十一．其它说明\t90\n-\n\n11.1 FAQ\t90\n\n11.2 Git地址\t90\n\n11.3 Git地址\t90\n\n11.4 其它\t91\n\n其它：\n-\nQQ交流群：571621746\n\n![image](https://github.com/smilehao/xlua-framework/raw/master/images/xlua-framework.png)\n\n\n\u2003\n']
framework-learning,计算机学习资料(Java , Jvm , Linux , Mysql , Netty , Redis , Netty , Spring , SpringBoot , Mybatis , Rabbitmq ,计算机网络 , 数据结构与算法 , 设计模式 )Github网页阅读:https://guang19.github.io/framework-learning  , Gitee网页版阅读:  https://qsjzwithguang19forever.gitee.io/framework-learning,1046,https://github.com/guang19/framework-learning,dev,['# framework-learning\n\n以下是我在学习计算机相关知识的过程中整理的一些资料，部分参考了网上一些大神的文章。\n我把它们都做成Markdown的文章供各位同学参考，其中一部分我也以XMind的方式来进行梳理总结。\n\n为了良好的阅读体验，可以移步到本项目的GitBook网页阅读版:\n[framework-learning](https://qsjzwithguang19forever.gitee.io/framework-learning) 。\n网页阅读版的内容与本项目是同步的，请放心阅读。\n\n目前有很多知识我个人也在学习和复习之中，后面的push可能会比较慢，所以请各位同学理解。\n\n\n# 目录\n\n  * [架构设计](#架构设计)\n  * [编程语言](#编程语言)\n     * [Jdk&Jvm&Juc（待JVM第三版修改）](#Jdk&Jvm&Juc（待JVM第三版修改）)\n  * [计算机基础](#计算机基础)\n     * [Linux](#linux)\n     * [数据结构与算法](#数据结构与算法)\n     * [计算机网络](#计算机网络)\n     * [设计模式](#设计模式)\n  * [数据库](#数据库)\n     * [关系型数据库](#关系型数据库)\n     * [非关系型数据库](#非关系型数据库)\n     * [Elasticsearch](#elasticsearch)\n  * [中间件](#中间件)\n     * [AMQP](#amqp)\n     * [Zookeeper](#zookeeper)\n     * [Tomcat](#tomcat)\n  * [开发框架与库](#开发框架与库)\n     * [Netty](#netty)\n     * [Spring框架](#spring框架)\n     * [ORM](#orm)\n  * [待办](#待办)\n  * [如何对本文档做出补充？](#如何对本文档做出补充？)\n  * [LICENSE](#license)\n\n\n## 架构设计\n\n- [系统架构设计](system_architecture_design/系统架构设计简介.md)\n\n  - [站内消息系统的设计](system_architecture_design/站内消息系统的设计.md)\n\n\n\n## 编程语言\n\n### Jdk&Jvm&Juc（待JVM第三版修改）\n\n- [Java常见基础知识点](jdk-jvm-juc/Java常见基础知识点.md)\n \n  - [Linux IO](jdk-jvm-juc/Linux_IO.md)\n \n  - [Java集合](jdk-jvm-juc/Java集合.md)\n\n  - [Java多线程](jdk-jvm-juc/Java多线程.md)\n\n  - [Java并发](jdk-jvm-juc/Java并发.md)\n \n  - [AQS](jdk-jvm-juc/AQS.md)\n \n  - [对象在内存中的布局](jdk-jvm-juc/对象在内存中的布局.md)\n\n  - [JVM](jdk-jvm-juc/JVM.md)\n\n  - [简单了解类文件结构](jdk-jvm-juc/简单了解类文件结构.md)\n \n  - [类的生命周期(类加载)](jdk-jvm-juc/类的生命周期.md)\n\n  - [JVM常量池](jdk-jvm-juc/JVM常量池.md)\n \n  - [GC](jdk-jvm-juc/GC.md) \n \n  - [JVM调优相关内容](jdk-jvm-juc/JVM调优相关内容.md)\n\n  - [Jdk新特性](jdk-jvm-juc/Jdk新特性.md)\n\n[JDK&JVM&JUC - XMind](xmind_file/JDK&JVM&JUC.xmind)\n\n\n\n## 计算机基础\n\n### Linux\n\n- [Linux简介](linux-learning/Linux简介.md)\n\n  - [操作系统的内核](linux-learning/操作系统的内核.md)\n\n  - [进程间通信](linux-learning/进程间通信.md)\n\n  - [Linux文件系统](linux-learning/Linux文件系统.md)\n\n  - [Linux用户权限](linux-learning/Linux用户权限.md)\n\n  - [Linux运行级别](linux-learning/Linux运行级别.md)\n\n  - [Shell](linux-learning/Shell.md)\n\n  - [Linux命令大全](linux-learning/Linux命令大全.md)\n\n  - [完全使用GNU/Linux学习](linux-learning/完全使用GNU_Linux学习.md)\n\n\n[非关系型数据库 - XMind](xmind_file/非关系型数据库.xmind)\n\n\n### 数据结构与算法\n\n- [数据结构与算法简介](datastructure-algorithm/数据结构与算法简介.md)\n  \n  - [数据结构](datastructure-algorithm/数据结构.md)\n  \n  - [算法](datastructure-algorithm/算法.md)\n\n推荐一个数据结构与算法的可视化网站，希望能够帮到正在学习数据结构与算法的同学: [数据结构与算法可视化](https://www.cs.usfca.edu/~galles/visualization/Algorithms.html)\n\n\n### 计算机网络\n\n- [OSI七层模型](computer_network/OSI七层模型.md)\n  \n  - [TCP/IP](computer_network/TCP_IP.md)\n  \n  - [HTTP](computer_network/HTTP.md)\n\n\n[计算机网络 - XMind](xmind_file/计算机网络.xmind)\n\n\n### 设计模式\n\n- [设计模式简介](design_pattern/设计模式简介.md)\n\n  - [七大原则](design_pattern/七大原则.md)\n \n  - [二十三种设计模式](design_pattern/二十三种设计模式.md)\n\n\n\n## 数据库\n\n### 关系型数据库\n\n- [RDBMS简介](rdbms-learning/RDBMS简介.md)\n  \n  - [RDBMS常见知识点](rdbms-learning/RDBMS常见知识点.md)\n    \n  - [索引](rdbms-learning/索引.md)\n  \n  - [Mysql](rdbms-learning/Mysql简介.md)\n  \n    - [Mysql存储引擎](rdbms-learning/Mysql存储引擎.md)\n    \n    - [事务](rdbms-learning/事务.md)\n    \n    - [数据库锁](rdbms-learning/数据库锁.md)\n    \n    - [Mysql日志](rdbms-learning/Mysql日志.md)\n    \n    - [Mysql优化](rdbms-learning/Mysql优化.md)\n    \n    - [Mysql数据类型](rdbms-learning/Mysql数据类型.md)\n\n\n[关系型数据库 - XMind](xmind_file/关系型数据库.xmind)\n\n\n### 非关系型数据库\n\n- [NoSQL简介](nosql-learning/NoSQL简介.md)\n \n  - [Redis简介](nosql-learning/Redis简介.md)\n   \n    - [Redis常见知识点](nosql-learning/Redis常见知识点.md)\n   \n    - [Redis数据结构](nosql-learning/Redis数据结构.md)\n   \n    - [Redis事务](nosql-learning/Redis事务.md)\n   \n    - [Redis缓存淘汰策略](nosql-learning/Redis缓存淘汰策略.md) \n\n    - [Redis持久化策略](nosql-learning/Redis持久化策略.md)\n \n \n### Elasticsearch\n \n[ElasticSearch](elasticsearch-learning/ElasticSearch.md)\n \n\n\n## 中间件\n\n### AMQP\n\n- [AMQP简介](amqp-learning/AMQP简介.md)\n  \n    - [RabbitMQ常见知识点](amqp-learning/RabbitMQ常见知识点.md)\n\n[AMQP - XMind](xmind_file/AMQP.xmind)\n\n\n### Zookeeper\n\n[Zookeeper](zookeeper-learning/Zookeeper.md)\n\n\n### Tomcat\n\n[Tomcat](tomcat9.0-source/Tomcat.md)\n\n\n\n## 开发框架与库\n\n### Netty\n\n- [Netty简介](netty-learning/Netty简介.md)\n\n  - [Netty特性](netty-learning/Netty特性.md)\n\n  - [Netty组件](netty-learning/Netty组件.md)\n\n    - [Transport传输](netty-learning/Transport传输.md)\n  \n    - [ByteBuf容器](netty-learning/ByteBuf容器.md)\n    \n    - [ChannelHandler和ChannelPipeline](netty-learning/ChannelHandler和ChannelPipeline.md)\n  \n    - [Netty线程模型和EventLoop事件循环](netty-learning/Netty线程模型和EventLoop.md)\n    \n    - [Bootstrap引导](netty-learning/Bootstrap引导.md)\n    \n    - [Codec编码与解码](netty-learning/Codec编码与解码.md)\n\n\n### Spring框架\n\n- [SpringFramework常见知识点](spring-learning/SpringFramework常见知识点.md)\n  \n- [SpringMVC常见知识点](spring-learning/SpringMVC常见知识点.md)\n  \n  - [SpringMVC源码分析](spring-learning/SpringMVC源码分析.md)\n  \n- [SpringBoot常见知识点](spring-learning/SpringBoot常见知识点.md)\n\n\n[Spring - XMind](xmind_file/Spring.xmind)\n\n\n### ORM\n\n- [ORM简介](orm-learning/ORM简介.md)\n  \n- [Mybatis简介](orm-learning/Mybatis简介.md)\n  \n  - [Mybatis常见知识点](orm-learning/Mybatis常见知识点.md)\n   \n  - [Mybatis源码分析](orm-learning/Mybatis源码分析.md)\n\n\n[ORM - XMind](xmind_file/ORM.xmind)\n\n\n\n## 待办\n\n- [ ] JVM部分后续会根据《深入理解Java虚拟机 - 第三版》更新\n\n- [ ] PostgreSQL\n\n- [ ] ~~Netty~~ (暂完)\n\n\n## 如何对本文档做出补充？\n这里主要讲讲本项目的目录结构吧。\n\n- img: 此目录存放所有的图片，这个各位同学稍微看看就知道了。Github有一个特点(好处)就是:\n当我们在markdown文件之中指定了本地图片时，\n它能自动把我们的图片上传到它的服务器上，这也是为什么你会在我的markdown之中看到这样的内容: \n\n````text\n![图片名](../img/图片名.png) \n````\n\n- xmind_file: 此目录存放了每个模块对应的xmind文件。\n\n- 本项目的每一个模块就是一块知识内容,每个模块下都有对应知识点的md文件，如:\n\n  - jdk-jvm-juc\n    \n    ...\n\n    - Java常见基础知识点.md\n\n    ...\n    \n**各位同学如果要纠错，可以在对应知识点的模块下修改对应的md文件。**    \n\n其他的目录或文件,如:gitbook_doc/* 由我亲自修改，并不需要改动。\n\n各位同学有好的建议可以提issue或pr，感谢各位同学的支持！\n\n\n\n## LICENSE\n**GNU**\n']
react-latest-framework,a client framework of React,828,https://github.com/react-love/react-latest-framework,master,['<p align="center"><img width="100" src="https://segmentfault.com/img/bVZwRf?w=516&h=457" /></p>\n\n# React技术栈脚手架（V16.8.6）\n\n[![Build Status](https://travis-ci.org/hyy1115/react-latest-framework.svg?branch=master)](https://travis-ci.org/hyy1115/react-latest-framework.svg?branch=master)  [![codebeat badge](https://codebeat.co/badges/8be7b4c1-85f3-4da9-ab23-d470624b40ad)](https://codebeat.co/projects/github-com-hyy1115-react-redux-webpack2-master)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](CONTRIBUTING.md#pull-requests)\n\n**适用人群：该框架集成了react开发常用技术栈，适用于想要学习单向数据流框架搭建的新手、以及想要一个比较干净、简洁的框架从事前端项目的开发者。**\n\n### 框架集成的配置\n\n> webpack版本为4.28.4，并且对webpack相关的第三方插件进行了兼容处理\n\n> 基于 [create-react-app][4] 进行改造，增加了redux、react-router、immutable等\n\n> 使用react-loadable做异步路由\n\n> babel最新配置\n\n> 使用happypack优化js、css构建，速度明显提升\n\n> UI框架使用的是世界第二大UI框架 \x08antd\n\n> （新增）你可以学习到如何在项目中使用react hooks，react-redux-hook\n\n> （新增）项目中有3个文件使用了hooks写法，分别是入口文件App.js，BaseLayout/index.js，Login.js，其余组件仍然保留class包装Connect的写法，用来做对比。\n\n#### 客户端渲染\n\n本项目是客户端渲染版本，登录账号 admin ， 密码 12345 \n\n![clipboard.png](https://segmentfault.com/img/bVbkqk8)\n\n![clipboard.png](https://segmentfault.com/img/bVbkqla)\n\n### Installation 教程\n\nfork到你的账号，简单省事，或者 download 项目到本地\n\n**1、 安装依赖包，已经解决了一些依赖包安装最新版可能出现的bug，如果还有问题，可以看相关社区的issue。**\n```\nnpm install 或cnpm install 或 yarn\n```\n\n**2、运行demo。**\n ```nodemon\n npm start\n ```\n\n**4、打包发布** \n\n```nodemon\nnpm run build\n```\n\n**5、你可以尝试serve来启动服务器。**\n\n```nodemon\nnpm run serve\n```\n\n\n### 学习ES6语法\nReact项目中，使用了大量的ES6语法，如果你还没有学习过ES6，那么推荐你看 [深入理解ES6笔记][2]\n\n**如果你对该项目感兴趣，想共享一份你的力量，请大胆pull PR！**\n\n[2]: https://github.com/hyy1115/ES6-learning\n[4]: https://github.com/facebook/create-react-app\n']
cocos_creator_framework,cocos creator 基础框架，包含资源、ui管理，网络模块,762,https://github.com/wyb10a10/cocos_creator_framework,master,['\n# cocos creator 框架 -- kxCreator\n\n## 3.0支持\n\n已完成3.0版本的适配，3.0的改动巨大，但框架上层的逻辑代码需要调整的内容较少，主要是适配typescript严格的代码检查，目前所有的示例都已经通过测试，详细可查看`creator3.0`分支，该分支需要用creator3.0打开\n\n## 资源管理重构\n\n计划 2021-2-10 之前完成对资源管理底层的初步重构，重构有几大目标：\n* 使接口兼容2.4之前和之后的cocos资源底层\n* 为cc.Asset注入引用计数功能，使框架使用的体验与新资源底层保持一致\n* 性能与内存占用的优化\n\n## 写在前面\n\n> 我对框架对一点理解，所谓框架，浅薄一点地说，只是将一些常用的代码进行封装，方便我们少写一点代码，更快地完成功能开发。但有的框架用起来舒坦，有的用起来令人令人感觉繁琐、压抑。希望这一堆代码，可以提高你的开发效率，并规避一些繁琐易错的问题。\n\n有2个问题，是我们在平时编码的时候总是会困扰我们的问题，一个是生命周期的管理问题，一个是数据的读写问题。这两个问题决定了我们能否轻松地实现各种功能，对于生命周期管理问题，最好的方式是不用管理，让框架自动帮我们做这件事，同时也能支持让我们手动控制某些我们希望控制的地方。\n\n## 核心框架\n\n* 资源管理\n  * ResLoader：资源的加载和卸载，支持资源依赖的识别\n  * PrefabPool：Prefab的简单池子，用于优化大量重复创建的对象\n* 网络框架\n* UI框架\n* 通用\n  * EventManager: 事件机制的支持\n  * TaskQueue: 任务队列的支持（确保有序地执行逻辑)\n* todo: 热更新\n* todo: 新手引导框架\n\n## 示例项目\n\n* 基础示例\n  * 网络功能示例 参考 Scene/example_net 场景\n  * 资源管理示例 参考 Scene/example_res 场景\n  * UI示例 参考 Scene/example_ui 场景\n  * ...\n* 完整游戏示例\n\n## 工具\n\n...\n']
operative-framework,operative framework is a investigation OSINT framework, you can interact with multiple targets, execute multiple modules, create links with target, export rapport to PDF file, add note to target or results, interact with RESTFul API, write your own modules.,605,https://github.com/graniet/operative-framework,master,['<img src="https://i.ibb.co/ZBf2T77/PNG.png" width="200">\n\n**operative framework** is a digital investigation framework, you can interact with multiple targets, execute multiple modules, create links with target, export rapport to PDF file, add note to target or results, interact with RESTFul API, write your own modules.\n\n#### DOWNLOAD LATEST RELEASE\n\nhttps://github.com/graniet/operative-framework/releases\n\n#### USE CASE\n\n[Comment un hacker peut utiliser une appli de rencontres pour suivre vos déplacements](https://www.bfmtv.com/tech/comment-un-hacker-peut-utiliser-une-appli-de-rencontres-pour-suivre-vos-deplacements_AN-202006270018.html)\n\n[En détournant l’app Happn, un hacker peut tracer votre chemin en temps réel](https://cyberguerre.numerama.com/5827-en-detournant-lapp-happn-un-hacker-peut-tracer-votre-chemin-en-temps-reel.html)\n\n[OSINT : des numéros de politiques françaises interceptés via Whatsapp](https://www.zataz.com/osint-des-numeros-de-politiques-francaises-interceptes-via-whatsapp/)\n\n[WhatsApp : comment un hack permet de trouver les contacts de personnalités publiques](https://www.numerama.com/tech/535622-whatsapp-comment-un-hack-permet-de-trouver-les-contacts-de-personnalites-publiques.html)\n\n[Les numéros de personnalités politiques « aspirés » sur WhatsApp](https://www.lepoint.fr/high-tech-internet/les-numeros-de-personnalites-politiques-aspires-sur-whatsapp-24-07-2019-2326637_47.php)\n\n[Nouvelle version d’Operative framework, un outil d’investigation numérique](https://www.zataz.com/operative-framework/)\n']
TowerDefense-GameFramework-Demo,基于Unity开源框架GameFramewrk实现的一款塔防游戏Demo,688,https://github.com/DrFlower/TowerDefense-GameFramework-Demo,master,['# TowerDefense-GameFramework-Demo\n\n## 简介\n\n这是一款基于开源框架[GameFramework][1]（以下简称GF）实现的塔防游戏Demo。Demo原型是Unity官方放在Assets Store上的Demo [Tower Defense Template][2]。此项目是对Demo原型使用GF进行再实现以及扩展，主要用于个人对GF的学习和实践，也给其他学习GF的同学一个参考。\n\n## 版本信息\n\n- Unity 2019.4.1f1\n- GameFramework 2020.12.31\n- Tower Defense Template 1.4\n\n## 框架代码解析\n\n这里是本人在知乎上对GF代码分析的专栏：[GameFramework解析：开篇](https://zhuanlan.zhihu.com/p/426136370)\n\n## 游戏简介\n\n### 游戏预览\n\n![简介1][4]  \n![简介2][5]  \n![简介3][13]  \n![简介4][14]  \n\n### 游戏介绍\n\n游戏是塔防类型，总共五个关卡，每个关卡的地形环境、产生的敌人、以及可使用的塔都不一样。玩家利用获得的能量根据具体情况选择合适的塔，并建造在适当的位置来阻止敌人攻击基地。\n\n#### 能量\n\n玩家在关卡开始有少量初始能量，通过击杀敌人和建造能量塔均可以获得能量，能量用于建造和升级塔。\n\n#### 塔\n\n1. 加农炮塔：高射速、低伤害\n2. 火箭炮塔：高AOE伤害（仅攻击地面敌人）\n3. 激光炮塔：低射速、高伤害、远射程\n4. 能量塔：每隔一段时间产生能量\n5. 电子脉冲塔：对附近的敌人附加减速效果\n6. 导弹阵列：对大范围敌人造成高额伤害，在场上存在10秒钟后自我销毁  \n**塔可以进行升级，升级后可提升射程、伤害、减速率、能量产生效率等**\n\n#### 敌人\n\n1. 虫子：低血量、高移速\n2. 直升机：可避免火箭炮塔的攻击，并且在道路被炮塔阻塞时可直接越过炮塔前往基地\n3. 坦克：高血量、低移速\n4. Boss：超高血量、超低移速\n5. 超级虫子：高血量版虫子\n6. 超级直升机：高血量版直升机\n7. 超级坦克：高血量版坦克\n8. 超级Boss：高血量版Boss  \n**敌人一般不会攻击塔，但在塔完全阻挡住敌人前进的路时，就会攻击塔（直升机敌人不攻击塔，会直接越过塔），正确方式是结合地形情况建塔制造迂回路线，增加敌人达到基地需要行走的路程，但又不完全阻挡道路，避免塔被攻击**\n\n#### 基地\n\n基地是敌人进攻的最终目标，也是玩家需要守护的目标，当基地血量为0时游戏失败。\n\n#### 关卡结算\n\n若玩家在消灭关卡所有敌人且基地血量不为0时，则通关成功，若在消灭所有怪物前，基地血量被攻击至0，则游戏失败。通关成功会根据基地剩余血量进行评分。\n\n## 相关实现\n\n本项目用到了GF中的多个模块包括全局配置、数据表、实体、事件、文件系统、有限状态机、文件系统、本地化、对象池、引用池、流程、资源、场景、游戏配置、声音、UI等。\n\n### 数据配置\n\n![数据配置][6]  \n游戏内所有数据均以Excel形式进行配置，导出生成二进制文件后在运行时加载读取。\n\n### 本地化\n\n![本地化][7]  \n利用本地化模块以及资源模块中的变体实现游戏本地化。\n\n### 引用池\n\n![引用池][8]  \n项目中大量重复使用的对象都使用了引用池进行缓存，避免频繁的内存分配。\n\n### 资源打包配置\n\n![资源打包配置1][9]  \n![资源打包配置2][10]  \n已对所有资源进行打包配置，设置了正确的分包信息、文件系统等。并根据内置分析工具做到0冗余、0循环引用。\n\n### 热更新\n\n![热更新][11]  \n游戏启动会检测版本信息并进行基本资源（即非关卡内资源）更新。\n\n### 分包下载\n\n![热更新][12]  \n游戏对每个关卡资源单独进行分包，进入关卡前需要下载更新相应的资源，而暂时没有玩到的关卡可以暂时不下载。\n\n## 注意事项\n\n游戏在Editor下默认以Editor模式启动，即读取工程内资源运行，不会读取AB包也不会进行更新。项目已正确配置打包信息，并完成了相应的热更逻辑的实现，若要测试更新模式，需要在Base组件取消Editor Resource Mode，并确保Resource组件的Resource Mode为Updatable模式。在打包资源并正确部署资源后即可正常运行更新模式（借助HFS等工具可在本地进行部署和测试）。\n\n## 结语\n\n感谢[GameFramework][1]作者[Ellan Jiang][3]提供的优秀框架。\n\n  [1]: https://github.com/EllanJiang/GameFramework "GF link"\n  [2]: https://assetstore.unity.com/packages/essentials/tutorial-projects/tower-defense-template-107692 "Tower Defense Template Link"\n  [3]: https://github.com/EllanJiang "Ellan Jiang link"\n  [4]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/1.png "简介1"\n  [5]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/2.JPG "简介2"\n  [6]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/3.png "数据配置"\n  [7]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/4.JPG "本地化"\n  [8]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/5.png "引用池"\n  [9]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/6.png "资源打包配置1"\n  [10]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/7.png "资源打包配置2"\n  [11]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/8.png "热更新"\n  [12]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/9.png "分包下载"\n  [13]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/10.gif "简介3"\n  [14]: https://github.com/DrFlower/TowerDefense-GameFramework-Demo/blob/master/Doc/11.gif "简介4"\n']
woodpecker-framework-release,高危漏洞精准检测与深度利用框架,908,https://github.com/woodpecker-framework/woodpecker-framework-release,master,['<p align="center">\n  <img src="docs/logo.png" width=300/>\n  <div align="center">Vulnerability accurate detection and deep exploit framework</div>\n</p>\n\n<p align="center">\n  <img title="portainer" src=\'https://img.shields.io/github/v/release/woodpecker-framework/woodpecker-framework-release\' />\n  <img title="portainer" src=\'https://img.shields.io/badge/java-1.8.*-yellow.svg\' />\n  <img title="portainer" src=\'https://img.shields.io/badge/license-MIT-red.svg\' />\n</p>\n\n## 0x01 简介\nwoodpecker-framework是一款漏洞精准检测深度利用框架，只做一件事：`精准狙击高危漏洞`。\n\n针对人群：专业打点人士。\n\n* 目标探测\n* 精准检测\n* 深度利用\n* 荷载生成\n\n![woodpecker-framework](./docs/woodpecker-framework.png)\n\n## 0x02 注意\n\n#### 2.1 在Mac os JDK11.11版本下运行，切换输入法会崩溃\n这个问题不是woodpecker框架的问题，是该版本JDK的一个bug，具体大家可以看看[Java app crashes while switching input methods](https://bugs.openjdk.java.net/browse/JDK-8257242)\nJDk11.11其他操作系统下可以正常运行。\n\n## 0x03 更多\n* [官方网站](http://woodpecker.gv7.me/)\n* [插件仓库](https://github.com/woodpecker-appstore)\n* [插件编写指南](https://github.com/woodpecker-appstore/plugin-example)']
Django-REST-framework-documentation,The translation of documentation for the version 3 of REST framework.（Only dev branch-based PR will be accepted. ）,531,https://github.com/Q1mi/Django-REST-framework-documentation,master,['# Django-REST-framework-documentation\nDjango REST framework V3.* 文档中文翻译。\n\n之前因为工作中用到这个框架，随手翻译的。\n慢慢填坑中...\n有兴趣的童鞋可以加入该项目，和我一起翻译。\n\n[在线预览该翻译文档](https://q1mi.github.io/Django-REST-framework-documentation/)\n']
LuaFramework_UGUI_V2,基于tolua的热更新框架V2,590,https://github.com/jarjin/LuaFramework_UGUI_V2,master,['# LuaFramework_UGUI_V2\n基于tolua的热更新框架集成lockstep的实例\n\n更新内容：<br>\n（1）更新LuaFramework_UGUI最新tolua版本，以支持安卓arm64平台。<br>\n（2）集成RUDP库https://github.com/RevenantX/LiteNetLib<br>\n（3）增加基于LiteNetLib的lockstep的例子demo。<br>\n\n【关于Unity3D的版本问题】\n\t目前打算用Unity5.0.0的版本，因为很多人依然在用较低版本，我们之后也会抽空去征求多数人的建议，\n如果有必要，我们也会支持较高版本的Unity.\t\t\t\t\t\t\t\t\t\t\n\n2019/07/15更新日志\n将LuaFrameworkd_UGUI_V2升级到2018/2019的高版本,打算弃用5.3以下的版本, 而且以后走GooglePlay的话, 64位最低版本要2017.4. \n\n【关于LiteNetLib网络库】\n\t目前的LiteNetLib网络库尚未使用最新的master版本，因为兼容性问题尚在修复，等LockStep的demo之后\npush后，会将LiteNetLib升级. 敬请关注！\n\n目前在开发新版框架，如果有技术问题，加微信jarjin，拉微信群，帮你们解决\n']
Django-REST-framework-documentation,The translation of documentation for the version 3 of REST framework.（Only dev branch-based PR will be accepted. ）,531,https://github.com/Q1mi/Django-REST-framework-documentation,master,['# Django-REST-framework-documentation\nDjango REST framework V3.* 文档中文翻译。\n\n之前因为工作中用到这个框架，随手翻译的。\n慢慢填坑中...\n有兴趣的童鞋可以加入该项目，和我一起翻译。\n\n[在线预览该翻译文档](https://q1mi.github.io/Django-REST-framework-documentation/)\n']
LuaFramework_UGUI_V2,基于tolua的热更新框架V2,590,https://github.com/jarjin/LuaFramework_UGUI_V2,master,['# LuaFramework_UGUI_V2\n基于tolua的热更新框架集成lockstep的实例\n\n更新内容：<br>\n（1）更新LuaFramework_UGUI最新tolua版本，以支持安卓arm64平台。<br>\n（2）集成RUDP库https://github.com/RevenantX/LiteNetLib<br>\n（3）增加基于LiteNetLib的lockstep的例子demo。<br>\n\n【关于Unity3D的版本问题】\n\t目前打算用Unity5.0.0的版本，因为很多人依然在用较低版本，我们之后也会抽空去征求多数人的建议，\n如果有必要，我们也会支持较高版本的Unity.\t\t\t\t\t\t\t\t\t\t\n\n2019/07/15更新日志\n将LuaFrameworkd_UGUI_V2升级到2018/2019的高版本,打算弃用5.3以下的版本, 而且以后走GooglePlay的话, 64位最低版本要2017.4. \n\n【关于LiteNetLib网络库】\n\t目前的LiteNetLib网络库尚未使用最新的master版本，因为兼容性问题尚在修复，等LockStep的demo之后\npush后，会将LiteNetLib升级. 敬请关注！\n\n目前在开发新版框架，如果有技术问题，加微信jarjin，拉微信群，帮你们解决\n']
Cloudajs,Clouda Framework - A Realtime Javascript RIA Framework For Mobile WebApp,902,https://github.com/Clouda-team/Cloudajs,master,['## Clouda现已全面升级\n\n原云端一体框架Cloudajs(Sumeru)更名为[RapidJS](https://github.com/Clouda-team/rapid-core)，全面升级后，变得更加灵巧优雅。\n\n我们更添加了[BlendUI](https://github.com/Clouda-team/BlendUI)、[Blend API](https://github.com/Clouda-team/BlendAPI)和Runtime到Clouda+家族中，让移动端的能力和交互得到质的飞跃。\n\n我们的官网是： http://clouda.com \n']
ratelimiter4j,Java rate limiting library/framework,895,https://github.com/wangzheng0822/ratelimiter4j,master,['# Ratelimiter4j \n### Features\nRateLimiter是一个高度容错，低延迟，高性能的限流开发库/框架，提供了对HTTP接口的访问限流功能。其特点：\n* 提供了各种灵活的配置方式，同时支持零配置纯编程使用模式\n* 支持yaml, json等多种限流规则配置格式\n* 支持本地文件配置限流规则或者zookeeper集中配置方式\n* 使用SPI插件式开发模式，支持自定义限流规则格式，限流算法等\n* 提供了基于内存的单机限流算法和基于Redis的分布式限流算法\n* 高度容错，限流框架的任何异常都不会影响业务接口\n* 低延迟，限流框架较小影响业务接口响应时间\n* 支持不同粒度的接口限流，支持接口中包含restful url template variables\n* 灵活的集成方式，方便集成spring开发框架\n\n### Prerequisite\nRateLimit4J需要Java 8及以上版本\n\n### Building\n```shell\n$ git clone https://github.com/wangzheng0822/ratelimiter4j\n$ cd ratelimiter4j/\n$ gradle build\n```\n\n### Quickstart\n\n基于内存的限流，如果不需要特殊配置，使用起来非常简单，如下几行代码即可：\n```java\nUrlRateLimiter ratelimiter = new MemoryUrlRateLimiter();\ntry {\n  ratelimiter.limit("app-1", "http://www.eudemon.com/v1/user/12345");\n  System.out.println("passed");\n} catch (OverloadException e) {\n  // business logic\n} catch (InvalidUrlException e) {\n  // business logic\n} catch (InternalErrorException e) {\n  // business logic\n}\n```\n限流规则配置，放置在classpath下面：ratelimiter-rule.yaml\n```yaml\nconfigs:\n- appId: app-1\n  limits:\n  - api: /v1/user\n    limit: 100\n  - api: /v1/order\n    limit: 50\n- appId: app-2\n  limits:\n  - api: /v1/user\n    limit: 50\n  - api: /v1/order\n    limit: 50\n```\n\n基于Redis的分布式限流，如果不需要特殊设置，只需要简单配置一下Redis地址，如下：\n```java\nSystem.setProperty("ratelimiter.redis.address", "127.0.0.1:6379");\nUrlRateLimiter ratelimiter = new DistributedUrlRateLimiter();\ntry {\n  ratelimiter.limit("app-1", "http://www.eudemon.com/v1/user/12345");\n  System.out.println("passed");\n} catch (OverloadException e) {\n  // business logic\n} catch (InvalidUrlException e) {\n  // business logic\n} catch (InternalErrorException e) {\n  // business logic\n}\n```\n限流规则配置，放置在classpath下面：ratelimiter-rule.yaml，同上面的相同\n\n### Documentation\n作者还写了一篇科普文章，发表于Infoq的架构公众号(聊聊架构)：[微服务接口限流的设计与思考](https://mp.weixin.qq.com/s?__biz=MzIwMzg1ODcwMw==&mid=2247488188&idx=1&sn=9e77a94b271909fecba136baab66a722&chksm=96c9a4dca1be2dcae2b1780cefaf22a6b6db4ecbe46357cf9e66dd3635db31bd3fea29414c36#rd)\n\n更加详细配置及其使用方法及其examples，请参看[User Guide开发手册](https://github.com/wangzheng0822/ratelimiter/wiki/1.-User-Guide%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C "User Guide开发手册")\n \n使用前请先确认性能是否满足应用场景，请务必阅读[Benchmark性能测试报告](https://github.com/wangzheng0822/ratelimiter/wiki/2.-Benchmark%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A)\n\n必要情况下请参照测试文档和benchmark code自行测试[RateLimiterBenchmarkTest.java](https://github.com/wangzheng0822/ratelimiter/blob/master/src/test/java/com/eudemon/ratelimiter/benchmark/RateLimiterBenchmarkTest.java)\n\n\n### Roadmap\n<table>\n  <tr>\n    <td>功能</td>\n    <td>优先级</td>\n    <td>进度</td>\n  </tr>\n  <tr>\n    <td>分布式限流算法支持Redis cluster & sharding</td>\n    <td>p1</td>\n    <td>未开发</td>\n  </tr>\n  <tr>\n    <td>支持limit接口超时参数</td>\n    <td>p1</td>\n    <td>未开发</td>\n  </tr>\n  <tr>\n    <td>限流规则支持指定time unit</td>\n    <td>p1</td>\n    <td>in progress</td>\n  </tr>\n  <tr>\n    <td>支持不区分app ID的限流模式</td>\n    <td>p1</td>\n    <td>in progress</td>\n  </tr>\n  <tr>\n    <td>支持线程并发限制</td>\n    <td>p1</td>\n    <td>未开发</td>\n  </tr>\n  <tr>\n    <td>限流规则支持GET/POST等http schema</td>\n    <td>p1</td>\n    <td>in progress</td>\n  </tr>\n  <tr>\n    <td>分布式限流算法性能优化</td>\n    <td>p1</td>\n    <td>未开发</td>\n  </tr>\n  <tr>\n    <td>支持黑白名单和鉴权功能</td>\n    <td>p1</td>\n    <td>未开发</td>\n  </tr>\n  <tr>\n    <td>支持更多的限流算法</td>\n    <td>p1</td>\n    <td>未开发</td>\n  </tr>\n  <tr>\n    <td>支持更加通用的限流：db,业务,dubbo等</td>\n    <td>p1</td>\n    <td>未开发</td>\n  </tr>\n  <tr>\n    <td>支持可以任意指定rule存放的位置file</td>\n    <td>p1</td>\n    <td>in progress</td>\n  </tr>\n  <tr>\n    <td>添加更加完善的监控</td>\n    <td>p1</td>\n    <td>未开发</td>\n  </tr>\n</table>\n']
GatewayWorker,Distributed realtime messaging framework based on workerman.,923,https://github.com/walkor/GatewayWorker,master,['GatewayWorker \n=================\n\nGatewayWorker基于[Workerman](https://github.com/walkor/Workerman)开发的一个项目框架，用于快速开发长连接应用，例如app推送服务端、即时IM服务端、游戏服务端、物联网、智能家居等等。\n\nGatewayWorker使用经典的Gateway和Worker进程模型。Gateway进程负责维持客户端连接，并转发客户端的数据给Worker进程处理；Worker进程负责处理实际的业务逻辑，并将结果推送给对应的客户端。Gateway服务和Worker服务可以分开部署在不同的服务器上，实现分布式集群。\n\nGatewayWorker提供非常方便的API，可以全局广播数据、可以向某个群体广播数据、也可以向某个特定客户端推送数据。配合Workerman的定时器，也可以定时推送数据。\n\n快速开始\n======\n开发者可以从一个简单的demo开始(demo中包含了GatewayWorker内核，以及start_gateway.php start_business.php等启动入口文件)<br>\n[点击这里下载demo](http://www.workerman.net/download/GatewayWorker.zip)。<br>\ndemo说明见源码readme。\n\n手册\n=======\nhttp://www.workerman.net/gatewaydoc/\n\n安装内核\n=======\n\n只安装GatewayWorker内核文件（不包含start_gateway.php start_businessworker.php等启动入口文件）\n```\ncomposer require workerman/gateway-worker\n```\n\n使用GatewayWorker开发的项目\n=======\n## [tadpole](http://kedou.workerman.net/)  \n[Live demo](http://kedou.workerman.net/)  \n[Source code](https://github.com/walkor/workerman)  \n![workerman todpole](http://www.workerman.net/img/workerman-todpole.png)   \n\n## [chat room](http://chat.workerman.net/)  \n[Live demo](http://chat.workerman.net/)  \n[Source code](https://github.com/walkor/workerman-chat)  \n![workerman-chat](http://www.workerman.net/img/workerman-chat.png)  \n']
DRouter,Android Router Framework,608,https://github.com/didi/DRouter,master,['## 简介\n\n<div align="center">\n <img src="https://img.shields.io/badge/license-Apache2.0-brightgreen.svg" align=left />\n <img src="https://img.shields.io/badge/drouter--plugin--proxy-1.0.2-red.svg" align=left />\n <img src="https://img.shields.io/badge/drouter--api-2.4.3-blue.svg" align=left />\n <img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" align=left />\n</div>\n<br/>\nDRouter是18年滴滴乘客端自研的一套Android路由框架，基于平台化解耦的思想，为组件间通信服务。该项目以功能全面、易用为原则，支持各种路由场景，在页面路由、服务获取和过滤、跨进程及应用、VirtualApk插件支持等方面都能提供多样化的服务。目前已在滴滴乘客端、顺风车、单车、国际化、滴滴定制车等十多个滴滴的app内使用，得到各种场景的验证。\n\n<img src="https://czp.s3.didiyunapi.com/image/drouter/DRouter_Architecture.jpg" width="700px" align="center" alt="DRouter架构图"/>\n\n## 提供功能\n\n- 使用URI字符串导航Activity、Fragment、View、RouterHandler，注解支持正则表达式、占位符\n- 适配ActivityResultLauncher\n- RouterHandler、Activity支持等待异步完成(hold)，并可设置超时时间\n- RouterHandler指定执行线程\n- 注入拦截器，支持全局拦截器和局部拦截器，面向切面编程，拦截器可以使用字符串名字\n- 更为多样化的Fragment页面跳转能力\n- 使用接口或基类导航到实现类Service的Class以及实例\n- 支持Service别名以及多维过滤器查找\n- 导航Service可指定任意构造器、支持单例\n- 支持动态注册RouterHandler、Service，绑定生命周期自动解绑\n- 简单易用的跨进程执行RouterHandler、Service\n- 跨进程访问无需提前绑定、如同本地调用一样进行访问\n- 支持客户端进程和服务端进程自动重连\n- 共享内存\n- 支持VirtualApk\n- 适配AndroidX\n\n### 技术特点\n1. 支持增量编译，多线程扫描，提升编译效率\n2. 初始化点对点加载路由表，无反射和遍历，异步加载，提升启动性能\n3. 完整的Router功能\n4. 强大的ServiceLoader实例化和过滤能力\n5. 易用高效的跨进程通信机制，同步执行，就像调用本地方法\n6. 框架内部尽可能规避反射，提升运行时性能\n7. 动态下载与api匹配的plugin，无需升级plugin版本\n8. 无需手动添加混淆规则\n\n## 核心模块\n\n模块 | 功能\n|  :-- | :--  |\nRouter | Native和H5导航Activity、Fragment、View、RouterHandler，支持切入拦截器\nService | 基于spi通过接口的形式查找到实现类，支持过滤和优先级配置\nPage | 支持单Page、栈Page、ViewPager三种形式的Fragment加载\nProcess | 跨进程访问Router、Service，共享内存\n\n## 使用文档\n\n接入方式及文档请移步 [Wiki](https://github.com/didi/DRouter/wiki)\n\n``` java\n/** 最新版本 **/\nclasspath "io.github.didi:drouter-plugin-proxy:1.0.2"\napi "io.github.didi:drouter-api:2.4.3"           // Router、Service\napi "io.github.didi:drouter-api-page:1.0.0"      // Page\napi "io.github.didi:drouter-api-process:1.0.0"   // Process\n```\n\n## 微信交流群\n\n[微信群二维码链接](http://p-bim-img.bytedance.net/tos-cn-i-hf6qmptvc7/drouter/drouter.png~tplv-hf6qmptvc7-image.image)\n\n或微信搜索作者 gwball (备注DRouter)入群\n\n## 相关文章\n\n[滴滴开源DRouter：一款高效的Android路由框架](https://juejin.cn/post/6975818153381068831)\n\n## License\n\n<img alt="Apache-2.0 license" src="https://www.apache.org/img/ASF20thAnniversary.jpg" width="128">\n\nDRouter 基于 Apache-2.0 协议进行分发和使用，更多信息参见 [协议文件](LICENSE)\n']
abc,A better Deno framework to create web application.,600,https://github.com/zhmushan/abc,master,['# Abc\n\n> **A** **b**etter Deno framework to **c**reate web application\n\n[![tag](https://img.shields.io/github/tag/zhmushan/abc.svg)](https://github.com/zhmushan/abc)\n[![Build Status](https://github.com/zhmushan/abc/workflows/ci/badge.svg?branch=master)](https://github.com/zhmushan/abc/actions)\n[![license](https://img.shields.io/github/license/zhmushan/abc.svg)](https://github.com/zhmushan/abc)\n[![tag](https://img.shields.io/badge/deno->=1.0.0-green.svg)](https://github.com/denoland/deno)\n[![tag](https://img.shields.io/badge/std-0.98.0-green.svg)](https://github.com/denoland/deno)\n\n#### Quick links\n\n- [API Reference](https://doc.deno.land/https/deno.land/x/abc/mod.ts)\n- [Guides](https://deno.land/x/abc/docs/table_of_contents.md)\n- [Examples](https://deno.land/x/abc/examples)\n- [Changelog](https://deno.land/x/abc/CHANGELOG.md)\n\n## Hello World\n\n```ts\nimport { Application } from "https://deno.land/x/abc@v1.3.3/mod.ts";\n\nconst app = new Application();\n\nconsole.log("http://localhost:8080/");\n\napp\n  .get("/hello", (c) => {\n    return "Hello, Abc!";\n  })\n  .start({ port: 8080 });\n```\n']
sofa-ark,SOFAArk is a light-weight，java based classloader isolation framework.,1362,https://github.com/sofastack/sofa-ark,master,['# SOFAArk Project\n\n[![Build Status](https://travis-ci.org/sofastack/sofa-ark.svg?branch=master)](https://travis-ci.org/sofastack/sofa-ark)\n[![Coverage Status](https://codecov.io/gh/sofastack/sofa-ark/branch/master/graph/badge.svg)](https://codecov.io/gh/sofastack/sofa-ark/branch/master/graph/badge.svg)\n[![Gitter](https://img.shields.io/badge/chat-on%20gitter-orange.svg)](https://gitter.im/sofa-ark/Lobby)\n![license](https://img.shields.io/badge/license-Apache--2.0-green.svg)\n![maven](https://img.shields.io/nexus/r/https/oss.sonatype.org/com.alipay.sofa/sofa-ark-all.svg)\n\nSOFAArk 是一款基于 Java 实现的动态热部署和轻量级类隔离框架，由蚂蚁集团开源贡献，主要提供应用模块的动态热部署和类隔离能力。基于 [Fat Jar](https://docs.spring.io/spring-boot/docs/current/reference/html/executable-jar.html#executable-jar-jar-file-structure) 技术，可以将多个应用模块打包成一个自包含可运行的 Fat Jar，应用既可以是简单的单模块 Java 应用也可以是 SpringBoot/SOFABoot 应用。[访问网址](https://www.sofastack.tech/sofa-boot/docs/sofa-ark-readme?lang=zh-cn)进入快速开始并获取更多详细信息。\n\n\n## 背景\nSOFAArk 最初的场景是解决 Java 开发常常会遇到的包依赖冲突的问题，尤其当工程应用变得臃肿庞大，包冲突的问题也会变得更加棘手，导致各种各样的报错，例如`LinkageError`, `NoSuchMethodError`等。实际开发中，可以采用多种方法来解决包冲突问题，比较常见的是类似 SpringBoot 的做法，统一管理应用所有依赖包的版本，保证这些三方包不存在依赖冲突。这种做法只能有效避免包冲突的问题，不能根本上解决包冲突的问题。如果某个应用的确需要在运行时使用两个相互冲突的包，例如 `protobuf2` 和 `protobuf3`，那么类似 SpringBoot 的做法依然解决不了问题。\n\n为了彻底解决包冲突的问题，我们需要借助类隔离机制，使用不同的 ClassLoader 加载不同版本的三方依赖，进而隔离包冲突问题。OSGI 作为业内最出名的类隔离框架，自然是可以被用于解决上述包冲突问题，但是 OSGI 框架太过臃肿，功能繁杂。为了解决包冲突问题，引入 OSGI 框架，有牛刀杀鸡之嫌，反而使工程变得更加复杂，不利于开发。\n\nSOFAArk 则采用较为轻量级的类隔离方案来解决日常经常遇到的包冲突问题，在蚂蚁金服内部服务于整个 [SOFABoot](https://github.com/sofastack/sofa-boot) 技术体系，弥补 SpringBoot 没有的类隔离能力。实际上，SOFAArk 是一个通用的轻量级类隔离框架，并不限于 SpringBoot 应用，也可以和其他的 Java 开发框架集成。\n\n基于类隔离能力 SOFAArk 还提供了动态热部署能力。SOFAArk 不但支持将多个应用合并打成一个可执行的 Fat Jar 包，也支持运行时通过 API 或者 Zookeeper 动态推送配置达到动态部署应用模块的能力。在多团队协作开发时，各个功能模块由不同的团队负责开发，通常情况下，这些功能模块独立开发，但是运行时部署在一起。借助 SOFAArk 提供的合并部署能力，各团队开发时拥有相当大自由度，只需要定义各模块之间的交互接口即可，尤其对于中台应用开发，提高团队合作效率。除了合并部署，SOFAArk 还对接了 Zookeeper 接受动态配置，控制应用模块的动态安装和卸载。\n\n\n## 原理\nSOFAArk 框架包含有三个概念，`Ark Container`, `Ark Plugin` 和 `Ark Biz`; 运行时逻辑结构图如下： \n\n![framework](resource/SOFA-Ark-Framework.png)\n\n在介绍这三个概念之前，为了统一术语，有必要先说一下所谓的 `Ark 包`；Ark 包是满足特定目录格式要求的 `Executed Fat Jar`，使用官方提供的 `Maven` 插件 `sofa-ark-maven-plugin`可以将工程应用打包成一个标准格式的 `Ark 包`；使用命令 `java -jar application.jar`即可在 Ark 容器之上启动应用；`Ark 包` 通常包含 `Ark Container`、`Ark Plugin`、 `Ark Biz`；以下我们针对这三个概念简单做下名词解释：\n\n+ `Ark Container`: Ark 容器，负责整个运行时的管理；`Ark Plugin` 和 `Ark Biz` 运行在 Ark 容器之上；容器具备管理多插件、多应用的功能；容器启动成功后，会自动解析 classpath 包含的 `Ark Plugin` 和 `Ark Biz` 依赖，完成隔离加载并按优先级依次启动之；\n\n+ `Ark Plugin`: Ark 插件，满足特定目录格式要求的 `Fat Jar`，使用官方提供的 `Maven` 插件 `sofa-ark-plugin-maven-plugin` 可以将一个或多个普通的 `Java \xa0Jar` 包打包成一个标准格式的 `Ark Plugin`； `Ark Plugin` 会包含一份配置文件，通常包括插件类导入导出配置、插件启动优先级等；运行时，Ark 容器会使用独立的 `PluginClassLoader` 加载插件，并根据插件配置构建类加载索引表，从而使插件与插件、插件与应用之间相互隔离；\n\n+ `Ark Biz`: Ark 业务模块，满足特定目录格式要求的 `Fat Jar` ，使用官方提供的 `Maven` 插件 `sofa-ark-maven-plugin` 可以将工程应用打包成一个标准格式的 `Ark-Biz` 包；是工程应用模块及其依赖包的组织单元，包含应用启动所需的所有依赖和配置；\n\n在运行时，`Ark Container` 优先启动，自动解析 classpath 包含的 `Ark Plugin` 和 `Ark Biz`，并读取他们的配置，构建类加载索引关系；然后使用独立的 ClassLoader 加载他们并按优先级配置依次启动；需要指出的是，`Ark Plugin` 优先 `Ark Biz` 被加载启动；`Ark Plugin` 之间是双向类索引关系，即可以相互委托对方加载所需的类；`Ark Plugin` 和 `Ark Biz` 是单向类索引关系，即只允许 `Ark Biz` 索引 `Ark Plugin` 加载的类，反之则不允许。\n\n## 场景\n### 包冲突\nSOFAArk初衷是为了解决包冲突问题，那什么情况下可以使用 SOFAArk 以及如何使用呢？ 假设如下场景，如果工程需要引入两个三方包：A 和 B，但是 A 需要依赖版本号为 0.1 的 C 包，而恰好 B 需要依赖版本号为 0.2 的 C 包，且 C 包的这两个版本无法兼容:\n\n![conflict](resource/SOFA-Ark-Conflict.png)\n\n此时，即可使用 SOFAArk 解决该依赖冲突问题；只需要把 A 和版本为 0.1 的 C 包一起打包成一个 `Ark Plugin`，然后让应用工程引入该插件依赖即可；\n\n### 合并部署\nSOFAArk 基于类隔离能力，实现了应用的合并部署，可以简单分为静态合并部署和动态合并部署，介绍如下。\n\n#### 静态合并部署\n在实际开发过程中，经常会出现多个团队合作开发同一款产品，他们各自负责不同的功能模块，这些功能模块通常可以独立开发，但是运行时需要作为一个整体的应用运行。在这种情况下，所有团队需要协商统一技术栈及各自的二方包版本，这无疑增加了开发和联调的成本。为了让开发人员专注自身功能业务的开发，理想情况下开发人员希望能像开发独立应用一样，仅定义好对外交互接口，而不用考虑和其他功能模块出现的版本冲突、技术栈不统一等问题。正是基于这种场景，SOFAArk 提供了静态合并部署能力，应用可以依赖其他应用打成的 Biz 包，而当自身被打成 Ark 包时，可以将其他应用 Biz 包一并打入，启动时，则会根据优先级依次启动各应用。由于每个应用使用独立的 BizClassLoader 加载，因此不需要考虑依赖冲突或者技术栈不统一问题。应用之间则通过 `SofaService/SofaReference` JVM 服务进行交互。\n\n#### 动态合并部署\n动态合并部署区别于静态合并部署最大的一点是，在应用运行时可以通过 API 或者配置中心（Zookeeper）来控制应用的部署和卸载。动态合并部署的设计理念图如下：\n\n![life-arch](resource/life-arch.png)\n\n无论是静态还是动态合并部署都会有宿主应用（master app）的概念, 如果 Ark 包只打包了一个 Biz，则该 Biz 默认成为宿主应用。如果 Ark 包打包了多个 Biz 包，需要配置指定宿主应用。宿主应用不允许被卸载，一般而言，宿主应用会作为流量入口的中台系统，具体的服务实现会放在不同的动态 Biz 中，供宿主应用调用。宿主应用可以使用 SOFAArk 提供的客户端 API 实现动态应用的部署和卸载。除了 API, SOFAArk 提供了 Config Plugin，用于对接配置中心（目前支持 Zookeeper），运行时接受动态配置。Config Plugin 会解析下发的配置，控制动态模块的部署和卸载。\n\n随着近几年 Serverless 技术的兴起，蚂蚁集团在 Serverless 领域进行了持续的建设和探索，基于 SOFAArk 动态合并部署技术打造了比较成熟的 SOFAServerless 技术体系，去深入解决企业的研发和运维效率问题。其核心方式是通过快速热部署、动态服务发布等技术，将应用从代码结构和开发者阵型划分为模块和基座。其中基座为业务模块提供计算环境并屏蔽基础设施，让模块开发者不用感知机器和容量等底层设施而专注于某个功能模块的开发迭代来帮助业务快速向前发展。\n\n在应用架构领域，不可避免的问题是应用随着业务的复杂度不断增加，研发运维的过程中的问题会不断暴露出来。首先我们看一下普通应用研发和运维过程中的流程是什么样的：\n\n![image](https://user-images.githubusercontent.com/101314559/172528801-065a18ee-3ce7-46b9-9b78-3f66f9955c97.png)\n\n如图所示，从需求到设计、开发、线下测试，再到发布线上的研发运维不断反馈、循环迭代的过程。可以简化为开发同学提交代码到代码仓库，在线下做并行的验证测试，测试通过之后在线上发布，发布过程是串行的，只能够有一个发布窗口，这样的过程在应用体量业务还不太复杂的情况下问题，并不是很明显。\n\n但当业务复杂度不断增加，普通应用迭代过程在会出现一些新的问题，如下图：\n\n![image](https://user-images.githubusercontent.com/101314559/172525833-311229f1-c631-4170-a16d-1e6d7550b6bc.png)\n\n1. 管理成本高：需求管理、代码管理、人员管理。\n2. 时间成本高：线上验证与发布互相阻塞。单次启动慢。\n3. 变更风险高：一次变更涉及所有代码。一次变更涉及所有机器。\n\n另外，由于这些问题是因为多个业务与研发任务耦合在某些单点上导致的，研发运维的成本随着业务的复杂度呈现出指数增长的特点：\n\n![image](https://user-images.githubusercontent.com/101314559/172529176-882bd36b-05a6-4450-aa53-24ef64a7e326.png)\n\n通过借助 SOFAArk 框架将应用拆分成基座和模块，同时将应用里的接口按场景维度做分组，使得业务可以按一组接口的粒度进行极速发布运维以及资源按需隔离。\n\n![image](https://user-images.githubusercontent.com/101314559/172529808-e09349c2-ff07-4431-8f5b-a1786cd0cfe5.png)\n\n从这张图里可以看到 Serverless 应用拆分的形态，通过把一个普通的 Java 应用拆出多个模块，进一步对应用进行了拆分：基座和模块，对应的研发人员也划分为基座开发者和模块开发者。\n\n基座负责沉淀通用的逻辑，为模块提供计算和环境，并为模块开发者屏蔽基础设施，让模块开发者不需要关心容量和资源等。各个模块则是独立的代码仓库，可以进行独立的研发运维，这样研发运维粒度就得到了精细化，并且由于基座为模块屏蔽了环境与基础设施，模块开发者可以专注于业务开发从而提高了业务创新效率。SOFAServerless 开源版首个版本计划在 10 月左右透出，届时欢迎大家一起来建设社区 Serverless 技术。\n\n\n\n## 快速开始\n* [基于多 Ark Plugin 解决类冲突](https://github.com/sofastack-guides/sofa-ark-class-isolation)\n* [SpringBoot 应用基于 SOFAArk 的动态热部署](https://github.com/sofastack-guides/sofa-ark-spring-guides.git)\n* [SOFABoot 应用基于 SOFAArk 的动态模块](https://github.com/sofastack-guides/sofa-ark-dynamic-guides)\n* [基于普通的 Maven 应用构建 Ark Plugin](https://github.com/sofastack-guides/sofa-ark-samples/tree/master/sample-ark-plugin)\n \n## 社区\n* [Gitter channel](https://gitter.im/sofa-ark/Lobby) \n* [Issues](https://github.com/sofastack/sofa-ark/issues)\n* [钉钉群]\n<img src="https://user-images.githubusercontent.com/3754074/222353887-fe783ea4-cd49-428e-8a98-c59780a927f6.png" width="300px">\n\n\n## 贡献\n* [代码贡献](./CONTRIBUTING.md) : SOFAArk 开发参与说明书\n\n## 文档\n* [SOFAArk 用户手册(中文)](http://www.sofastack.tech/sofa-boot/docs/sofa-ark-readme) : SOFAArk 用户手册及功能特性详细说明\n* [SOFAArk2.0 升级](https://www.sofastack.tech/projects/sofa-boot/sofa-ark-migration-guide/) : SOFAArk1.0升级到2.0 操作详细说明\n\n\n## 致谢\nSOFAArk 类隔离框架设计实现主要基于 OSGi 规范及蚂蚁金服的 CloudEngine 容器；同时也参考了 Spring Boot 及阿里的 PandoraBoot，感谢以上产品工作者的辛勤付出。\n']
nodercms,轻量级内容管理系统，基于 Node.js + MongoDB 开发，拥有灵活的内容模型以及完善的权限角色机制。,1064,https://github.com/welkinwong/nodercms,master,['# NoderCMS - 轻量级内容管理系统\n\nNoderCMS 使用 Node.js + MongoDB 开发，拥有灵活的内容模型以及完善的权限角色机制。\n\n[官方网站](http://www.nodercms.com) | [帮助中心](http://www.nodercms.com/help) | QQ 群：369888346\n\n## NoderCMS 演示\n\n- 地址：[http://demo.nodercms.com](http://demo.nodercms.com)\n- 后台：[http://demo.nodercms.com/admin](http://demo.nodercms.com/admin)\n- 账号：ghost@nodercms.com\n- 密码：123456\n\n## 安装\n\n```bash\n$ npm install --production\n$ npm start\n```\n\n完成后访问 http://localhost:3000/admin/install 进入安装程序\n\n**环境要求：**\n\n1. [Node.js](https://www.nodejs.org) v4.4.3 及以上\n2. [Mongodb](https://www.mongodb.org) v3.0.6 及以上\n\n## 重新安装\n\n1. 清空数据库\n2. 删除 /install.lock\n3. 访问 http://localhost:3000/admin/install 进入安装程序\n\n### 常见问题\n\n- [使用 Nginx 来反向代理 NoderCMS](http://www.nodercms.com/help/installation/shi-yong-nginx-lai-fan-xiang-dai-li-duo-ge-nodercms)\n- [使用 pm2 来守护 NoderCMS](http://www.nodercms.com/help/installation/shi-yong-pm2-lai-shou-hu-nodercms)\n- [推荐调用使用说明](http://www.nodercms.com/help/themes/features)\n\n## License\n\nNoderCMS is MIT licensed, as found in the LICENSE file.\n']
iris-admin,Web admin  for iris-go framework,634,https://github.com/snowlyg/iris-admin,master,['<h1 align="center">IrisAdmin</h1>\n\n[![Build Status](https://app.travis-ci.com/snowlyg/iris-admin.svg?branch=master)](https://app.travis-ci.com/snowlyg/iris-admin)\n[![LICENSE](https://img.shields.io/github/license/snowlyg/iris-admin)](https://github.com/snowlyg/iris-admin/blob/master/LICENSE)\n[![go doc](https://godoc.org/github.com/snowlyg/iris-admin?status.svg)](https://godoc.org/github.com/snowlyg/iris-admin)\n[![go report](https://goreportcard.com/badge/github.com/snowlyg/iris-admin)](https://goreportcard.com/badge/github.com/snowlyg/iris-admin)\n[![Build Status](https://codecov.io/gh/snowlyg/iris-admin/branch/master/graph/badge.svg)](https://codecov.io/gh/snowlyg/iris-admin)\n\n简体中文 | [English](./README_EN.md)\n\n#### 项目地址\n\n[GITHUB](https://github.com/snowlyg/iris-admin) | [GITEE](https://gitee.com/snowlyg/iris-admin)\n\n> 简单项目仅供学习，欢迎指点！\n\n#### 相关文档\n\n- [IRIS-ADMIN-DOC](https://doc.snowlyg.com)\n- [IRIS V12 中文文档](https://github.com/snowlyg/iris/wiki)\n- [godoc](https://pkg.go.dev/github.com/snowlyg/iris-admin?utm_source=godoc)\n\n[![Gitter](https://badges.gitter.im/iris-go-tenancy/community.svg)](https://gitter.im/iris-go-tenancy/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) [![Join the chat at https://gitter.im/iris-go-tenancy/iris-admin](https://badges.gitter.im/iris-go-tenancy/iris-admin.svg)](https://gitter.im/iris-go-tenancy/iris-admin?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n#### iris 学习记录分享\n\n- [Iris-go 项目登陆 API 构建细节实现过程](https://blog.snowlyg.com/iris-go-api-1/)\n\n- [iris + casbin 从陌生到学会使用的过程](https://blog.snowlyg.com/iris-go-api-2/)\n\n---\n\n#### 简单使用\n\n- 获取依赖包,注意必须带上 `master` 版本\n\n```sh\n go get github.com/snowlyg/iris-admin@master\n```\n\n#### 项目介绍\n\n\n##### 项目由多个插件构成,每个插件有不同的功能\n\n- [viper_server]\n  - 插件配置初始化,并生成本地配置文件\n  - 使用 [github.com/spf13/viper](https://github.com/spf13/viper) 第三方包实现\n  - 需要实现 `func getViperConfig() viper_server.ViperConfig` 方法\n\n```go\npackage cache\n\nimport (\n  "fmt"\n\n  "github.com/fsnotify/fsnotify"\n  "github.com/snowlyg/iris-admin/g"\n  "github.com/snowlyg/iris-admin/server/viper_server"\n  "github.com/spf13/viper"\n)\n\nvar CONFIG Redis\n\ntype Redis struct {\n  DB       int    `mapstructure:"db" json:"db" yaml:"db"`\n  Addr     string `mapstructure:"addr" json:"addr" yaml:"addr"`\n  Password string `mapstructure:"password" json:"password" yaml:"password"`\n  PoolSize int    `mapstructure:"pool-size" json:"poolSize" yaml:"pool-size"`\n}\n\n// getViperConfig get viper config \nfunc getViperConfig() viper_server.ViperConfig {\n  configName := "redis"\n  db := fmt.Sprintf("%d", CONFIG.DB)\n  poolSize := fmt.Sprintf("%d", CONFIG.PoolSize)\n  return viper_server.ViperConfig{\n    Directory: g.ConfigDir,\n    Name:      configName,\n    Type:      g.ConfigType,\n    Watch: func(vi *viper.Viper) error {\n      if err := vi.Unmarshal(&CONFIG); err != nil {\n        return fmt.Errorf("get Unarshal error: %v", err)\n      }\n      // watch config file change\n      vi.SetConfigName(configName)\n      return nil\n    },\n    //  \n    Default: []byte(`\ndb: ` + db + `\naddr: "` + CONFIG.Addr + `"\npassword: "` + CONFIG.Password + `"\npool-size: ` + poolSize),\n  }\n}\n```\n\n- [zap_server]\n  - 插件日志记录\n  - 使用 [go.uber.org/zap](https://pkg.go.dev/go.uber.org/zap) 第三方包实现\n  - 通过全局变量 `zap_server.ZAPLOG` 记录对应级别的日志\n\n```go\n  zap_server.ZAPLOG.Info("注册数据表错误", zap.Any("err", err))\n  zap_server.ZAPLOG.Debug("注册数据表错误", zap.Any("err", err))\n  zap_server.ZAPLOG.Error("注册数据表错误", zap.Any("err", err))\n  ...\n```\n\n- [database]\n  - 数据插件 [目前仅支持 mysql]\n  - 使用 [gorm.io/gorm](https://github.com/go-gorm/gorm) 第三方包实现\n  - 通过单列 `database.Instance()` 操作数据\n\n```go\n  database.Instance().Model(&User{}).Where("name = ?","name").Find(&user)\n  ...\n```\n\n- [casbin]\n  - 权限控制管理插件\n  - 使用 [casbin](github.com/casbin/casbin/v2 ) 第三方包实现\n  - 并通过 `casbin.Instance()` 使用中间件,实现接口权限认证\n\n```go\n\t_, err := casbin.Instance().AddRoleForUser("1", "999") \n\tuids, err := casbin.Instance().GetRolesForUser("1") \n\t_, err := casbin.Instance().RemoveFilteredPolicy(v, p...) \n  ...\n```\n\n- [cache]\n  - 缓存驱动插件\n  - 使用 [github.com/go-redis/redis](https://github.com/go-redis/redis) 第三方包实现\n  - 通过单列 `cache.Instance()` 操作数据\n\n```go\n  \terr := cache.Instance().Set(context.Background(), "key", "value", expiration).Err()\n    cache.Instance().Del(context.Background(), "key").Result()\n    cache.Instance().Get(context.Background(), "key")\n  ...\n```\n\n- [operation]\n  - 系统操作日志插件\n  - 并通过 `index.Use(operation.OperationRecord())` 使用中间件,实现接口自动生成操作日志\n\n\n- [cron_server]\n  - 任务插件\n  - 使用 [robfig/cron](https://github.com/robfig/cron) 第三方包实现\n  - 通过单列 `cron_server.CronInstance()` 操作数据\n\n```go\n  cron_server.CronInstance().AddJob("@every 1m",YourJob)\n  // 或者 \n  cron_server.CronInstance().AddFunc("@every 1m",YourFunc)\n  ...\n```\n\n- [web]\n  - web_iris [Go-Iris](https://github.com/kataras/iris) web 框架插件\n  - web_gin [Go-gin web](https://github.com/gin-gonic/gin) web 框架插件\n  - web 框架插件需要实现 `type WebFunc interface {}`  接口\n\n```go\ntype WebBaseFunc interface {\n  AddWebStatic(staticAbsPath, webPrefix string, paths ...string)\n  AddUploadStatic(staticAbsPath, webPrefix string)\n  InitRouter() error\n  Run()\n}\n\n// WebFunc 框架插件接口\n// - GetTestClient 测试客户端\n// - GetTestLogin 测试登录\n// - AddWebStatic 添加静态页面\n// - AddUploadStatic 上传文件路径\n// - Run 启动\ntype WebFunc interface {\n  WebBaseFunc\n}\n```\n  \n- [mongodb]\n  - mongodb\n  - 使用 [mongodb](https://www.mongodb.com/) 第三方包实现.\n\n---\n\n#### 数据初始化\n\n##### 简单初始化\n\n- 使用原生方法 `AutoMigrate()` 自动迁移初始化数据表\n\n```go\npackage main\n\nimport (\n  "github.com/snowlyg/iris-admin/server/web"\n  "github.com/snowlyg/iris-admin/server/web/web_iris"\n  "github.com/snowlyg/iris-admin-rbac/iris/perm"\n  "github.com/snowlyg/iris-admin-rbac/iris/role"\n  "github.com/snowlyg/iris-admin/server/database"\n  "github.com/snowlyg/iris-admin/server/operation"\n)\n\nfunc main() {\n    database.Instance().AutoMigrate(&perm.Permission{},&role.Role{},&user.User{},&operation.Oplog{})\n}\n```\n\n##### 自定义迁移工具初始化\n\n- 使用 `gormigrate` 第三方依赖包实现数据的迁移控制，方便后续的升级和开发\n- 使用方法详情见 [iris-admin-cmd](https://github.com/snowlyg/iris-admin-example/blob/main/iris/cmd/main.go)\n\n---\n\n- 添加 main.go 文件\n\n```go\npackage main\n\nimport (\n  "github.com/snowlyg/iris-admin/server/web"\n  "github.com/snowlyg/iris-admin/server/web/web_iris"\n)\n\nfunc main() {\n  wi := web_iris.Init()\n  web.Start(wi)\n}\n```\n\n#### 启动项目\n\n- 第一次启动项目后,配置文件会自动生成到 `config` 目录下.\n- 同时会生成一个 `rbac_model.conf` 文件到项目根目录,该文件用于 casbin 权鉴的规则.\n\n```sh\ngo run main.go\n```\n\n#### 添加模块\n\n- 如果需要权鉴管理，可以使用 [iris-admin-rbac](https://github.com/snowlyg/iris-admin-rbac) 项目快速集成权鉴功能\n- 可以使用 AddModule() 增加其他 admin模块\n\n```go\npackage main\n\nimport (\n  rbac "github.com/snowlyg/iris-admin-rbac/iris"\n  "github.com/snowlyg/iris-admin/server/web"\n  "github.com/snowlyg/iris-admin/server/web/web_iris"\n)\n\nfunc main() {\n  wi := web_iris.Init()\n  rbacParty := web_iris.Party{\n    Perfix:    "/api/v1",\n    PartyFunc: rbac.Party(),\n  }\n  wi.AddModule(rbacParty)\n  web.Start(web_iris.Init())\n}\n```\n\n#### 设置静态文件路径\n\n- 已经默认内置了一个静态文件访问路径\n- 静态文件将会上传到 `/static/upload` 目录\n- 可以修改配置项 `static-path` 修改默认目录\n\n-\n\n```yaml\nsystem:\n  addr: "127.0.0.1:8085"\n  db-type: ""\n  level: debug\n  static-prefix: /upload\n  time-format: "2006-01-02 15:04:05"\n  web-prefix: /admin\n  web-path: ./dist\n```\n\n#### 配合前端使用\n\n- 编译前端页面默认 `dist` 目录\n- 可以修改配置项 `web-path` 修改默认目录\n\n-\n\n```go\npackage main\n\nimport (\n  "github.com/kataras/iris/v12"\n  "github.com/snowlyg/iris-admin/server/web"\n)\n\nfunc main() {\n  webServer := web_iris.Init()\n  wi.AddUploadStatic("/upload", "/var/static")\n  wi.AddWebStatic("/", "/var/static")\n  webServer.Run()\n}\n```\n\n- 前端页面参考/借用：【前端只简单实现预览效果】\n- [gin-vue-admin](https://github.com/flipped-aurora/gin-vue-admin/tree/master/web)\n- [vue-element-admin](https://github.com/PanJiaChen/vue-element-admin)\n\n#### 简单用例\n\n- [iris](https://github.com/snowlyg/iris-admin-example/tree/main/iris)\n- [gin](https://github.com/snowlyg/iris-admin-example/tree/main/gin)\n\n#### RBAC\n\n- [iris-admin-rbac](https://github.com/snowlyg/iris-admin-rbac)\n\n#### 接口单元测试和接口文档\n\n- 测试前,需要设置 `mysqlPwd`, `mysqlAddr` 系统环境变量，运行测试实例的时候将会使用到它们。\n- 测试使用依赖库 [helper/tests](https://github.com/snowlyg/helper/tree/main/tests) 是基于 [httpexpect/v2](https://github.com/gavv/httpexpect) 的简单封装\n- [接口单元测试例子](https://github.com/snowlyg/iris-admin-rbac/tree/main/iris/perm/tests)\n- [接口单元测试例子](https://github.com/snowlyg/iris-admin-rbac/tree/main/gin/authority/test)\n\n接口单元测试需要新建 `main_test.go` 文件,该文件定义了单元测试的一些通用基础步骤：\n***建议采用docker部署mysql,否则测试错误失败后会有大量测试数据遗留***\n- 1.测试数据库的数据库的创建和摧毁\n- 2.数据表的新建和表数据的填充\n- 3. `PartyFunc` , `SeedFunc` 方法需要根据对应的测试模块自定义\n内容如下所示:\n\n***main_test.go***\n\n```go\npackage test\n\nimport (\n  "os"\n  "testing"\n\n  "github.com/snowlyg/httptest"\n  rbac "github.com/snowlyg/iris-admin-rbac/gin"\n  "github.com/snowlyg/iris-admin/server/web/common"\n  "github.com/snowlyg/iris-admin/server/web/web_gin"\n)\n\nvar TestServer *web_gin.WebServer\nvar TestClient *httptest.Client\n\nfunc TestMain(m *testing.M) {\n\n  var uuid string\n  uuid, TestServer = common.BeforeTestMainGin(rbac.PartyFunc, rbac.SeedFunc)\n  code := m.Run()\n  common.AfterTestMain(uuid, true)\n\n  os.Exit(code)\n}\n\n```\n\n***index_test.go***\n\n```go\npackage test\n\nimport (\n  "fmt"\n  "net/http"\n  "path/filepath"\n  "testing"\n\n  "github.com/snowlyg/helper/str"\n  "github.com/snowlyg/httptest"\n  rbac "github.com/snowlyg/iris-admin-rbac/gin"\n  "github.com/snowlyg/iris-admin/g"\n  "github.com/snowlyg/iris-admin/server/web"\n  "github.com/snowlyg/iris-admin/server/web/web_gin/response"\n)\n\nvar (\n  url = "/api/v1/admin"\n)\n\nfunc TestList(t *testing.T) {\n  TestClient = httptest.Instance(t, str.Join("http://", web.CONFIG.System.Addr), TestServer.GetEngine())\n  TestClient.Login(rbac.LoginUrl, nil)\n  if TestClient == nil {\n    return\n  }\n  pageKeys := httptest.Responses{\n    {Key: "status", Value: http.StatusOK},\n    {Key: "message", Value: response.ResponseOkMessage},\n    {Key: "data", Value: httptest.Responses{\n      {Key: "pageSize", Value: 10},\n      {Key: "page", Value: 1},\n      {Key: "list", Value: []httptest.Responses{\n        {\n          {Key: "id", Value: 1, Type: "ge"},\n          {Key: "nickName", Value: "超级管理员"},\n          {Key: "username", Value: "admin"},\n          {Key: "headerImg", Value: "http://xxxx/head.png"},\n          {Key: "status", Value: g.StatusTrue},\n          {Key: "isShow", Value: g.StatusFalse},\n          {Key: "phone", Value: "13800138000"},\n          {Key: "email", Value: "admin@admin.com"},\n          {Key: "authorities", Value: []string{"超级管理员"}},\n          {Key: "updatedAt", Value: "", Type: "notempty"},\n          {Key: "createdAt", Value: "", Type: "notempty"},\n        },\n      }},\n      {Key: "total", Value: 0, Type: "ge"},\n    }},\n  }\n  TestClient.GET(fmt.Sprintf("%s/getAll", url), pageKeys, httptest.RequestParams)\n}\n\nfunc TestCreate(t *testing.T) {\n  TestClient = httptest.Instance(t, str.Join("http://", web.CONFIG.System.Addr), TestServer.GetEngine())\n  TestClient.Login(rbac.LoginUrl, nil)\n  if TestClient == nil {\n    return\n  }\n\n  data := map[string]interface{}{\n    "nickName":     "测试名称",\n    "username":     "create_test_username",\n    "authorityIds": []uint{web.AdminAuthorityId},\n    "email":        "get@admin.com",\n    "phone":        "13800138001",\n    "password":     "123456",\n  }\n  id := Create(TestClient, data)\n  if id == 0 {\n    t.Fatalf("测试添加用户失败 id=%d", id)\n  }\n  defer Delete(TestClient, id)\n}\n\nfunc TestUpdate(t *testing.T) {\n\n  TestClient = httptest.Instance(t, str.Join("http://", web.CONFIG.System.Addr), TestServer.GetEngine())\n  TestClient.Login(rbac.LoginUrl, nil)\n  if TestClient == nil {\n    return\n  }\n  data := map[string]interface{}{\n    "nickName":     "测试名称",\n    "username":     "create_test_username_for_update",\n    "authorityIds": []uint{web.AdminAuthorityId},\n    "email":        "get@admin.com",\n    "phone":        "13800138001",\n    "password":     "123456",\n  }\n  id := Create(TestClient, data)\n  if id == 0 {\n    t.Fatalf("测试添加用户失败 id=%d", id)\n  }\n  defer Delete(TestClient, id)\n\n  update := map[string]interface{}{\n    "nickName": "测试名称",\n    "email":    "get@admin.com",\n    "phone":    "13800138003",\n    "password": "123456",\n  }\n\n  pageKeys := httptest.Responses{\n    {Key: "status", Value: http.StatusOK},\n    {Key: "message", Value: response.ResponseOkMessage},\n  }\n  TestClient.PUT(fmt.Sprintf("%s/updateAdmin/%d", url, id), pageKeys, update)\n}\n\nfunc TestGetById(t *testing.T) {\n  TestClient = httptest.Instance(t, str.Join("http://", web.CONFIG.System.Addr), TestServer.GetEngine())\n  TestClient.Login(rbac.LoginUrl, nil)\n  if TestClient == nil {\n    return\n  }\n  data := map[string]interface{}{\n    "nickName":     "测试名称",\n    "username":     "create_test_username_for_get",\n    "email":        "get@admin.com",\n    "phone":        "13800138001",\n    "authorityIds": []uint{web.AdminAuthorityId},\n    "password":     "123456",\n  }\n  id := Create(TestClient, data)\n  if id == 0 {\n    t.Fatalf("测试添加用户失败 id=%d", id)\n  }\n  defer Delete(TestClient, id)\n  pageKeys := httptest.Responses{\n    {Key: "status", Value: http.StatusOK},\n    {Key: "message", Value: response.ResponseOkMessage},\n    {Key: "data", Value: httptest.Responses{\n      {Key: "id", Value: 1, Type: "ge"},\n      {Key: "nickName", Value: data["nickName"].(string)},\n      {Key: "username", Value: data["username"].(string)},\n      {Key: "status", Value: g.StatusTrue},\n      {Key: "email", Value: data["email"].(string)},\n      {Key: "phone", Value: data["phone"].(string)},\n      {Key: "isShow", Value: g.StatusTrue},\n      {Key: "headerImg", Value: "http://xxxx/head.png"},\n      {Key: "updatedAt", Value: "", Type: "notempty"},\n      {Key: "createdAt", Value: "", Type: "notempty"},\n      {Key: "createdAt", Value: "", Type: "notempty"},\n      {Key: "authorities", Value: []string{"超级管理员"}},\n    },\n    },\n  }\n  TestClient.GET(fmt.Sprintf("%s/getAdmin/%d", url, id), pageKeys)\n}\n\nfunc TestChangeAvatar(t *testing.T) {\n  TestClient = httptest.Instance(t, str.Join("http://", web.CONFIG.System.Addr), TestServer.GetEngine())\n  TestClient.Login(rbac.LoginUrl, nil)\n  if TestClient == nil {\n    return\n  }\n  data := map[string]interface{}{\n    "headerImg": "/avatar.png",\n  }\n  pageKeys := httptest.Responses{\n    {Key: "status", Value: http.StatusOK},\n    {Key: "message", Value: response.ResponseOkMessage},\n  }\n  TestClient.POST(fmt.Sprintf("%s/changeAvatar", url), pageKeys, data)\n\n  profile := httptest.Responses{\n    {Key: "status", Value: http.StatusOK},\n    {Key: "message", Value: response.ResponseOkMessage},\n    {Key: "data", Value: httptest.Responses{\n      {Key: "id", Value: 1, Type: "ge"},\n      {Key: "nickName", Value: "超级管理员"},\n      {Key: "username", Value: "admin"},\n      {Key: "headerImg", Value: filepath.ToSlash(web.ToStaticUrl("/avatar.png"))},\n      {Key: "status", Value: g.StatusTrue},\n      {Key: "isShow", Value: g.StatusFalse},\n      {Key: "phone", Value: "13800138000"},\n      {Key: "email", Value: "admin@admin.com"},\n      {Key: "authorities", Value: []string{"超级管理员"}},\n      {Key: "updatedAt", Value: "", Type: "notempty"},\n      {Key: "createdAt", Value: "", Type: "notempty"},\n    },\n    },\n  }\n  TestClient.GET(fmt.Sprintf("%s/profile", url), profile)\n}\n\nfunc Create(TestClient *httptest.Client, data map[string]interface{}) uint {\n  pageKeys := httptest.Responses{\n    {Key: "status", Value: http.StatusOK},\n    {Key: "message", Value: response.ResponseOkMessage},\n    {Key: "data", Value: httptest.Responses{\n      {Key: "id", Value: 1, Type: "ge"},\n    },\n    },\n  }\n  return TestClient.POST(fmt.Sprintf("%s/createAdmin", url), pageKeys, data).GetId()\n}\n\nfunc Delete(TestClient *httptest.Client, id uint) {\n  pageKeys := httptest.Responses{\n    {Key: "status", Value: http.StatusOK},\n    {Key: "message", Value: response.ResponseOkMessage},\n  }\n  TestClient.DELETE(fmt.Sprintf("%s/deleteAdmin/%d", url, id), pageKeys)\n}\n\n```\n\n## 🔋 JetBrains 开源证书支持\n\n[JetBrains](https://www.jetbrains.com/?from=iris-admin) 对本项目的支持。\n\n<a href="https://www.jetbrains.com/?from=iris-admin" target="_blank"><img src="https://raw.githubusercontent.com/snowlyg/illustrations/master/jetbrains/jetbrains-variant-4.png" width="230" align="middle"/></a>\n\n#### 打赏\n> 您的打赏将用于支付网站运行，会在项目介绍中特别鸣谢您\n- [为爱发电](https://afdian.net/@snowlyg/plan)\n- [donating](https://paypal.me/snowlyg?country.x=C2&locale.x=zh_XC)\n']
rakkasjs,Bleeding-edge React framework powered by Vite,859,https://github.com/rakkasjs/rakkasjs,main,['packages/rakkasjs/README.md']
MinkSelenium2Driver,Selenium2 (webdriver) driver for Mink framework,503,https://github.com/minkphp/MinkSelenium2Driver,master,['Mink Selenium2 (webdriver) Driver\n=================================\n[![Latest Stable Version](https://poser.pugx.org/behat/mink-selenium2-driver/v/stable.svg)](https://packagist.org/packages/behat/mink-selenium2-driver)\n[![Latest Unstable Version](https://poser.pugx.org/behat/mink-selenium2-driver/v/unstable.svg)](https://packagist.org/packages/behat/mink-selenium2-driver)\n[![Total Downloads](https://poser.pugx.org/behat/mink-selenium2-driver/downloads.svg)](https://packagist.org/packages/behat/mink-selenium2-driver)\n[![CI](https://github.com/minkphp/MinkSelenium2Driver/actions/workflows/tests.yml/badge.svg)](https://github.com/minkphp/MinkSelenium2Driver/actions/workflows/tests.yml)\n[![License](https://poser.pugx.org/behat/mink-selenium2-driver/license.svg)](https://packagist.org/packages/behat/mink-selenium2-driver)\n[![codecov](https://codecov.io/gh/minkphp/MinkSelenium2Driver/branch/master/graph/badge.svg?token=x2Q2iM3XYz)](https://codecov.io/gh/minkphp/MinkSelenium2Driver)\n\nUsage Example\n-------------\n\n``` php\n<?php\n\nuse Behat\\Mink\\Mink,\n    Behat\\Mink\\Session,\n    Behat\\Mink\\Driver\\Selenium2Driver;\n\nuse Selenium\\Client as SeleniumClient;\n\n$browser = \'firefox\';\n$url = \'http://example.com\';\n\n$mink = new Mink(array(\n    \'selenium2\' => new Session(new Selenium2Driver($browser, null, $url)),\n));\n\n$mink->getSession(\'selenium2\')->getPage()->findLink(\'Chat\')->click();\n```\n\nPlease refer to [MinkExtension-example](https://github.com/Behat/MinkExtension-example) for an executable example.\n\nInstallation\n------------\n\n``` json\n{\n    "require": {\n        "behat/mink":                   "~1.5",\n        "behat/mink-selenium2-driver":  "~1.1"\n    }\n}\n```\n\n``` bash\n$> curl -sS https://getcomposer.org/installer | php\n$> php composer.phar install\n```\n\nTesting\n------------\n\n1. Start WebDriver\n    1. If you have Docker installed, run\n    ```bash\n    docker run -p 4444:4444 selenium/standalone-firefox:2.53.1\n    ```\n    2. If you do not have Docker, but you have Java\n    ```bash\n    curl -L https://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar > selenium-server-standalone-2.53.1.jar\n    java -jar selenium-server-standalone-2.53.1.jar\n    ```\n2. Start WebServer by running\n    ``` bash\n    ./vendor/bin/mink-test-server\n    ```\n3. Start PhpUnit\n    ```bash\n    composer require --dev phpunit/phpunit\n    ./vendor/bin/phpunit -v --coverage-clover=coverage.clover\n    ```\n\nCopyright\n---------\n\nCopyright (c) 2012 Pete Otaqui <pete@otaqui.com>.\n\nMaintainers\n-----------\n\n* Christophe Coevoet [stof](https://github.com/stof)\n* Pete Otaqui [pete-otaqui](https://github.com/pete-otaqui)\n* Alexander Obuhovich [aik099](https://github.com/aik099)\n']
ysomap,A helpful Java Deserialization exploit framework.,863,https://github.com/wh1t3p1g/ysomap,master,['\n# YSOMAP \n![Platforms](https://img.shields.io/badge/Platforms-OSX-green.svg)\n![Java version](https://img.shields.io/badge/Java-8-blue.svg)\n![License](https://img.shields.io/badge/License-apache%202-green.svg)\n\nYsomap is A helpful Java Deserialization exploit framework.\n\nYsomap是一款适配于各类实际复杂环境的Java反序列化利用框架，可动态配置具备不同执行效果的Java反序列化利用链payload。\n\n随着利用链的补充，ysomap同样可作为一款Java反序列化利用链教学库。目前，ysomap支持Java原生反序列化利用链、fastjson利用链、hessian利用链、xmldecoder、xstream等等。\n\n另外，ysomap具备exploit模块，用于充分调动反序列化利用链。目前，ysomap已支持RMI、JNDI、JMX、shiro、xmlrpc等exploits。\n\n## #1 如何使用\n\n在谈如何使用ysomap之前，假设使用者有一定的Java反序列化利用的前置知识，以及一些常见利用的原理，如rmi、ldap等。\n\n### Jar编译\n\n由于XStream的几个payload依赖JDK8的环境，所以后续的使用均在JDK8的环境下编译并运行\n\n```bash\nmvn clean package -DskipTests\n```\n\n正常编译不出错，可在`cli/target`目录找到ysomap.jar\n\n当然，你也可以直接下载[release](https://github.com/wh1t3p1g/ysomap/releases)，但还是推荐自行clone后编译，因为大版本的更新将积攒一批利用链后才会发布release。\n\n### Jar运行\n\n经过几次迭代，目前ysomap支持两种运行模式：终端cli模式和脚本模式\n\n终端模式\n```bash\njava -jar ysomap.jar cli\n```\n脚本模式\n```bash\njava -jar ysomap.jar script path/to/script.yso\n```\n终端模式更易于选择和配置exploit、payload、bullet，但对于重复性的配置，终端模式显的格外繁琐。所以后续又增加了脚本模式。通过编写特定配置的yso脚本，使用ysomap进行载入调用。脚本模式在正确配置的前提下将极大的节省使用者输入重复配置的工作量，提高使用效率。同时，yso脚本也可以被分享给其他使用者进行快捷使用。\n\n### 基础使用方法\n\n参见[YSOMAP食用指北](https://github.com/wh1t3p1g/ysomap/wiki/YSOMAP%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8C%97)\n\n## #2 当前进度\n\n### DONE\n\n- [x] 支持CommonsCollections系列payload\n- [x] 支持执行效果bullet：远程jar载入、命令执行、代码执行、发起jndi效果、tomcat内存马、延时判断、文件写入、socket shell。\n- [x] 支持现有RMI系列攻击包 [原理1](http://blog.0kami.cn/2020/02/06/rmi-registry-security-problem/) [原理2](http://blog.0kami.cn/2020/02/09/jndi-with-rmi/) [原理3](https://mogwailabs.de/blog/2020/02/an-trinhs-rmi-registry-bypass/)\n- [x] 支持现有LDAP系列攻击包 [原理](http://blog.0kami.cn/2020/03/01/jndi-with-ldap/)\n- [x] 支持HTTP服务动态挂载恶意的class文件或jar文件\n- [x] 支持URLDNS\n- [x] 支持现有JMX系列攻击包 [原理](http://blog.0kami.cn/2020/03/10/java-jmx-rmi/)\n- [x] 支持fastjson JdbcRowSetImpl、TemplatesImpl gadget [原理](http://blog.0kami.cn/2020/04/13/talk-about-fastjson-deserialization/)\n- [x] 支持现有XStream系列payload包 [原理](http://blog.0kami.cn/2020/04/18/talk-about-xstream-deserialization/)\n- [x] 支持weblogic XMLDecoder payloads\n\n### TODO\n\n- [ ] 支持weblogic系列攻击包\n- [ ] 支持websphere系列攻击包\n\n## #3 由来\n\n在实际分析ysoserial的利用链时，有时候会觉得框架写的太死，有以下几个缺点：\n\n1. 同一个利用链如果想改变一下最后的利用效果，如命令执行改成代码执行，我们需要改写这个利用链或者是重新增加一个利用链。这时，我们其实可以看到利用链的前半部分是不变的，变的只是后续的利用效果。\n2. ysoserial仅实现了常规的序列化利用链，对于类似JSON格式的序列化利用链，以当前的这个框架扩展起来会比较麻烦\n\n所以萌生了开发一个更加灵活的框架来扩展反序列化利用链，也就是当前这个试验品ysomap。\n\nPS：YSOMAP项目为另一个项目的子项目，后续将开源该项目，敬请期待......\n\n## #4 原理\n\n我将利用链切分成了两个部分**payload**和**bullet**：\n\n1. payload：指代利用链的前序部分\n2. bullet：指代最终利用链可达成的效果\n\n#### 实际案例分析\n\nCommonsCollection1和3，在分析时我们可以看到实际1和3的区别在于1使用的是`InvokerTransformer`，而3使用的是`templatesImpl`的方式。那么提取相同的前序payload部分，我们只需写两个不同的bullet即可。而且这两个bullet也同样能被用在其他的payload上。\n\n实际还有就是我在写RMIRegistryExploit时，也有这种可将不变部分重用的地方，而无需2,3之类的出现。\n\n\n## #5 免责申明\n\n未经授权许可使用YSOMAP攻击目标是非法的。 本程序应仅用于授权的安全测试与研究目的。\n\n## #6 致谢\n\n@ysoserial: https://github.com/frohoff/ysoserial\n@marshalsec: https://github.com/mbechler/marshalsec\n\n## #7 404星链计划\n\n<img src="https://github.com/knownsec/404StarLink-Project/raw/master/logo.png" width="30%">\n\nysomap现已加入 [404星链计划](https://github.com/knownsec/404StarLink)']
AndroidNote,🔥 Android 进阶笔记，包含常用的技术框架、博客社区、书籍等。,661,https://github.com/venshine/AndroidNote,master,["Android 进阶笔记\n==\n\n大纲\n--\n> * [技术框架](https://github.com/venshine/AndroidNote#第一部分技术框架)\n>   * [图片加载](https://github.com/venshine/AndroidNote#图片加载)\n>   * [网络请求](https://github.com/venshine/AndroidNote#网络请求)\n>   * [数据库ORM](https://github.com/venshine/AndroidNote#数据库orm)\n>   * [Json解析](https://github.com/venshine/AndroidNote#json解析)\n>   * [常用工具](https://github.com/venshine/AndroidNote#常用工具)\n>   * [依赖注入](https://github.com/venshine/AndroidNote#依赖注入)\n>   * [快速开发](https://github.com/venshine/AndroidNote#快速开发)\n>   * [动态加载](https://github.com/venshine/AndroidNote#动态加载)\n>   * [热修复](https://github.com/venshine/AndroidNote#热修复)\n>   * [事件总线](https://github.com/venshine/AndroidNote#事件总线)\n>   * [性能工具](https://github.com/venshine/AndroidNote#性能工具)\n>   * [图表](https://github.com/venshine/AndroidNote#图表)\n>   * [响应式编程](https://github.com/venshine/AndroidNote#响应式编程)\n>   * [日志框架](https://github.com/venshine/AndroidNote#日志框架)\n> * [博客社区](https://github.com/venshine/AndroidNote#第二部分博客社区)\n>   * [个人博客](https://github.com/venshine/AndroidNote#个人博客)\n>   * [团队博客](https://github.com/venshine/AndroidNote#团队博客)\n>   * [技术社区](https://github.com/venshine/AndroidNote#技术社区)\n>   * [技术周报](https://github.com/venshine/AndroidNote#技术周报)\n> * [技术书籍](https://github.com/venshine/AndroidNote#第三部分技术书籍)\n>   * [计算机基础](https://github.com/venshine/AndroidNote#计算机基础)\n>   * [操作系统](https://github.com/venshine/AndroidNote#操作系统)\n>   * [体系结构](https://github.com/venshine/AndroidNote#体系结构)\n>   * [计算机网络](https://github.com/venshine/AndroidNote#计算机网络)\n>   * [数据库](https://github.com/venshine/AndroidNote#数据库)\n>   * [编译原理](https://github.com/venshine/AndroidNote#编译原理)\n>   * [数据结构&算法](https://github.com/venshine/AndroidNote#数据结构算法)\n>   * [设计模式](https://github.com/venshine/AndroidNote#设计模式)\n>   * [软件工程](https://github.com/venshine/AndroidNote#软件工程)\n>   * [数字图像处理](https://github.com/venshine/AndroidNote#数字图像处理)\n>   * [计算机图形学](https://github.com/venshine/AndroidNote#计算机图形学)\n>   * [Linux](https://github.com/venshine/AndroidNote#linux)\n>   * [Android](https://github.com/venshine/AndroidNote#android)\n\n\n第一部分&nbsp;&nbsp;&nbsp;&nbsp;技术框架\n--\n### 图片加载\n* [Glide](https://github.com/bumptech/glide)\n* [Fresco](http://fresco-cn.org/)\n* [Volley](https://android.googlesource.com/platform/frameworks/volley)\n* [Picasso](http://square.github.io/picasso/)\n* [Universal Image Loader](https://github.com/nostra13/Android-Universal-Image-Loader)\n\n### 网络请求\n* [okhttp](http://square.github.io/okhttp/)\n* [retrofit](http://square.github.io/retrofit/)\n* [Volley](http://developer.android.com/intl/zh-cn/training/volley/index.html)\n* [android-async-http](http://loopj.com/android-async-http/)\n\n### 数据库ORM\n* [OrmLite](http://ormlite.com/)\n* [greenDAO](http://greenrobot.org/greendao/)\n* [sugar](http://satyan.github.io/sugar/)\n* [realm](https://github.com/realm/realm-java)\n* [sqlbrite](https://github.com/square/sqlbrite)\n\n### Json解析\n* [gson](https://github.com/google/gson)\n* [fastjson](https://github.com/alibaba/fastjson)\n* [jackson](https://github.com/FasterXML/jackson)\n\n### 常用工具\n* [AndroidCommon](https://github.com/venshine/AndroidCommon)\n* [android-common](https://github.com/Trinea/android-common)\n* [android-common](https://github.com/litesuits/android-common)\n\n### 依赖注入\n* [Dagger 2](http://google.github.io/dagger/)\n* [Butter Knife](http://jakewharton.github.io/butterknife/)\n* [RoboGuice](https://github.com/roboguice/roboguice)\n* [AndroidAnnotations](http://androidannotations.org/)\n\n### 快速开发\n* [afinal](https://github.com/yangfuhai/afinal)\n* [xUtils3](https://github.com/wyouflf/xUtils3)\n* [ThinkAndroid](https://github.com/white-cat/ThinkAndroid)\n* [LoonAndroid3](https://github.com/gdpancheng/LoonAndroid3)\n* [KJFrameForAndroid](https://github.com/kymjs/KJFrameForAndroid)\n\n### 动态加载\n* [dynamic-load-apk](https://github.com/singwhatiwanna/dynamic-load-apk)\n* [DynamicAPK](https://github.com/CtripMobile/DynamicAPK)\n* [DroidPlugin](https://github.com/Qihoo360/DroidPlugin)\n* [AndroidDynamicLoader](https://github.com/mmin18/AndroidDynamicLoader)\n* [android-pluginmgr](https://github.com/houkx/android-pluginmgr)\n* [DroidPlugin](https://github.com/DroidPluginTeam/DroidPlugin)\n* [ACDD](https://github.com/bunnyblue/ACDD)\n\n### 热修复\n* [AndFix](https://github.com/alibaba/AndFix)\n* [Xposed](https://github.com/rovo89/Xposed)\n* [dexposed](https://github.com/alibaba/dexposed)\n* [HotFix](https://github.com/dodola/HotFix)\n* [Nuwa](https://github.com/jasonross/Nuwa)\n* [DroidFix](https://github.com/bunnyblue/DroidFix)\n* [RocooFix](https://github.com/dodola/RocooFix)\n* [Legend](https://github.com/asLody/legend)\n* [Tinker](https://github.com/Tencent/tinker)\n* [Robust](https://github.com/Meituan-Dianping/Robust)\n\n### 事件总线\n* [EventBus](http://greenrobot.org/eventbus/)\n* [Otto](http://square.github.io/otto/)\n \n### 性能工具\n* [LeakCanary](https://github.com/square/leakcanary)\n* [ACRA](https://github.com/ACRA/acra)\n \n### 图表\n* [MPAndroidChart](https://github.com/PhilJay/MPAndroidChart)\n* [WilliamChart](https://github.com/diogobernardino/WilliamChart)\n* [HelloCharts](https://github.com/lecho/hellocharts-android)\n\n### 响应式编程\n* [RxJava](https://github.com/ReactiveX/RxJava)\n* [RxAndroid](https://github.com/ReactiveX/RxAndroid)\n* [Agera](https://github.com/google/agera)\n* [RxBinding](https://github.com/JakeWharton/RxBinding)\n\n### 日志框架\n* [Logger](https://github.com/orhanobut/logger)\n* [Timber](https://github.com/JakeWharton/timber)\n\n第二部分&nbsp;&nbsp;&nbsp;&nbsp;博客社区\n--\n### 个人博客\n* [老罗的Android之旅](http://blog.csdn.net/luoshengyang)\n* [泡在网上的日子](http://www.jcodecraeer.com/)\n* [Trinea](http://www.trinea.cn/)\n* [郭霖](http://blog.csdn.net/guolin_blog)\n* [夏安明](http://blog.csdn.net/xiaanming)\n* [鸿阳](http://blog.csdn.net/lmj623565791)\n* [任玉刚](http://blog.csdn.net/singwhatiwanna)\n* [云在千峰](http://blog.chengyunfeng.com/)\n* [胡凯](http://hukai.me/)\n* [stormzhang](http://stormzhang.com/)\n* [马天宇](https://github.com/litesuits)\n* [江清清的技术专栏](http://www.lcode.org/)\n* [阮一峰的网络日志](http://www.ruanyifeng.com/blog/)\n* [张涛-开源实验室](http://blog.kymjs.com/)\n* [谢权SELF](https://xiequan.info/)\n* [Mr.Simple](http://blog.csdn.net/bboyfeiyu)\n* [技术小黑屋](http://droidyue.com/)\n* [Drakeet的个人博客](https://drakeet.me/)\n* [eclipse_xu](http://blog.csdn.net/eclipsexys)\n* [子墨博客](http://blog.csdn.net/ElinaVampire)\n* [巫山老妖](http://blog.csdn.net/wwj_748)\n* [AigeStudio](http://blog.csdn.net/aigestudio)\n* [雨松MOMO程序研究院](http://www.xuanyusong.com/)\n* [包建强](http://blog.csdn.net/jspandasp)\n* [邓凡平](http://blog.csdn.net/innost)\n* [hujiaweibujidao](http://hujiaweibujidao.github.io/)\n* [何红辉](http://blog.csdn.net/bboyfeiyu)\n* [Piasy](http://blog.piasy.com/)\n* [元斌](http://blog.csdn.net/qibin0506)\n* [赵四](http://blog.csdn.net/jiangwei0910410003)\n* [weishu](http://weishu.me/)\n* [严振杰](http://blog.csdn.net/yanzhenjie1003)\n* [切问录](http://www.fuzihao.org/blog/)\n* [猴子搬来的救兵](http://blog.csdn.net/mynameishuangshuai)\n* [markzhai](http://blog.zhaiyifan.cn/)\n* [兰亭风雨](http://blog.csdn.net/ns_code)\n* [谦虚的天下](http://www.cnblogs.com/qianxudetianxia/)\n* [工匠若水](http://blog.csdn.net/yanbober)\n* [diygreen](http://www.jianshu.com/u/0ad0a0afc409)\n* [VERYYOUNG](http://veryyoung.me/)\n* [左飞](http://blog.csdn.net/baimafujinji)\n* [Frodo](http://frodoking.github.io/)\n* [青峰](http://www.fqxyi.com/)\n* [拉丁吴](http://www.jianshu.com/u/1d8042233f67)\n* [Carson_Ho](http://blog.csdn.net/carson_ho)\n* [Gityuan](http://gityuan.com/)\n* [GcsSloop](http://www.gcssloop.com/)\n* [吴小龙同学](http://wuxiaolong.me/)\n* [设计师吴彦祖](http://liangjingkanji.coding.me/) \n* [frank的专栏](http://blog.csdn.net/briblue)\n* [zjutkz's blog](http://zjutkz.net/)\n* [Gavin Liu](http://gavinliu.cn/)\n* [SpikeKing](https://www.jianshu.com/u/e2b4dd6d3eb4)\n* [田野光的技术小站](https://wangyeming.github.io/)\n* [Coder-Pig](https://blog.csdn.net/coder_pig)\n* [Android Performance](https://www.androidperformance.com)\n* [Gityuan博客](http://gityuan.com/)\n* [欧阳鹏](https://blog.csdn.net/ouyang_peng)\n* [寒江蓑笠](https://www.heqiangfly.com/)\n* [却把清梅嗅](https://juejin.im/user/588555ff1b69e600591e8462)\n* [bugstack虫洞栈](https://bugstack.cn/)\n* [奋飞安全](http://91fans.com.cn/)\n* [一枚码农](https://www.javagame.top/index.html)\n\n### 团队博客\n* [Android官方技术博客](http://android-developers.blogspot.com/)\n* [美团点评技术团队](http://tech.meituan.com/)\n* [腾讯全端 AlloyTeam 团队](http://www.alloyteam.com/)\n* [腾讯大讲堂](http://djt.qq.com/)\n* [奇迹空间技术学习小组](http://blog.qiji.tech/)\n* [Square](https://corner.squareup.com/)\n* [Facebook](https://code.facebook.com/)\n* [腾讯游戏安全实验室](http://gslab.qq.com/)\n* [腾讯Bugly社区](http://bugly.qq.com/bbs/portal.php)\n* [DEV CLUB](http://dev.qq.com/)\n* [腾讯Gad](http://gad.qq.com/program)\n\n### 技术社区\n* [CSDN](http://www.csdn.net/)\n* [博客园](http://www.cnblogs.com/)\n* [ITEYE](http://www.iteye.com/)\n* [51CTO](http://www.51cto.com/)\n* [开源中国](http://www.oschina.net/)\n* [Linux公社](http://www.linuxidc.com/)\n* [EOE](http://www.eoeandroid.com/)\n* [CocoaChina](http://www.cocoachina.com/)\n* [深度开源](http://www.open-open.com/)\n* [伯乐在线](http://blog.jobbole.com/)\n* [ImportNew](http://www.importnew.com/)\n* [稀土掘金](http://gold.xitu.io/)\n* [IMB developerWorks](http://www.ibm.com/developerworks/cn/)\n* [segmentfault](https://segmentfault.com/)\n* [InfoQ](http://www.infoq.com/cn/)\n* [ChinaUnix](http://blog.chinaunix.net/)\n* [ITPUB](http://blog.itpub.net/)\n* [开发者头条](http://toutiao.io/)\n* [Android安全中文站](http://www.droidsec.cn/)\n* [菜鸟教程](http://www.runoob.com/)\n* [V2EX](https://www.v2ex.com/)\n* [FreeBuf](http://www.freebuf.com/)\n* [Google开发者官方频道](http://i.youku.com/i/UMjczOTc0NDkzNg==)\n* [GDG中国社区论坛](http://www.chinagdg.com/)\n* [谷歌中国博客](http://developers.googleblog.cn)\n* [小专栏](https://xiaozhuanlan.com/)\n \n### 技术周报\n* [编程狂人](http://www.tuicool.com/mags/)\n* [Android开发技术周报](http://androidweekly.cn/)\n* [APP开发日报](http://app.memect.com/)\n* [码农周刊](http://weekly.manong.io/issues/)\n* [干货集中营](http://gank.io/history)\n* [平安金融科技移动技术周报](http://www.jianshu.com/notebooks/2983917/latest)\n* [Android博客周刊](http://androidblog.cn/)\n* [Android Weekly](http://androidweekly.net/)\n\n第三部分&nbsp;&nbsp;&nbsp;&nbsp;技术书籍\n--\n\n### 计算机基础\n* [《计算机科学导论》](https://book.douban.com/subject/1142213/)  \n本书是大学计算机相关专业的基础课教材，涉及到计算机科学的各个方面。本书着重讲解基本概念而不是数学模型和技术细节，通过大量的图表和演示范例讲解计算机科学的基础知识。\n\n* [《深入理解计算机系统》](https://book.douban.com/subject/5333562/)  \n本书从程序员的视角详细阐述计算机系统的本质概念，并展示这些概念如何实实在在地影响应用程序的正确性、性能和实用性。\n\n### 操作系统\n* [《现代操作系统》](https://book.douban.com/subject/3852290/)  \n本书是操作系统领域的经典之作，书中集中讨论了操作系统的基本原理，包括进程、线程、存储管理、文件系统、输入/输出、死锁等，同时还包含了有关计算机安全、多媒体操作系统、掌上计算机操作系统、微内核、多核处理机上的虚拟机以及操作系统设计等方面的内容。\n\n* [《操作系统：精髓与设计原理》](https://book.douban.com/subject/5064311/)   \n本书不仅全面地讲述了操作系统的基本概念、原理和方法，还清楚地展现了当代操作系统的本质和特点。作者针对近几年操作系统领域的最新变化，对操作系统的设计原理进行深入的阐述，同时将其对操作系统整个领域全面而深入的理解呈现给读者。\n\n### 体系结构\n* [《计算机体系结构：量化研究方法》](https://book.douban.com/subject/20452387/)   \n本书是最权威的计算机体系结构著作，是久负盛名的经典作品。书中系统地介绍了计算机系统的设计基础、指令集系统结构、流水线和指令集并行技术、层次化存储系统与存储设备、互连网络以及多处理器系统等重要内容。\n\n* [《计算机组成与设计：硬件/软件接口》](https://book.douban.com/subject/2110638/)  \n本书是计算机组成的经典教材。全书着眼于当前计算机设计中最基本的概念，展示了软硬件间的关系，并全面介绍当代计算机系统发展的主流技术和最新成就。\n\n* [《计算机组成与体系结构：性能设计》](https://book.douban.com/subject/6398113/)  \n本书是介绍当代计算机体系主流技术和最新技术的优秀教材，以Intel x86和ARM两个处理器系列为例，深入讨论了计算机组成与体系结构的基本原理和概念，并将它们运用到当代计算机系统设计的问题中。\n\n* [《计算机组成与体系结构》](https://book.douban.com/subject/1881545/)  \n本书系统介绍计算机组成与体系结构，主要内容包括：数字逻辑和数字系统、机器层次的数据表示方法、汇编层次的机器组织和结构、存储器的组成和结构、接口和通信、功能组织、多处理器和可供选择的其他结构、性能增强、网络结构和分布式计算机系统等。\n\n* [《计算机组织与体系结构》](https://book.douban.com/subject/1737686/)  \n本书是介绍当代计算机体系主流技术的最新技术的优秀教材。作者以Intel Pentium 4和IBM/Motorola PowerPC作为考察实例，将当代计算机系统性能问题和计算机组织与体系结构的基本概念及原理紧密联系起来。\n\n### 计算机网络\n* [《计算机网络》](https://book.douban.com/subject/10510747/)  \n本书是国内外使用最广泛、最权威的计算机网络经典教材。全书按照网络协议模型自下而上（物理层、数据链路层、介质访问控制层、网络层、传输层和应用层）有系统地介绍了计算机网络的基本原理，并结合Internet给出了大量的协议实例。在讲述网络各层次内容的同时，还与时俱进地引入了最新的网络技术，包括无线网络、3G蜂窝网络、RFID与传感器网络、内容分发与P2P网络、流媒体传输与IP语音，以及延迟容忍网络等。\n\n* [《计算机网络：自顶向下方法》](https://book.douban.com/subject/26176870/)  \n本书首创采用自顶向下的方法讲解计算机网络的原理和协议，出版以来已被几百所大学和学院选用，是业界最经典的计算机网络教材之一。\n\n* [《深入理解计算机网络》](https://book.douban.com/subject/20560942/)  \n本书结合最新计算机网络技术，全面、系统、深入地阐述了计算机网络的体系结构、工作原理，以及各种通信协议实现原理，能满足读者系统和深入地学习和研究计算机网络技术的需求。\n\n* [《TCP/IP详解 卷1：协议》](https://book.douban.com/subject/1088054/)  \n《TCP/IP详解·卷1：协议》是一本完整而详细的TCP/IP协议指南，描述了属于每一层的各个协议以及它们如何在不同操作系统中运行。\n\n* [《TCP/IP详解 卷2：实现》](https://book.douban.com/subject/1087767/)  \n《TCP/IP详解·卷2：实现》完整而详细地介绍了TCP/IP协议是如何实现的。\n\n* [《TCP/IP详解 卷3：TCP事务协议、HTTP、NNTP和UNIX域协议》](https://book.douban.com/subject/1058634/)  \n《TCP/IP详解·卷3：TCP事务协议、HTTP、NNTP和UNIX域协议》是“TCP/IP详解系列”的延续。主要内容包括：TCP事务协议，即T/TCP，这是对TCP的扩展，使客户-服务器事务更快、更高效和更可靠。\n\n* [《TCP/IP协议族》](https://book.douban.com/subject/5386194/)  \n《世界著名计算机教材精选·TCP/IP协议族(第4版)》是介绍TCP/IP协议族的经典图书的最新版本。\n\n* [《HTTP权威指南》](https://book.douban.com/subject/10746113/)  \n本书详细解释了HTTP协议，包括HTTP是如何工作的，如何用HTTP来开发基于Web的应用程序，核心的因特网协议如何与架构构建块交互，如何正确实现因特网客户和服务器等。\n\n### 数据库\n* [《数据库系统概念》](https://book.douban.com/subject/10548379/)  \n本书是数据库领域的殿堂级作品，是夯实数据库理论基础，增强数据库技术内功的必备之选，对深入理解数据库，深入研究数据库，深入操作数据库都具有极强的指导作用。\n\n* [《数据库系统实现》](https://book.douban.com/subject/4838430/)  \n本书是关于数据库系统实现方面内容最为全面的著作之一，是美国斯坦福大学计算机科学专业数据库系列课程第二门课程的指定教材。\n\n* [《高性能MySQL》](https://book.douban.com/subject/23008813/)  \n本书是MySQL 领域的经典之作，拥有广泛的影响力。\n\n* [《MySQL 5 权威指南》](https://book.douban.com/subject/1909003/)  \n本书是MySQL数据库管理员和开发人员的必备参考书。\n\n* [《MongoDB权威指南》](https://book.douban.com/subject/25798102/)  \n本书是一本广受好评的MongoDB权威著作。书中介绍了面向文档的存储方式及利用MongoDB的无模式数据模型处理文档、集合和多个数据库，讲述了如何执行基本的写操作以及各种复杂的条件查询，还介绍了索引、聚合工具以及其他高级查询技术，另外对监控、安全性和身份验证、备份和修复、水平扩展MongoDB数据库等内容也有所涉及。\n\n* [《Redis设计与实现》](https://book.douban.com/subject/25900156/)  \n本书系统而全面地描述了Redis内部运行机制，是NoSQL数据库开发人员案头必备。\n\n* [《NoSQL精粹》](https://book.douban.com/subject/25662138/)  \n《NoSQL精粹》为考虑是否可以使用和如何使用NoSQL数据库的企业提供了可靠的决策依据。书中全方位比较了关系型数据库与NoSQL数据库的异同；分别以Riak、MongoDB、Cassandra和Neo4J为代表，详细讲解了键值数据库、文档数据库、列族数据库和图数据库这4大类NoSQL数据库的优劣势、用法和适用场合；深入探讨了实现NoSQL数据库系统的各种细节，以及与关系型数据库的混用。\n\n### 编译原理\n* [《编译原理》](https://book.douban.com/subject/3296317/)  \n本书是编译领域无可替代的经典著作，被广大计算机专业人士誉为“龙书”。本书全面、深入地探讨了编译器设计方面的重要主题，包括词法分析、语法分析、语法制导定义和语法制导翻译、运行时刻环境、目标代码生成、代码优化技术、并行性检测以及过程间分析技术，并在相关章节中给出大量的实例。\n\n### 数据结构&算法\n* [《数据结构与算法分析：C语言描述》](https://book.douban.com/subject/1139426/)  \n本书是《Data Structures and Algorithm Analysis in C》一书第2版的简体中译本，原书曾被评为20世纪顶尖的30部计算机著作之一。在本书中，作者更加精炼并强化了他对算法和数据结构方面创新的处理方法。通过C程序的实现，着重阐述了抽象数据类型的概念，并对算法的效率、性能和运行时间进行了分析。\n\n* [《数据结构与算法分析：Java语言描述》](https://book.douban.com/subject/3351237/)  \n本书是国外数据结构与算法分析方面的经典教材，使用卓越的Java编程语言作为实现工具讨论了数据结构（组织大量数据的方法）和算法分析（对算法运行时间的估计）。 随着计算机速度的不断增加和功能的日益强大，人们对有效编程和算法分析的要求也不断增长。本书把算法分析与最有效率的Java程序的开发有机地结合起来，深入分析每种算法，内容全面、缜密严格，并细致讲解精心构造程序的方法。\n\n* [《数据结构（C语言版）》](https://book.douban.com/subject/1886174/)  \n《数据结构》(C语言版)针对采用ANSI C实现数据结构进行了全面的描述和深入的讨论。书中详细讨论了栈、队列、链表以及查找结构、高级树结构等功能，对裴波那契堆、伸展树、红黑树、2-3树、2-3-4树、二项堆、最小-最大堆、双端堆等新的数据结构进行了有效分析。\n\n* [《数据结构（C语言版） 严蔚敏》](https://book.douban.com/subject/2024655/)  \n本书是为“数据结构”课程编写的教材，也可作为学习数据结构及其算法的C程序设计的参数教材。\n本书的前半部分从抽象数据类型的角度讨论各种基本类型的数据结构及其应用；后半部分主要讨论查找和排序的各种实现方法及其综合分析比较。\n\n* [《算法导论》](https://book.douban.com/subject/20432061/)  \n本书将严谨性和全面性融为一体，深入讨论各类算法，并着力使这些算法的设计和分析能为各个层次的读者接受。\n\n* [《算法》](https://book.douban.com/subject/19952400/)  \n本书是算法领域经典的参考书，涵盖所有程序员必须掌握的50种算法，全面介绍了关于算法和数据结构的必备知识，并特别针对排序、搜索、图处理和字符串处理进行了论述。\n\n### 设计模式\n* [《设计模式：可复用面向对象软件的基础》](https://book.douban.com/subject/1052241/)  \n本书是引导读者走出软件设计迷宫的指路明灯，凝聚了软件开发界几十年设计经验的结晶。四位顶尖的面向对象领域专家精心选取了具有价值的设计实践，加以分类整理和命名，并用简洁而易于重用的形式表达出来。本书已经成为面向对象技术人员的圣经和词典，书中定义的23个模式逐渐成为开发界技术交流所必备的基础知识和语汇。\n\n* [《Head First 设计模式》](https://book.douban.com/subject/2243615/)  \n《O'Reilly：Head First设计模式（中文版）》趋近完美，因为它在提供专业知识的同时，仍然具有相当高的可读性。\n\n* [《大话设计模式》](https://book.douban.com/subject/2334288/)  \n本书是准备攀登面向对象编程高峰朋友们的引路人和提携者，是学习、体会和领悟了众多大师智慧结晶后的图书作品，是你深入理解和感受GoF的《设计模式》及其它大师作品的必备书籍。本书通篇都是以情景对话的形式，用多个小故事或编程示例来组织讲解GoF总结的23个设计模式。\n\n### 软件工程\n* [《软件工程：实践者的研究方法》](https://book.douban.com/subject/6047742/)  \n《软件工程:实践者的研究方法(原书第7版)》自1982年发行第1版以来，一直受到软件工程界的高度重视，成为高等院校计算机相关专业软件工程课程的重要教学参考书。近30年来，它的各个后继版本一直都是软件专业人土熟悉的读物，在国际软件工程一界享有无可置疑的权威地位。它在全面而系统地介绍软件工程的有关概念、原则、方法和工具方面获得了广大读者的好评。\n\n* [《软件工程》](https://book.douban.com/subject/6109617/)  \n本书是系统介绍软件工程理论的经典教材，自1982年初版以来，随着软件工程学科的发展不断更新版本，影响了一代又一代软件工程人才，对学科的发展建设也产生了积极影响。全书分四部分完整讨论了软件工程的各级段内容，是软件工程和系统工程专业本科和研究生的优秀教材，也是软件工程师必备的参考书籍。\n\n* [《面向对象分析与设计》](https://book.douban.com/subject/3892590/)  \n本书是一本注重实效的书，面向架构师和软件开发者等软件工程实践者的实际需要，通过大量例子说明了基本概念，解释了方法，并展示了在不同领域的成功应用。\n\n* [《深入浅出面向对象分析与设计》](https://book.douban.com/subject/3530721/)  \n本书将告诉你如何分析、设计以及撰写真正面向对象的软件；容易重用、好维护、可扩展的软件；不再使你心碎的软件；让你增添新功能而不会破坏旧机制的软件。\n\n### 数字图像处理\n* [《数字图像处理》](https://book.douban.com/subject/6434627/)  \n本书是数字图像处理领域的杰作。\n\n* [《图像处理、分析与机器视觉》](https://book.douban.com/subject/5921462/)  \n本书是为计算机专业图像处理、图像分析和机器视觉课程编写的教材。书中针对图像处理、图像分析和机器视觉领域的有关原理与技术展开了广泛而深入的讨论，包括图像预处理、图像分割、形状表示与描述、物体识别与图像理解、三维视觉、数学形态学图像处理技术、离散图像变换、图像压缩、纹理描述、运动分析等。\n\n* [《数字图像处理：MATLAB》](https://book.douban.com/subject/26344083/)  \n本书是图像处理基础理论论述同以MATLAB为主要工具的软件实践方法相对照的第一本书，书中集成了冈萨雷斯和伍兹所著的《数字图像处理》一书中重要的原文材料和MathWorks公司的图像处理工具箱。本书的特色在于重点强调怎样通过开发新代码来加强这些软件工具。本书在介绍MATLAB编程基础知识之后，讲述了图像处理的主干内容，包括灰度变换、线性和非线性空间滤波、频率域滤波、图像复原与重建、彩色图像处理、图像压缩、图像分割、区域和边界表示与描述。\n\n### 计算机图形学\n* [《计算机图形学》](https://book.douban.com/subject/26403265/)  \n本书是一本经典著作，全面系统地讲解了计算机图形学的基本概念和相关技术。\n\n* [《计算机图形学》](https://book.douban.com/subject/3129340/)  \n本书与大多数传统的计算机图形学教材不同，它仅简要介绍交互式计算机图形学方面的基本知识，主要侧重于介绍计算机图形学在数学及其他科学领域的应用，解决实际问题。\n\n* [《计算机图形学》](https://book.douban.com/subject/3561816/)  \n本书通过最能代表技术发展状况的示例综合介绍了计算机图形学方面的原则和技巧，书中对每个概念都进行了详细介绍，阐述了其背后的数学原理，并给出了用OpenGL实现的代码以及实现结果展示。\n\n* [《OpenGL编程指南》](https://book.douban.com/subject/26220248/)  \n本书清晰地讲解了OpenGL的相关功能与技术，包括几何对象顶点的传递、细分，几何着色器中的几何变换，通过片元着色器来操作像素和纹理贴图，以及基于帧缓存对象和计算着色器的先进数据操作技术。\n\n* [《OpenGL超级宝典》](https://book.douban.com/subject/10774590/)  \n本书是OpenGL及3D图形编程最好的入门指南，涵盖了使用最新版本的OpenGL进行编程所需要的主要知识。\n\n### Linux\n* [《深入理解LINUX内核》](https://book.douban.com/subject/2287506/)  \n本书指导你对内核中使用的最重要的数据结构、算法和程序设计诀窍进行一次遍历。通过对表面特性的探究，作者给那些想知道自己机器工作原理的人提供了颇有价值的见解。\n\n* [《深入Linux内核架构》](https://book.douban.com/subject/4843567/)  \n本书讨论了Linux内核的概念、结构和实现。\n\n* [《Linux程序设计》](https://book.douban.com/subject/4831448/)  \n本书是Linux程序设计领域的经典名著，以简单易懂、内容全面和示例丰富而受到广泛好评。\n\n* [《Linux内核设计与实现》](https://book.douban.com/subject/6097773/)  \n本书详细描述了Linux内核的主要子系统和特点，包括Linux内核的设计、实现和接口。\n\n* [《Linux/Unix设计思想》](https://book.douban.com/subject/7564417/)    \n本书将Linux的开发方式与Unix的原理有效地结合起来，总结出Linux与Unix软件开发中的设计原则。\n\n* [《鸟哥的Linux私房菜：基础学习篇(第3版)》](https://book.douban.com/subject/4889838/)  \n本书是最具知名度的Linux入门书《鸟哥的Linux私房菜基础学习篇》的最新版，全面而详细地介绍了Linux操作系统。本书内容丰富全面，基本概念的讲解非常细致，深入浅出。各种功能和命令的介绍，都配以大量的实例操作和详尽的解析。本书是初学者学习Linux不可多得的一本入门好书。\n\n* [《鸟哥的Linux私房菜：服务器架设篇(第3版)》](https://book.douban.com/subject/10794788/)     \n您已有Linux基础，想要进一步学习服务器架设？还想了解如何维护与管理您的服务器？本书是您绝佳的选择。\n\n* [《UNIX环境高级编程》](https://book.douban.com/subject/1788421/)  \n本书是被誉为UNIX编程“圣经”的Advanced Programming in the UNIX Environment一书的更新版。本书内容权威，概念清晰，阐述精辟，对于所有层次UNIX程序员都是一本不可或缺的参考书。\n\n### Android\n* [《Android开发权威指南》](https://book.douban.com/subject/25741542/)  \n本书是一本全面介绍Android应用开发的专著。\n\n* [《第一行代码》](https://book.douban.com/subject/26915433/)\n本书被广大Android 开发者誉为“Android 学习第一书”。全书系统全面、循序渐进地介绍了Android软件开发的必备知识、经验和技巧。\n\n* [《Android内核剖析》](https://book.douban.com/subject/6811238/)  \n本书详细分析了Android内核的内部机制，包括窗口管理系统、Activity管理系统、输入法框架、编译系统等，为Android内核定制及高级应用程序开发提供技术参考。  \n* [《Android开发艺术探索》](https://book.douban.com/subject/26599538/)  \n本书是一本Android进阶类书籍，采用理论、源码和实践相结合的方式来阐述高水准的Android应用开发要点。\n\n* [《Android源码设计模式解析与实战》](https://book.douban.com/subject/26644935/)    \n本书从Android源码的角度由浅入深地剖析设计模式的运用，让工程师们把设计与模式重视起来，提升自己的设计能力与代码质量。\n\n* [《深入解析Android 5.0系统》](https://book.douban.com/subject/26377840/)    \n本书详细剖析了最新Android 5.0 系统主要框架的原理和具体实现。\n\n* [《深入理解Android内核设计思想》](https://book.douban.com/subject/25921329/)   \n本书从操作系统的基础知识入手，全面剖析进程/线程、内存管理、Binder机制、GUI显示系统、多媒体管理、输入系统等核心技术在Android中的实现原理。\n\n* [《Android软件安全与逆向分析》](https://book.douban.com/subject/20556210/)    \n本书由浅入深、循序渐进地讲解了Android 系统的软件安全、逆向分析与加密解密技术。包括Android软件逆向分析和系统安全方面的必备知识及概念、如何静态分析Android 软件、如何动态调试Android 软件、Android 软件的破解与反破解技术的探讨，以及对典型Android 病毒的全面剖析。\n\n"]
webman,Probably the fastest PHP web framework in the world.,1441,https://github.com/walkor/webman,master,['# webman\n\nHigh performance HTTP Service Framework for PHP based on [Workerman](https://github.com/walkor/workerman).\n\n# Manual (文档)\n\nhttps://www.workerman.net/doc/webman\n\n# Home page (主页)\nhttps://www.workerman.net/webman\n\n\n# Benchmarks （压测）\n\nhttps://www.techempower.com/benchmarks/#section=test&runid=9716e3cd-9e53-433c-b6c5-d2c48c9593c1&hw=ph&test=db&l=zg24n3-1r&a=2\n![image](https://user-images.githubusercontent.com/6073368/96447814-120fc980-1245-11eb-938d-6ea408716c72.png)\n\n## LICENSE\n\nMIT\n']
tinyrpc,c++ async rpc framework. 14w+qps.,517,https://github.com/Gooddbird/tinyrpc,main,['![](https://img.shields.io/github/v/release/Gooddbird/tinyrpc?color=2&label=tinyrpc&logoColor=2&style=plastic) ![GitHub repo size](https://img.shields.io/github/repo-size/Gooddbird/tinyrpc?style=plastic) ![GitHub issues](https://img.shields.io/github/issues/Gooddbird/tinyrpc?style=plastic) ![GitHub pull requests](https://img.shields.io/github/issues-pr/Gooddbird/tinyrpc?style=plastic) ![GitHub forks](https://img.shields.io/github/forks/Gooddbird/tinyrpc?style=plastic) ![GitHub Repo stars](https://img.shields.io/github/stars/Gooddbird/tinyrpc?style=plastic) ![GitHub contributors](https://img.shields.io/github/contributors/Gooddbird/tinyrpc?style=plastic) ![GitHub last commit](https://img.shields.io/github/last-commit/Gooddbird/tinyrpc)\n\n\n作者：**ikerli**  **2022-05-13**\n**使用 TinyRPC, 轻松地构建高性能分布式 RPC 服务！**\n\n<!-- TOC -->\n\n- [1. 概述](#1-概述)\n  - [1.1. TinyRPC 特点](#11-tinyrpc-特点)\n  - [1.2. TinyRPC 支持的协议报文](#12-tinyrpc-支持的协议报文)\n  - [1.3. TinyRPC 的 RPC 调用](#13-tinyrpc-的-rpc-调用)\n    - [1.3.1. 阻塞协程式异步调用](#131-阻塞协程式异步调用)\n    - [1.3.2. 非阻塞协程式异步调用](#132-非阻塞协程式异步调用)\n- [2. 性能测试](#2-性能测试)\n  - [2.1. HTTP echo 测试 QPS](#21-http-echo-测试-qps)\n- [3. 安装 TinyRPC](#3-安装-tinyrpc)\n  - [3.1. 安装必要的依赖库](#31-安装必要的依赖库)\n    - [3.1.1. protobuf](#311-protobuf)\n    - [3.1.2. tinyxml](#312-tinyxml)\n  - [3.2. 安装和卸载](#32-安装和卸载)\n    - [3.2.1. 安装 TinyRPC](#321-安装-tinyrpc)\n    - [3.2.2. 卸载 TinyRPC](#322-卸载-tinyrpc)\n- [4. 快速上手](#4-快速上手)\n  - [4.1. 搭建基于 TinyPB 协议的 RPC 服务](#41-搭建基于-tinypb-协议的-rpc-服务)\n    - [4.1.1. 实现 Protobuf 文件接口](#411-实现-protobuf-文件接口)\n    - [4.1.2. 准备配置文件](#412-准备配置文件)\n    - [4.1.3. 实现业务接口](#413-实现业务接口)\n    - [4.1.4. 启动 RPC 服务](#414-启动-rpc-服务)\n  - [4.2. 搭建基于 HTTP 协议的 RPC 服务](#42-搭建基于-http-协议的-rpc-服务)\n    - [4.2.1. 准备配置文件](#421-准备配置文件)\n    - [4.2.2. 实现 Servlet 接口](#422-实现-servlet-接口)\n    - [4.2.3. 启动 RPC 服务](#423-启动-rpc-服务)\n  - [4.3. RPC 服务调用](#43-rpc-服务调用)\n    - [4.3.1. 阻塞协程式异步调用](#431-阻塞协程式异步调用)\n    - [4.3.2. 非阻塞协程式异步调用](#432-非阻塞协程式异步调用)\n  - [4.4. TinyRPC 脚手架(tinyrpc_generator)](#44-tinyrpc-脚手架tinyrpc_generator)\n    - [4.4.1 准备 protobuf 文件](#441-准备-protobuf-文件)\n    - [4.4.2 生成 TinyRPC 框架](#442-生成-tinyrpc-框架)\n    - [4.4.3 业务逻辑开发](#443-业务逻辑开发)\n    - [4.4.4 Protobuf 接口升级怎么办？](#444-protobuf-接口升级怎么办)\n    - [4.4.5 tinyrpc_generator 选项详解](#445-tinyrpc_generator-选项详解)\n- [5. 概要设计](#5-概要设计)\n  - [5.1. 异步日志模块](#51-异步日志模块)\n  - [5.2. 协程模块](#52-协程模块)\n    - [5.2.1. 协程封装](#521-协程封装)\n    - [5.2.2. m:n 线程:协程模型](#522-mn-线程协程模型)\n  - [5.3. Reactor 模块](#53-reactor-模块)\n  - [5.4. Tcp 模块](#54-tcp-模块)\n    - [5.4.1. TcpServer](#541-tcpserver)\n    - [5.4.2. TcpConnection](#542-tcpconnection)\n  - [5.5. TinyPB 协议](#55-tinypb-协议)\n    - [5.5.1. TinyPB 协议报文格式分解](#551-tinypb-协议报文格式分解)\n  - [5.6. Http 模块](#56-http-模块)\n  - [5.7. RPC 调用封装](#57-rpc-调用封装)\n- [6. 错误码](#6-错误码)\n  - [6.1. 错误码判断规范](#61-错误码判断规范)\n  - [6.2. 错误码释义文档](#62-错误码释义文档)\n- [7. 问题反馈](#7-问题反馈)\n- [8. 参考资料](#8-参考资料)\n\n<!-- /TOC -->\n\n\n\n\n\n\n# 1. 概述\n## 1.1. TinyRPC 特点\n**TinyRPC** 是一款基于 **C++11** 标准开发的小型**异步 RPC** 框架。TinyRPC 的核心代码应该也就几千行样子，尽量保持了简洁且较高的易读性。\n\n麻雀虽小五脏俱全，从命名上就能看出来，TinyRPC 框架主要用义是为了让读者能**快速地**、**轻量化**地搭建出具有较高性能的异步RPC 服务。至少用 TinyRPC 搭建的 RPC 服务能应付目前大多数场景了。\n\n**TinyRPC** 没有实现跨平台，只支持 Linux 系统，并且必须是 64 位的系统，因为协程切换只实现了 **64** 位系统的代码，而没有兼容 **32** 位系统。这是有意的，因为作者只会 Linux 下开发，没能力做到跨平台。\n\n\n**TinyRPC** 的核心思想有两个：\n1. 让搭建高性能 RPC 服务变得简单\n2. 让异步调用 RPC 变得简单\n\n必须说明的是， **TinyRPC** 代码没有达到工业强度，最好不要直接用到生产环境，也可能存在一些未知 BUG，甚至 coredump。读者请自行辨别，谨慎使用！\n\n\n\n## 1.2. TinyRPC 支持的协议报文\n**TinyRPC** 框架目前支持两类协议：\n1. 纯 **HTTP** 协议: TinyRPC 实现了简单的很基本的 HTTP(1.1) 协议的编、解码，完全可以使用 HTTP 协议搭建一个 RPC 服务。\n2. TinyPB 协议: 一种基于 **Protobuf** 的自定义协议，属于二进制协议。\n\n## 1.3. TinyRPC 的 RPC 调用\nTinyRPC 是一款异步的 RPC 框架，这就意味着服务之前的调用是非常高效的。目前来说，TinyRPC 支持两种RPC 调用方式：**阻塞协程式异步调用** 和 **非阻塞协程式异步调用**。\n\n### 1.3.1. 阻塞协程式异步调用\n\n阻塞协程式异步调用这个名字看上去很奇怪，阻塞像是很低效的做法。然而其实他是非常高效的。他的思想是**用同步的代码，实现异步的性能。** 也就是说，**TinyRPC** 在 RPC 调用时候不需要像其他异步操作一样需要写复杂的回调函数，只需要直接调用即可。这看上去是同步的过程，实际上由于内部的协程封装实现了完全的异步。而作为外层的使用者完全不必关系这些琐碎的细节。\n\n阻塞协程式异步调用对应 TinyPbRpcChannel 类，一个简单的调用例子如下：\n\n```c++\ntinyrpc::TinyPbRpcChannel channel(std::make_shared<tinyrpc::IPAddress>("127.0.0.1", 39999));\nQueryService_Stub stub(&channel);\n\ntinyrpc::TinyPbRpcController rpc_controller;\nrpc_controller.SetTimeout(10000);\n\nDebugLog << "RootHttpServlet begin to call RPC" << count;\nstub.query_name(&rpc_controller, &rpc_req, &rpc_res, NULL);\nDebugLog << "RootHttpServlet end to call RPC" << count;\n```\n\n这看上去跟普通的阻塞式调用没什么区别，然而实际上在 stub.query_name 这一行是完全异步的，简单来说。线程不会阻塞在这一行，而会转而去处理其他协程，只有当数据返回就绪时，query_name 函数自动返回，继续下面的操作。\n这个过程的执行流如图所示：\n\n![](./imgs/block_async_call.drawio.png)\n\n从图中可以看出，在调用 query_name 到 query_name 返回这段时间 T，CPU 的执行权已经完全移交给主协程了，也就说是这段时间主协程可以用来做任何事情：包括响应客户端请求、执行定时任务、陷入 epoll_wait 等待事件就绪等。对单个协程来说，它的执行流被阻塞了。但对于整个线程来说是完全没有被阻塞，它始终在执行着任务。\n\n另外这个过程完全没有注册回调函数、另起线程之类的操作，可它确确实实达到异步了。这也是 **TinyRPC** 的核心思想之一。\n\n这种调用方式是 TinyRPC 推荐的方式，它的优点如下：\n1. 代码实现很简单，直接同步式调用，不需要写回调函数。\n2. 对IO线程数没有限制，**即使只有 1 个 IO 线程**，仍然能达到这种效果。\n3. 对于线程来说，他是**不会阻塞线程**的。\n\n当然，它的缺点也存在：\n1. 对于**当前协程来说，他是阻塞的**，必须等待协程再次被唤醒（**RESUME**）才能执行下面的代码。\n\n\n### 1.3.2. 非阻塞协程式异步调用\n**非阻塞协程式异步调用**是 TinyRPC 支持的另一种 RPC 调用方式，它解决了**阻塞协程式异步调用** 的一些缺点，当然也同时引入了一些限制。这种方式有点类似于 C++11 的 future 特性, 但也不完全一样。\n\n非阻塞协程式异步调用对应 TinyPbRpcAsyncChannel，一个简单调用例子如下：\n\n```c++\n{\n  std::shared_ptr<queryAgeReq> rpc_req = std::make_shared<queryAgeReq>();\n  std::shared_ptr<queryAgeRes> rpc_res = std::make_shared<queryAgeRes>();\n  AppDebugLog << "now to call QueryServer TinyRPC server to query who\'s id is " << req->m_query_maps["id"];\n  rpc_req->set_id(std::atoi(req->m_query_maps["id"].c_str()));\n\n\n  std::shared_ptr<tinyrpc::TinyPbRpcController> rpc_controller = std::make_shared<tinyrpc::TinyPbRpcController>();\n  rpc_controller->SetTimeout(10000);\n\n  tinyrpc::IPAddress::ptr addr = std::make_shared<tinyrpc::IPAddress>("127.0.0.1", 39999);\n\n  tinyrpc::TinyPbRpcAsyncChannel::ptr async_channel = \n    std::make_shared<tinyrpc::TinyPbRpcAsyncChannel>(addr);\n\n  async_channel->saveCallee(rpc_controller, rpc_req, rpc_res, nullptr);\n\n  QueryService_Stub stub(async_channel.get());\n  stub.query_age(rpc_controller.get(), rpc_req.get(), rpc_res.get(), NULL);\n}\n\n\n```\n\n注意在这种调用方式中，query_age 会立马返回，协程 C1 可以继续执行下面的代码。但这并不代表着调用 RPC 完成，如果你需要获取调用结果，请使用:\n```c++\nasync_channel->wait();\n```\n此时协程 C1 会阻塞直到异步 RPC 调用完成，注意只会阻塞当前协程 C1，而不是当前线程(其实调用 wait 后就相当于把当前协程 C1 Yiled 了，等待 RPC 完成后自动 Resume)。\n\n当然，wait() 是可选的。如果你不关心调用结果，完全可以不调用 wait。即相当于一个**异步的任务队列**。\n\n这种调用方式的原理很简单，会新生成一个协程 C2 去处理这次 RPC 调用，把这个协程 C2 加入调度池任务里面，而原来的协程 C1 可以继续往下执行。\n\n新协程 C2 会在适当的时候被IO线程调度（可能是IO线程池里面任意一个 IO线程）, 当 RPC 调用完成后，会唤醒原协程 C1 通知调用完成(前提是 C1 中调用了 wait 等待结果)。\n\n这个调用链路如图：\n\n![](./imgs/nonblock_async_call.drawio.png)\n\n总之，非阻塞协程式异步调用的优点如下：\n1. RPC 调用不阻塞当前协程 C1，C1 可以继续往下执行代码(若遇到 wait 则会阻塞)。\n\n而缺点如下：\n1. 所有 RPC 调用相关的对象，**必须是堆上的对象，而不是栈对象**， 包括 req、res、controller、async_rpc_channel。强烈推荐使用 shared_ptr，否则可能会有意想不到的问题(基本是必须使用了)。\n2. 在 RPC 调用前必须调用 TinyPbRpcAsyncChannel::saveCallee(), 提前预留资源的引用计数。实际上是第1点的补充，相当于强制要求使用 shared_ptr 了。\n\n解释一下第一点：调用相关的对象是在线程 A 中声明的，但由于是异步 RPC 调用，整个调用过程是又另外一个线程 B 执行的。因此你必须确保当线程 B 在这些 RPC 调用的时候，这些对象还存在，即没有被销毁。\n那为什么不能是栈对象？想像一下，假设你在某个函数中异步调用 RPC，如果这些对象都是栈对象，那么当函数结束时这些栈对象自动被销毁了，线程 B 此时显然会 coredump 掉。因此请在堆上申请对象。另外，推荐使用 shared_ptr 是因为 TinyPbRpcAsyncChannel 内部已经封装好细节了，当异步 RPC 完成之后会自动销毁对象，你不必担心内存泄露的问题！\n\n\n# 2. 性能测试\nTinyRPC 底层使用的是 Reactor 架构，同时又结合了多线程，其性能是能得到保障的。进行几个简单的性能测试结果如下：\n## 2.1. HTTP echo 测试 QPS\n测试机配置信息：Centos**虚拟机**，内存**6G**，CPU为**4核**\n\n测试工具：**wrk**: https://github.com/wg/wrk.git\n\n部署信息：wrk 与 TinyRPC 服务部署在同一台虚拟机上, 关闭 TinyRPC 日志\n\n测试命令：\n```\n// -c 为并发连接数，按照表格数据依次修改\nwrk -c 1000 -t 8 -d 30 --latency \'http://127.0.0.1:19999/qps?id=1\'\n```\n\n测试结果：\n|  **QPS** | **WRK 并发连接 1000** | **WRK 并发连接 2000** | **WRK 并发连接 5000** | **WRK 并发连接 10000** |\n|  ----  | ----  | ---- | ---- | ---- |\n| IO线程数为 **1** | **27000 QPS** | **26000 QPS** | **20000 QPS** |**20000 QPS** |\n| IO线程数为 **4** | **140000 QPS** | **130000 QPS** | **123000 QPS**| **118000 QPS** |\n| IO线程数为 **8** | **135000 QPS** | **120000 QPS**| **100000 QPS**| **100000 QPS** |\n| IO线程数为 **16** | **125000 QPS** | **127000 QPS** |**123000 QPS** | **118000 QPS** |\n\n```\n// IO 线程为 4, 并发连接 1000 的测试结果\n[ikerli@localhost bin]$ wrk -c 1000 -t 8 -d 30 --latency \'http://127.0.0.1:19999/qps?id=1\'\nRunning 30s test @ http://127.0.0.1:19999/qps?id=1\n  8 threads and 1000 connections\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\n    Latency     9.79ms   63.83ms   1.68s    99.24%\n    Req/Sec    17.12k     8.83k   97.54k    72.61%\n  Latency Distribution\n     50%    4.37ms\n     75%    7.99ms\n     90%   11.65ms\n     99%   27.13ms\n  4042451 requests in 30.07s, 801.88MB read\n  Socket errors: connect 0, read 0, write 0, timeout 205\nRequests/sec: 134442.12\nTransfer/sec:     26.67MB\n```\n\n由以上测试结果，**TinyRPC 框架的 QPS 可达到 14W 左右**。\n\n\n# 3. 安装 TinyRPC\n## 3.1. 安装必要的依赖库\n要正确编译 **TinyRPC**, 至少要先安装这几个库：\n\n### 3.1.1. protobuf\n**protobuf** 是 **google** 开源的有名的序列化库。谷歌出品，必属精品！**TinyRPC** 的 **TinyPB** 协议是基于 protobuf 来 序列化/反序列化 的，因此这个库是必须的。\n其地址为：https://github.com/protocolbuffers/protobuf\n\n推荐安装版本 **3.19.4** 及以上。安装过程不再赘述, **注意将头文件和库文件 copy 到对应的系统路径下。**\n\n### 3.1.2. tinyxml\n由于 **TinyRPC** 读取配置使用了 **xml** 文件，因此需要安装 **tinyxml** 库来解析配置文件。\n\n下载地址：https://sourceforge.net/projects/tinyxml/\n\n要生成 libtinyxml.a 静态库，需要简单修改 makefile 如下:\n```\n# 84 行修改为如下\nOUTPUT := libtinyxml.a \n\n# 194, 105 行修改如下\n${OUTPUT}: ${OBJS}\n\t${AR} $@ ${LDFLAGS} ${OBJS} ${LIBS} ${EXTRA_LIBS}\n```\n安装过程如下：\n```\ncd tinyxml\nmake -j4\n\n# copy 库文件到系统库文件搜索路径下\ncp libtinyxml.a /usr/lib/\n\n# copy 头文件到系统头文件搜索路径下 \nmkdir /usr/include/tinyxml\ncp *.h /usr/include/tinyxml\n```\n\n\n## 3.2. 安装和卸载\n\n### 3.2.1. 安装 TinyRPC\n在安装了前置的几个库之后，就可以开始编译和安装 **TinyRPC** 了。安装过程十分简单，只要不出什么意外就好了。\n\n**祈祷**一下一次性成功，然后直接执行以下几个命令即可：\n```\ngit clone https://github.com/Gooddbird/tinyrpc\n\ncd tinyrpc\n\nmkdir bin && mkdir lib && mkdir obj\n\n// 生成测试pb桩文件\ncd testcases\nprotoc --cpp_out=./ test_tinypb_server.proto\n\ncd ..\n// 先执行编译\nmake -j4\n\n// 编译成功后直接安装就行了\nmake install\n```\n\n注意, make install 完成后，默认会在 **/usr/lib** 路径下安装 **libtinyrpc.a** 静态库文件，以及在 **/usr/include/tinyrpc** 下安装所有的头文件。\n\n如果编译出现问题，欢迎提 [issue](https://github.com/Gooddbird/tinyrpc/issues/), 我会尽快回应。\n\n### 3.2.2. 卸载 TinyRPC\n卸载也很简单，如下即可：\n```\nmake uninstall\n```\n**注：如果此前已经安装过 TinyRPC, 建议先执行卸载命令后再重新 make install 安装.**\n\n\n# 4. 快速上手\n## 4.1. 搭建基于 TinyPB 协议的 RPC 服务\n### 4.1.1. 实现 Protobuf 文件接口\nTinyPB 协议基于 Protobuf 来序列化的，在搭建基于 TinyPB 协议的 RPC 服务之前，需要先定义接口文档。具体的 Protobuf 文档需要根据业务的实际功能来编写，这里给出一个例子如下:\n```.c++\n// test_tinypb_server.proto\nsyntax = "proto3";\noption cc_generic_services = true;\n\nmessage queryAgeReq {\n  int32 req_no = 1;\n  int32 id = 2;\n}\nmessage queryAgeRes {\n  int32 ret_code = 1;\n  string res_info = 2;\n  int32 req_no = 3;\n  int32 id = 4;\n  int32 age = 5;\n}\nmessage queryNameReq {\n  int32 req_no = 1;\n  int32 id = 2;\n  int32 type = 3;\n}\nmessage queryNameRes {\n  int32 ret_code = 1;\n  string res_info = 2;\n  int32 req_no = 3;\n  int32 id = 4;\n  string name = 5;\n}\nservice QueryService {\n  // rpc method name\n  rpc query_name(queryNameReq) returns (queryNameRes);\n\n  // rpc method name\n  rpc query_age(queryAgeReq) returns (queryAgeRes);\n}\n```\n使用 protoc 工具生成对应的 C++ 代码：\n```\nprotoc --cpp_out=./ test_tinypb_server.proto\n```\n\n### 4.1.2. 准备配置文件\n**TinyRPC** 读取标准的 **xml** 配置文件完成一些服务初始化设置，这个配置文件模板如下，一般只需要按需调整参数即可：\n```xml\n<?xml version="1.0" encoding="UTF-8" ?>\n<root>\n  <!--log config-->\n  <log>\n    <!--identify path of log file-->\n    <log_path>./</log_path>\n    <log_prefix>test_tinypb_server</log_prefix>\n\n    <!--identify max size of single log file, MB-->\n    <log_max_file_size>5</log_max_file_size>\n\n    <!--log level: DEBUG < INFO < WARN < ERROR-->\n    <rpc_log_level>DEBUG</rpc_log_level>\n    <app_log_level>DEBUG</app_log_level>\n\n    <!--inteval that put log info to async logger, ms-->\n    <log_sync_inteval>500</log_sync_inteval>\n  </log>\n\n  <coroutine>\n    <!--coroutine stack size (KB)-->\n    <coroutine_stack_size>256</coroutine_stack_size>\n\n    <!--default coroutine pool size-->\n    <coroutine_pool_size>1000</coroutine_pool_size>\n\n  </coroutine>\n\n  <msg_req_len>20</msg_req_len>\n\n  <!--max time when call connect, s-->\n  <max_connect_timeout>75</max_connect_timeout>\n\n  <!--count of io threads, at least 1-->\n  <iothread_num>8</iothread_num>\n\n  <time_wheel>\n    <bucket_num>6</bucket_num>\n\n    <!--inteval that destroy bad TcpConnection, s-->\n    <inteval>10</inteval>\n  </time_wheel>\n\n  <server>\n    <ip>127.0.0.1</ip>\n    <port>39999</port>\n    <!--注意这里选择 TinyPB 协议-->\n    <protocal>TinyPB</protocal>\n  </server>\n</root>\n```\n\n### 4.1.3. 实现业务接口\nprotobuf 文件提供的只是接口说明，而实际的业务逻辑需要自己实现。只需要继承 QueryService 并重写方法即可，例如：\n```c++\n// test_tinypb_server.cc\nclass QueryServiceImpl : public QueryService {\n public:\n  QueryServiceImpl() {}\n  ~QueryServiceImpl() {}\n\n  void query_age(google::protobuf::RpcController* controller,\n                       const ::queryAgeReq* request,\n                       ::queryAgeRes* response,\n                       ::google::protobuf::Closure* done) {\n\n    AppInfoLog << "QueryServiceImpl.query_age, req={"<< request->ShortDebugString() << "}";\n\n    response->set_ret_code(0);\n    response->set_res_info("OK");\n    response->set_req_no(request->req_no());\n    response->set_id(request->id());\n    response->set_age(100100111);\n\n    if (done) {\n      done->Run();\n    }\n\n    AppInfoLog << "QueryServiceImpl.query_age, res={"<< response->ShortDebugString() << "}";\n\n  }\n\n};\n```\n\n### 4.1.4. 启动 RPC 服务\nTinyRPC 服务启动非常简单，只需寥寥几行代码即可：\n```c++\nint main(int argc, char* argv[]) {\n  if (argc != 2) {\n    printf("Start TinyRPC server error, input argc is not 2!");\n    printf("Start TinyRPC server like this: \\n");\n    printf("./server a.xml\\n");\n    return 0;\n  }\n\n  // 1. 读取配置文件\n  tinyrpc::InitConfig(argv[1]);\n  // 2. 注册 service\n  REGISTER_SERVICE(QueryServiceImpl);\n  // 3. 启动 RPC 服务\n  tinyrpc::StartRpcServer();\n  \n  return 0;\n}\n```\n生成可执行文件 **test_tinypb_server** 后，启动命令如下：\n```\nnohup ./test_tinypb_server ../conf/test_tinypb_server.xml &\n```\n如果没什么报错信息，那么恭喜你启动成功了。如果不放心，可以使用 ps 命令查看进程是否存在：\n\n```\nps -elf | grep \'test_tinypb_server\'\n```\n或者使用 netstat 命令查看端口是否被监听：\n```\nnetstat -tln | grep 39999\n```\n至此，基于 TinyPB 协议的 RPC 服务已经启动成功，后续我们将调用这个服务。\n\n\n## 4.2. 搭建基于 HTTP 协议的 RPC 服务\n### 4.2.1. 准备配置文件\n同上，准备一个配置文件 **test_http_server.xml**:\n```xml\n<?xml version="1.0" encoding="UTF-8" ?>\n<root>\n  <!--log config-->\n  <log>\n    <!--identify path of log file-->\n    <log_path>./</log_path>\n    <log_prefix>test_http_server</log_prefix>\n\n    <!--identify max size of single log file, MB-->\n    <log_max_file_size>5</log_max_file_size>\n\n    <!--log level: DEBUG < INFO < WARN < ERROR < NONE(don\'t print log)-->\n    <rpc_log_level>DEBUG</rpc_log_level>\n    <app_log_level>DEBUG</app_log_level>\n\n    <!--inteval that put log info to async logger, ms-->\n    <log_sync_inteval>500</log_sync_inteval>\n  </log>\n\n  <coroutine>\n    <!--coroutine stack size (KB)-->\n    <coroutine_stack_size>128</coroutine_stack_size>\n\n    <!--default coroutine pool size-->\n    <coroutine_pool_size>1000</coroutine_pool_size>\n\n  </coroutine>\n\n  <msg_req_len>20</msg_req_len>\n\n  <!--max time when call connect, s-->\n  <max_connect_timeout>75</max_connect_timeout>\n\n  <!--count of io threads, at least 1-->\n  <iothread_num>4</iothread_num>\n\n  <time_wheel>\n    <bucket_num>3</bucket_num>\n\n    <!--inteval that destroy bad TcpConnection, s-->\n    <inteval>10</inteval>\n  </time_wheel>\n\n  <server>\n    <ip>127.0.0.1</ip>\n    <port>19999</port>\n    <!--这里选择 HTTP-->\n    <protocal>HTTP</protocal>\n  </server>\n\n</root>\n\n```\n\n### 4.2.2. 实现 Servlet 接口\n**TinyRPC** 提供类似 JAVA 的 **Servlet** 接口来实现 HTTP 服务。你只需要简单的继承 HttpServlet 类并实现 handle 方法即可，如一个 HTTP 的 echo 如下：\n```c++\n// test_http_server.cc\nclass QPSHttpServlet : public tinyrpc::HttpServlet {\n public:\n  QPSHttpServlet() = default;\n  ~QPSHttpServlet() = default;\n\n  void handle(tinyrpc::HttpRequest* req, tinyrpc::HttpResponse* res) {\n    AppDebugLog << "QPSHttpServlet get request";\n    setHttpCode(res, tinyrpc::HTTP_OK);\n    setHttpContentType(res, "text/html;charset=utf-8");\n\n    std::stringstream ss;\n    ss << "QPSHttpServlet Echo Success!! Your id is," << req->m_query_maps["id"];\n    char buf[512];\n    sprintf(buf, html, ss.str().c_str());\n    setHttpBody(res, std::string(buf));\n    AppDebugLog << ss.str();\n  }\n\n  std::string getServletName() {\n    return "QPSHttpServlet";\n  }\n};\n```\n\n### 4.2.3. 启动 RPC 服务\n将 Servlet 注册到路径下，启动 RPC 服务即可。注意这个注册路径相对于项目的根路径而言：\n```c++\n// test_http_server.cc\nint main(int argc, char* argv[]) {\n  if (argc != 2) {\n    printf("Start TinyRPC server error, input argc is not 2!");\n    printf("Start TinyRPC server like this: \\n");\n    printf("./server a.xml\\n");\n    return 0;\n  }\n\n  tinyrpc::InitConfig(argv[1]);\n\n  // 访问 http://127.0.0.1:19999/qps, 即对应 QPSHttpServlet 这个接口\n  REGISTER_HTTP_SERVLET("/qps", QPSHttpServlet);\n  tinyrpc::StartRpcServer();\n  return 0;\n}\n```\n启动命令同样如下：\n```\nnohup ./test_http_server ../conf/test_http_server.xml &\n```\n使用 curl 工具可以测试 HTTP 服务是否启动成功：\n```\n[ikerli@localhost bin]$ curl -X GET \'http://127.0.0.1:19999/qps?id=1\'\n<html><body><h1>Welcome to TinyRPC, just enjoy it!</h1><p>QPSHttpServlet Echo Success!! Your id is,1</p></body></html>\n```\n\n## 4.3. RPC 服务调用\n这一节将使用 test_http_server 服务调用 test_rpc_server，前面说过，TinyRPC 支持两种 RPC 调用方式：**阻塞协程式异步调用** 和 **非阻塞协程式异步调用**\n\n### 4.3.1. 阻塞协程式异步调用\n这种调用方式适用于我们依赖 RPC 调用结果的场景，必须等待 RPC 调用返回后才能进行下一步业务处理。BlockHttpServlet 即属于这种调用方式：\n```c++\nclass BlockCallHttpServlet : public tinyrpc::HttpServlet {\n public:\n  BlockCallHttpServlet() = default;\n  ~BlockCallHttpServlet() = default;\n\n  void handle(tinyrpc::HttpRequest* req, tinyrpc::HttpResponse* res) {\n    AppDebugLog << "BlockCallHttpServlet get request ";\n    AppDebugLog << "BlockCallHttpServlet success recive http request, now to get http response";\n    setHttpCode(res, tinyrpc::HTTP_OK);\n    setHttpContentType(res, "text/html;charset=utf-8");\n\n    queryAgeReq rpc_req;\n    queryAgeRes rpc_res;\n    AppDebugLog << "now to call QueryServer TinyRPC server to query who\'s id is " << req->m_query_maps["id"];\n    rpc_req.set_id(std::atoi(req->m_query_maps["id"].c_str()));\n\n    // 初始化 TinyPbRpcChannel 对象\n    tinyrpc::TinyPbRpcChannel channel(std::make_shared<tinyrpc::IPAddress>("127.0.0.1", 39999));\n    QueryService_Stub stub(&channel);\n\n    // 初始化 TinyPbRpcController 对象, 设置超时时间等\n    tinyrpc::TinyPbRpcController rpc_controller;\n    rpc_controller.SetTimeout(5000);\n\n    AppDebugLog << "BlockCallHttpServlet end to call RPC";\n    // 进行 RRC 调用， 这一步会阻塞当前协程，直到调用完成返回\n    // 当然阻塞的只是当前协程，对线程来说完全可以去执行其他的协程，因此不会影响性能\n    stub.query_age(&rpc_controller, &rpc_req, &rpc_res, NULL);\n    AppDebugLog << "BlockCallHttpServlet end to call RPC";\n    // 判断是否有框架级错误\n    if (rpc_controller.ErrorCode() != 0) {\n      AppDebugLog << "failed to call QueryServer rpc server";\n      char buf[512];\n      sprintf(buf, html, "failed to call QueryServer rpc server");\n      setHttpBody(res, std::string(buf));\n      return;\n    }\n\n    if (rpc_res.ret_code() != 0) {\n      std::stringstream ss;\n      ss << "QueryServer rpc server return bad result, ret = " << rpc_res.ret_code() << ", and res_info = " << rpc_res.res_info();\n      AppDebugLog << ss.str();\n      char buf[512];\n      sprintf(buf, html, ss.str().c_str());\n      setHttpBody(res, std::string(buf));\n      return;\n    }\n\n    std::stringstream ss;\n    ss << "Success!! Your age is," << rpc_res.age() << " and Your id is " << rpc_res.id();\n\n    char buf[512];\n    sprintf(buf, html, ss.str().c_str());\n    setHttpBody(res, std::string(buf));\n\n  }\n\n  std::string getServletName() {\n    return "BlockCallHttpServlet";\n  }\n};\n```\n注册此 Servlet, 然后重启 **test_http_server**\n```\nREGISTER_HTTP_SERVLET("/block", BlockCallHttpServlet);\n```\n使用 curl 测试\n```\n[ikerli@localhost bin]$ curl -X GET \'http://127.0.0.1:19999/block?id=1\'\n<html><body><h1>Welcome to TinyRPC, just enjoy it!</h1><p>Success!! Your age is,100100111 and Your id is 1</p></body></html>\n```\n\n### 4.3.2. 非阻塞协程式异步调用\n这种调用方式适用于我们不依赖 RPC 调用结果的场景，即我们可以继续业务处理，而不关心何时 RPC 调用成功。NonBlockHttpServlet 即属于这种调用方式：\n```c++\nclass NonBlockCallHttpServlet: public tinyrpc::HttpServlet {\n public:\n  NonBlockCallHttpServlet() = default;\n  ~NonBlockCallHttpServlet() = default;\n\n  void handle(tinyrpc::HttpRequest* req, tinyrpc::HttpResponse* res) {\n    AppInfoLog << "NonBlockCallHttpServlet get request";\n    AppDebugLog << "NonBlockCallHttpServlet success recive http request, now to get http response";\n    setHttpCode(res, tinyrpc::HTTP_OK);\n    setHttpContentType(res, "text/html;charset=utf-8");\n    // 注意所有调用相关的对象都必须是堆对象，强烈推荐使用 shared_ptr 智能指针\n    std::shared_ptr<queryAgeReq> rpc_req = std::make_shared<queryAgeReq>();\n    std::shared_ptr<queryAgeRes> rpc_res = std::make_shared<queryAgeRes>();\n    AppDebugLog << "now to call QueryServer TinyRPC server to query who\'s id is " << req->m_query_maps["id"];\n    rpc_req->set_id(std::atoi(req->m_query_maps["id"].c_str()));\n\n    std::shared_ptr<tinyrpc::TinyPbRpcController> rpc_controller = std::make_shared<tinyrpc::TinyPbRpcController>();\n    rpc_controller->SetTimeout(10000);\n\n    AppDebugLog << "NonBlockCallHttpServlet begin to call RPC async";\n\n    tinyrpc::IPAddress::ptr addr = std::make_shared<tinyrpc::IPAddress>("127.0.0.1", 39999);\n    // 注意区别，这是使用的是 TinyPbRpcAsyncChannel, 而不是 TinyPbRpcChannel\n    tinyrpc::TinyPbRpcAsyncChannel::ptr async_channel = \n      std::make_shared<tinyrpc::TinyPbRpcAsyncChannel>(addr);\n\n    auto cb = [rpc_res]() {\n      printf("call succ, res = %s\\n", rpc_res->ShortDebugString().c_str());\n      AppDebugLog << "NonBlockCallHttpServlet async call end, res=" << rpc_res->ShortDebugString();\n    };\n\n    std::shared_ptr<tinyrpc::TinyPbRpcClosure> closure = std::make_shared<tinyrpc::TinyPbRpcClosure>(cb); \n    // 调用前必须提前保存对象，否则可能会引发段错误\n    async_channel->saveCallee(rpc_controller, rpc_req, rpc_res, closure);\n\n    QueryService_Stub stub(async_channel.get());\n    // rpc 调用, 当前协程会继续往下执行，不依赖 RPC 调用返回\n    stub.query_age(rpc_controller.get(), rpc_req.get(), rpc_res.get(), NULL);\n    AppDebugLog << "NonBlockCallHttpServlet async end, now you can to some another thing";\n\n    // 若需要等待 RPC 结果，可以使用 wait(). 当调用 wait 后，当前协程会阻塞知道 RPC 调用返回\n    // async_channel->wait();\n    // AppDebugLog << "wait() back, now to check is rpc call succ";\n\n    // if (rpc_controller->ErrorCode() != 0) {\n    //   AppDebugLog << "failed to call QueryServer rpc server";\n    //   char buf[512];\n    //   sprintf(buf, html, "failed to call QueryServer rpc server");\n    //   setHttpBody(res, std::string(buf));\n    //   return;\n    // }\n\n    // if (rpc_res->ret_code() != 0) {\n    //   std::stringstream ss;\n    //   ss << "QueryServer rpc server return bad result, ret = " << rpc_res->ret_code() << ", and res_info = " << rpc_res->res_info();\n    //   AppDebugLog << ss.str();\n    //   char buf[512];\n    //   sprintf(buf, html, ss.str().c_str());\n    //   setHttpBody(res, std::string(buf));\n    //   return;\n    // }\n\n    std::stringstream ss;\n    ss << "Success!! Your age is," << rpc_res->age() << " and Your id is " << rpc_res->id();\n\n    char buf[512];\n    sprintf(buf, html, ss.str().c_str());\n    setHttpBody(res, std::string(buf));\n  }\n\n  std::string getServletName() {\n    return "NonBlockCallHttpServlet";\n  }\n};\n```\n注册此 Servlet, 然后重启 **test_http_server**\n```\nREGISTER_HTTP_SERVLET("/nonblock", NonBlockCallHttpServlet);\n```\n使用 curl 测试\n```\n[ikerli@localhost bin]$ curl -X GET \'http://127.0.0.1:19999/nonblock?id=1\'\n<html><body><h1>Welcome to TinyRPC, just enjoy it!</h1><p>Success!! Your age is,0 and Your id is 0</p></body></html>\n```\n\n## 4.4. TinyRPC 脚手架(tinyrpc_generator)\nTinyRPC 提供了代码生成工具，简单到只需要一个 protobuf 文件，就能生成全部框架代码，作为使用者只需要写业务逻辑即可，不必关心框架的原理，也不用再去写繁琐的重复代码，以及考虑如何链接 tinyrpc 库的问题。接下来用一个实例来说明如何使用 `tinyrpc_generator`.\n### 4.4.1 准备 protobuf 文件\n例如我们需要搭建一个订单服务: `order_server`. 它的提供一些简单的订单操作：查询订单、生成订单、删除订单等。 \n首先定义 `order_server.proto` 如下：\n```\nsyntax = "proto3";\noption cc_generic_services = true;\n\nmessage queryOrderDetailReq {\n  int32 req_no = 1;         // 请求标识,一般是唯一id\n  string order_id = 2;      // 单号\n}\n\nmessage queryOrderDetailRsp {\n  int32 ret_code = 1;     // 返回码，0代表响应成功\n  string res_info = 2;    // 返回信息， SUCC 代表成功，否则为失败的具体信息\n  int32 req_no = 3; \n  string order_id = 4;      // 单号\n  string goods_name = 5;    // 货物名称\n  string user_name = 6;     // 用户名称\n}\n\nmessage makeOrderReq {\n  int32 req_no = 1;\n  string user = 2;\n  string goods_name = 3;    // 货物名称\n  string pay_amount = 4;    // 支付金额\n}\n\nmessage makeOrderRsp {\n  int32 ret_code = 1;\n  string res_info = 2;\n  int32 req_no = 3;\n  string order_id = 4;      // 订单号\n}\n\nmessage deleteOrderReq {\n  int32 req_no = 1;         // 请求标识,一般是唯一id\n  string order_id = 2;      // 单号\n}\n\nmessage deleteOrderRsp {\n  int32 ret_code = 1;\n  string res_info = 2;\n  int32 req_no = 3;\n  string order_id = 4;      // 订单号\n}\n\n\nservice OrderService {\n  // 查询订单\n  rpc query_order_detail(queryOrderDetailReq) returns (queryOrderDetailRsp);\n\n  // 生成订单\n  rpc make_order(makeOrderReq) returns (makeOrderRsp);\n\n  // 删除订单\n  rpc delete_order(deleteOrderReq) returns (deleteOrderRsp);\n\n}\n```\n\n### 4.4.2 生成 TinyRPC 框架\n这一步很简单，简单到只需要一行命令：\n```\ntinyrpc/generator/tinyrpc_generator.py -o ./ -i order_server.proto -p 12345\n```\n这里先不介绍各个选项的含义，你可以观察到在当前目录下 `./` 已经生成了项目 `order_server`, 其项目结构如下：\n```\norder_server: 根目录\n  - bin: 可执行文件目录\n    - run.sh: 启动脚本\n    - shutdown.sh: 停止脚本\n    - order_server: 可执行文件\n  - conf: 配置文件目录\n    - order_server.xml: TinyRPC 配置文件\n  - log: 日志目录，存放运行时产生的日志文件\n  - obj: 库文件目录，存放编译过程的中间产物\n  - order_server: 源代码文件目录\n    - comm: 公共文件\n    - interface: 接口定义文件目录，每一个RPC方法会在此处定义一个接口\n    - pb: 由 protoc 生成的文件，以及源protobuf文件\n    - service: 接口转发层，将每个 RPC 方法跳转到对应的 interface 接口\n      - order_server.cc\n      - order_server.h\n    - main.cc: main 文件，TinyRPC 服务的 main 函数在此\n    - makefile: TinyRPC 工程的 makefile 文件，直接执行 make 即可\n  - test_client: 测试工具目录，每一个 interface 下的接口，在此处都会有一个对应的 cleint 工具，可以简单测试 RPC 通信\n  \n```\nOK, 你唯一需要做的就是进入 `order_server/order_server` 目录，执行 `make -j4` 即可，整个项目就完成构建了。\n\n接下来，进入 `order_server/bin` 目录下，执行：\n```\nsh run.sh order_server\n```\n不出意外的话，你的 TinyRPC 服务已经成功的运行起来了。接下来简单测试一下，进入 `order_server/test_client` 目录，执行客户端测试工具，如：\n```\n./test_query_order_detail\n```\n如果 TinyRPC 服务启动成功，你会看到以下输出：\n```\n[ikerli@localhost test_client]$ ./test_query_order_detail_client \nSend to tinyrpc server 0.0.0.0:12345, requeset body: \nSuccess get response frrom tinyrpc server 0.0.0.0:12345, response body: res_info: "OK"\n```\n\n否则，你会看到失败的具体原因，请根据错误码自行排查。例如这里错误显示为 peer closed，多半是服务没有启动，导致该端口没人监听。\n```\n[ikerli@localhost test_client]$ ./test_query_order_detail_client \nSend to tinyrpc server 0.0.0.0:12345, requeset body: \nFailed to call tinyrpc server, error code: 10000000, error info: connect error, peer[ 0.0.0.0:12345 ] closed.\n```\n\n### 4.4.3 业务逻辑开发\n`tinyrpc_geneator` 为 Protobuf 文件中的每一个 rpc 方法生成了一个接口(interface), 这些接口位于 `order_server/interface/` 目录下.\n\n例如这里的 `test_query_order_detail` 方法, 我们可以在 `interface` 目录下找到这两个文件：\n`query_order_detail.cc` 和 `query_order_detail.h`\n```c++\n// interface/query_order_detail.cc\n\n#include "tinyrpc/comm/log.h"\n#include "order_server/interface/query_order_detail.h"\n#include "order_server/pb/order_server.pb.h"\n\nnamespace order_server {\n\nQueryOrderDetailInterface::QueryOrderDetailInterface(const ::queryOrderDetailReq& request, ::queryOrderDetailRsp& response)\n  : m_request(request), \n  m_response(response) {\n\n    // m_request: 客户端请求的结构体，从中可以取出请求信息\n    // m_response: 服务端响应结构体，只需要将结果设置到此即可，TinyRPC 会负责会送给客户端结果\n}\n\nQueryOrderDetailInterface::~QueryOrderDetailInterface() {\n\n}\n\nvoid QueryOrderDetailInterface::run() {\n  //\n  // Run your business at here\n  // m_reponse.set_ret_code(0);\n  // m_reponse.set_res_info("Succ");\n  //\n}\n\n```\n那么写业务逻辑就非常简单了，只需要实现具体的 `QueryOrderDetailInterface::run()` 方法即可，其他任何逻辑完全不需要关心,TinyRPC 已经处理好了一切。\n\n\n### 4.4.4 Protobuf 接口升级怎么办？\n当需要升级接口的时候，即修改 protobuf 文件，要怎么重新生成项目呢？因为你在 `interface` 目录下实现了业务逻辑，会不会重新生成项目之后，之前的代码被覆盖了？\n\n完全不用担心，`tinyrpc_generator` 已经考虑到了这种情况，你可以放心大胆的修改 protobuf 文件，然后重新执行生成命令:\n```\ntinyrpc/generator/tinyrpc_generator.py -o ./ -i order_server.proto -p 12345\n```\n`tinyrpc_generator` 会智能的判断哪些文件需要更新，哪些文件无需更新。规则如下:\n- interface: 下所有的接口定义文件，如果同名文件存在则不会更新，否则生成新文件\n- service: 该目录下的文件每次都会被更新，因为 protobuf 文件修改意味着接口有变化，比如新增或者删除接口之类的，需要重新生成文件以便能对新增的接口进行转发\n- makefile: 不存在时生成，存在则不更新\n- main.cc: 不存在时生成，存在则不更新\n- test_client: 不存在时生成，存在则不更新\n- pb: 每次都会更新(这是必然的，比较 protobuf 文件都变了)\n\n### 4.4.5 tinyrpc_generator 选项详解\n`tinyrpc_generator` 是用 python 语言实现的简单脚本，其提供了几个简单的命令行入参选项，你也可以使用 `-h` 或者 `--help` 选项获取帮助文档:\n```\nOptions:\n-h, --help\n    打印帮助文档\n-i xxx.proto, --input xxx.proto\n    指定源 protobuf 文件，注意只支持 porotbuf3 \n\n-o dir, --output dir\n    指定项目生成路径\n\n-p port, --input port\n    指定 TinyRPC 服务监听的端口(默认是 39999)\n\n-h x.x.x.x, --host x.x.x.x\n    指定 TinyRPC 服务绑定的 IP 地址(默认是 0.0.0.0)\n```\n\n\n\n\n\n\n# 5. 概要设计\n**TinyRPC** 框架的主要模块包括：异步日志、协程封装、Reactor封装、Tcp 封装、TinyPb协议封装、HTTP 协议封装、以及 RPC封装模块等。\n\n## 5.1. 异步日志模块\n设计初期，**TinyRPC** 的日志主要参考了 (**sylar**),并精简后实现了最基础的打印日志。\n\n在开发到一定程度后，发现同步日志或多或少有些影响性能，毕竟每次写入文件的磁盘IO还是比较耗时的。遂改为异步日志。TinyRPC 的异步日志实现非常简单，只是额外启动了一个线程来负责打印日志罢了。\n\n当然，**TinyRPC** 的日志做到了了以下几点：\n- **异步日志**：日志异步打印，不阻塞当前线程。生产者只需要将日志信息放入buffer即可，消费者线程会按照一定时间频率自动将日志同步到磁盘文件中。\n- **日志级别**：日志分级别打印，**当设定级别高于待打印日志的级别时，日志打印是个空操作**，无性能消耗。\n- **文件输出**：日志支持可以输出到文件中，特别是在生产环境上，把日志打印到控制台可不是一个好方法。\n- **滚动日志**：日志文件会自行滚动，当**跨天**或者**单个文件超过一定大小**后，会自动建立新的文件写入日志信息。\n- **崩溃处理**：TinyRPC 的日志库处理了**程序突然崩溃**的情况，简单来说就是当程序崩溃退出前先将日志信息同步到磁盘文件上。这是非常重要的，如果缺失了崩溃那一瞬间的日志内容，那就很难排查具体原因。\n- **日志分类**：TinyRPC 提供了两类日志类型，**RPC 框架日志**以及 **APP 应用日志**。RPC 框架日志以 rpc 后缀结尾，是 TinyRPC 框架在运行中打印的日志信息，通常用来监控框架本身的运行状态。APP 应用日志以 **app** 后缀结尾 专门用来处理用户请求，对于每一个客户端请求，APP 日志会打印出请求的 msg 作为标识。总的来说，如果你只是使用 TinyRPC，关注APP日志即可。\n\n你可以分别使用宏定义 **DebugLog** 和 **AppDebugLog** 打印这两种日志:\n```\nDebugLog << "11";\nAppDebugLog << "11";\n```\n\n## 5.2. 协程模块\n\n### 5.2.1. 协程封装\nTinyRPC 的协程底层切换使用了腾讯的开源协程库 [libco](https://github.com/Tencent/libco)，即协程上下文切换那一块，而协程切换的本质不过是寄存器切换罢了。\n除了协程切换之外，TinyRPC 提供了一些基本函数的 hook，如 read、write、connect 等函数。\n\n更多协程的介绍请移步我的知乎文章：\n\n[C++实现的协程网络库tinyrpc（一）-- 协程封装](https://zhuanlan.zhihu.com/p/466349082)\n\n[C++实现的协程网络库tinyrpc（二）-- 协程Hook](https://zhuanlan.zhihu.com/p/474353906)\n\n[协程篇（一）-- 函数调用栈](https://zhuanlan.zhihu.com/p/462968883)\n\n### 5.2.2. m:n 线程:协程模型\n最初设计中 TinyRPC 框架是 **1:n** 线程:协程模型的，即一个线程对于 n 个协程。每个线程有单独的协程池，线程只会 Resume 属于它自己协程池里面的协程，各个 IO 线程之前的协程互相不干扰。\n\n然而 **1:n** 模型可能会增加请求的时延。例如当某个 IO 线程在处理请求时，耗费了太多的时间，导致此 IO 线程的其他请求得不到及时处理，只能阻塞等待。\n\n因此 TinyRPC 框架使用 **m:n 线程:协程**模型进行了重构。所谓 **m:n** 即 m 个线程共同调度 n 个协程。由于 m 个线程共用一个协程池，因此协程池里的就绪任务总会尽快的被 **Resume**。\n\n一般来说，每一个客户端连接对象 **TcpConnection**, 对应一个协程。对客户端连接的 **读数据、业务处理、写数据**这三步，其实都在这个协程中完成的。对于 **m:n 协程模型** 来说，一个 **TcpConnection**对象所持有的协程，可能会来回被多个不同的**IO线程**调度。\n\n举个例子，协程 A 可能先由 IO线程1 Resume，然后协程 A Yield后，下一次又被 IO线程2 Resume 唤醒。\n\n因此，在实现业务逻辑的时候，要特别谨慎使用**线程局部变量(thread_local)**。因为对当前协程来说，可能执行此协程的线程都已经变了，那对于的线程局部变量当然也会改变。\n\n当然，**一个协程任一时刻只会被一个线程来调度，不会存在多个 IO 线程同时 Resume 同一个协程的情况**。这一点由 TinyRPC 框架保证。\n\n\n不过，m:n 模型也引入了更强的**线程竞争条件**，所以对协程池加**互斥锁**是必须的。\n\n## 5.3. Reactor 模块\n可移步知乎文章：\n\n[C++实现的协程网络库tinyrpc（四）-- Reactor 实现](https://zhuanlan.zhihu.com/p/503323714)\n\n[Reactor模式介绍](https://zhuanlan.zhihu.com/p/428693405)\n\n## 5.4. Tcp 模块\n\n### 5.4.1. TcpServer\nTcpServer 的运行逻辑如下：\n\n![](imgs/tcp_server.drawio.png)\n\n原理可参考文章：\n[C++实现的协程异步 RPC 框架 TinyRPC（五）-- TcpServer 实现](https://zhuanlan.zhihu.com/p/523947909)\n\n\n\n\n### 5.4.2. TcpConnection\n\nTcpConnection 运行逻辑如下：\n\n![](imgs/input.drawio.png)\n\n\n\n原理可参考文章：\n[C++实现的协程异步 RPC 框架 TinyRPC（六）-- TcpConnection 实现](https://zhuanlan.zhihu.com/p/524517895)\n\n\n## 5.5. TinyPB 协议\nTinyPB 是 TinyRPC 框架自定义的一种轻量化协议类型，它是基于 google 的 protobuf 而定制的，读者可以按需自行对协议格式进行扩充。\n\n### 5.5.1. TinyPB 协议报文格式分解\n**TinyPb** 协议包报文用 c++ 伪代码描述如下：\n```c++\n/*\n**  min of package is: 1 + 4 + 4 + 4 + 4 + 4 + 4 + 1 = 26 bytes\n**\n*/\nchar start;                         // 代表报文的开始， 一般是 0x02\nint32_t pk_len {0};                 // 整个包长度，单位 byte\nint32_t msg_req_len {0};            // msg_req 字符串长度\nstd::string msg_req;                // msg_req,标识一个 rpc 请求或响应。 一般来说 请求 和 响应使用同一个 msg_req.\nint32_t service_name_len {0};       // service_name 长度\nstd::string service_full_name;      // 完整的 rpc 方法名， 如 QueryService.query_name\nint32_t err_code {0};               // 框架级错误代码. 0 代表调用正常，非 0 代表调用失败\nint32_t err_info_len {0};           // err_info 长度\nstd::string err_info;               // 详细错误信息， err_code 非0时会设置该字段值\nstd::string pb_data;                // 业务 protobuf 数据，由 google 的 protobuf 序列化后得到\nint32_t check_num {0};             // 包检验和，用于检验包数据是否有损坏\nchar end;                           // 代表报文结束，一般是 0x03\n```\n\n注释信息已经很完整了。另外几个需要特殊说明的字段如下：\n\n**err_code**: err_code 是框架级别的错误码，即代表调用 RPC 过程中发生的错误，如对端关闭、调用超时等。err_code 为0 代表此次 RPC 调用正常，即正常发送数据且接收到回包。非 0 值代表调用失败，此时会设置 err_info 为详细的错误信息。\n\n**service_full_name** : 是指的调用的完整方法名。即 servicename.methodname。一般来说，一个 **TinyPB**协议的**TinyRPC** 服务需要注册至少一个 **Service** (这里的 Service 指的继承了google::protobuf::Service 的类)，而一个 Service 下包含多个方法。\n\n**pk_len**: pk_len 代表整个协议包的长度，单位是1字节，且包括 **[strat]** 字符 和 **[end]** 字符。\n\n**TinyPb** 协议报文中包含了多个 len 字段，这主要是为了用空间换时间，接收方在提前知道长度的情况下，更方便解码各个字段，从而提升了 decode 效率。\n\n另外，**TinyPb** 协议里面所有的 int 类型的字段在编码时都会先转为**网络字节序**！\n\n\n## 5.6. Http 模块\nTinyRPC 的 HTTP 模块实际上有点模仿 Java 的 Servlet 概念，每来一个 HTTP 请求就会找到对应的 HttpServlet 对象，执行其提前注册好的业务逻辑函数，用于处理 Http 请求，并回执 Http 响应。\n\n## 5.7. RPC 调用封装\n--建设中，敬请期待--\n\n\n\n# 6. 错误码\n## 6.1. 错误码判断规范\n**TinyPB** 协议使用错误码来标识 RPC 调用过程的那些不可控的错误。这些错误码是框架级错误码，当出现这些错误码时，说明是 RPC 调用的链路出了问题。自然，这次 RPC 调用是失败的。\n一般来说，在调用 RPC 时，需要判断两个错误码，例如：\n```c++\nstub.query_name(&rpc_controller, &rpc_req, &rpc_res, NULL);\n// 判断框架级别错误码\nif (rpc_controller.ErrorCode() != 0) {\n  ErrorLog << "failed to call QueryServer rpc server";\n  // ....\n  return;\n}\n// 判断业务错误码\nif (rpc_res.ret_code() != 0) {\n  // ...\n  return;\n}\n```\n\n\nrpc_controller.ErrorCode 是 RPC **框架级错误码**，即这个文档里面锁描述的东西。该错误码的枚举值已经被定义好如下表格，一般情况下不会变更。当此错误码不为0时，请检查 RPC 通信链路是否有问题，网络连接是否有异常。当然，TinyPB 协议里面的 err_info 字段也会详细的描述错误信息。\n\n另一个错误码是**业务错误码**，通常他被定义在 RPC 方法返回结构体的第一个字段中。出现这个错误码一般是对端在进行业务处理时出现了非预期的结果，此时将返回对应的错误码和错误信息。这个错误码的枚举值应由 RPC 通信双方自行约定。\n\n## 6.2. 错误码释义文档\nerr_code 详细说明如下表：\n\n|  **错误码** | **错误代码** | **错误码描述** |\n|  ----  | ----  | ---- |\n| ERROR_PEER_CLOSED | 10000000 | connect 时对端关闭，一般是对端没有进程在监听此端口 |\n| ERROR_FAILED_CONNECT | 10000001 | connect 失败|\n| ERROR_FAILED_GET_REPLY | 10000002 | RPC 调用未收到对端回包数据 |\n| ERROR_FAILED_DESERIALIZE | 10000003 | 反序列化失败，这种情况一般是 TinyPb 里面的 pb_data 有问题 |\n| ERROR_FAILED_SERIALIZE | 10000004 | 序列化失败|\n| ERROR_FAILED_ENCODE | 10000005 | 编码失败 |\n| ERROR_FAILED_DECODE | 10000006 |  解码失败|\n| ERROR_RPC_CALL_TIMEOUT | 10000007 | 调用 RPC 超时, 这种情况请检查下 RPC 的超时时间是否太短 |\n| ERROR_SERVICE_NOT_FOUND | 10000008 | Service 不存在，即对方没有注册这个 Service |\n| ERROR_METHOD_NOT_FOUND | 10000009 | Method 不存在，对方没有这个 方法|\n| ERROR_PARSE_SERVICE_NAME | 10000010 | 解析 service_name 失败|\n| ERROR_NOT_SET_ASYNC_PRE_CALL | 10000011 | 非阻塞协程式 RPC 调用前没保存对象 |\n\n\n# 7. 问题反馈\n- 交流群：**260423934**\n- 邮箱地址：**1753009868@qq.com**\n- 知乎：知乎搜索 **ikerli**\n\n如果您愿意支援一点电费，不胜感激！\n\n![](./imgs/mine/wechatpay.png)(wechat pay) &nbsp; ![](./imgs/mine/alipay.png)(alipay)  \n\n\n\n\n\n\n# 8. 参考资料\nlibco: https://github.com/Tencent/libco\n\nsylar: https://github.com/sylar-yin/sylar\n\nmuduo: https://github.com/chenshuo/muduo\n\ntinyxml: https://github.com/leethomason/tinyxml2\n\nprotobuf: https://github.com/protocolbuffers/protobuf\n']
quick-cocos2d-x,quick-cocos2d-x is a quick framework, based on cocos2d-x. Make mobile games in Lua.,1466,https://github.com/chukong/quick-cocos2d-x,master,['quick-cocos2d-x 是 cocos2d-x 开发商“[触控科技](http://www.chukong-inc.com/)”专门针对 Lua 开发者推出的扩展版本。\n\nQuick-Cocos2d-x 基于 Cocos2d-x 开发，具有 Cocos2d-x 的所有优点。并在 Cocos2d-x 基础上添加了 Lua 脚本支持，和高级脚本框架。让开发商可以用更低的成本、更高的开发效率、更省的人力成本创造高品质手游产品。\n\n**快速开发：** 框架自带手游需要的各种基础服务，开发商能够将有限的资源投入到产品的玩法和用户体验上。\n\n**降低成本：** 选择 Quick-Cocos2d-x，整个产品的绝大部分代码都可以使用 Lua 脚本语言完成开发。相比 C++ 能够显著降低人员成本，在开发效率上也具有明显优势。\n\n**优化用户体验：** Quick-Cocos2d-x 提供了更容易使用 UI 库和脚本编译打包加密和自动更新等功能。让开发商可以用更低的成本快速改善产品的体验。\n\n**成熟可靠：** 目前使用 Cocos2d-x 平台开发的热门手游产品中，几乎一半都用到了 Lua 脚本语言。而 Quick-Cocos2d-x 作为 Cocos2d-x + Lua 的升级解决方案，保持了成熟可靠的特点。\n\n-   quick-cocos2d-x 中文站 [http://quick.cocos.org/](http://quick.cocos.org/)\n-   新浪微博 [http://weibo.com/quickcocos2dx](http://weibo.com/quickcocos2dx)\n-   QQ 群 284148017, 243709595, 8952580\n-   CSDN 镜像仓库（国内访问稳定快速），和 github 仓库同步，地址 [https://code.csdn.net/u014257247/quick-cocos2d-x](https://code.csdn.net/u014257247/quick-cocos2d-x)\n\n~\n\n\n## 快速开始\n\n-   下载最新版 quick-cocos2d-x\n-   运行 setup_mac.sh 或者 setup_win.bat\n-   启动 player/mac/player.app 或者 player/win/player.exe\n\n![](player/welcome/res/player_screenshot.png)\n\n~\n\n\n## 更进一步\n\n-   [设置 quick-cocos2d-x 在 Mac 下的编译环境](docs/howto/setup_development_environment_on_mac/zh.html)\n-   [设置 quick-cocos2d-x 在 Windows 下的编译环境](docs/howto/setup_development_environment_on_windows/zh.html)\n-   [如何使用 proj.mac 和 proj.win32 工程](docs/howto/use-project-mac-and-win/zh.html)\n-   [API 文档](docs/api/index.html)\n-   [对 Lua 字节码进行加密](docs/howto/encrypt-lua-code/zh.md)\n']
rabbit-client,🐰 a simple and easy to use android  apm framework (tools),993,https://github.com/SusionSuc/rabbit-client,master,['\n![version](https://img.shields.io/badge/version-1.0.3-brightgreen)\n![license](https://img.shields.io/badge/license-MIT-brightgreen)\n![androidx](https://img.shields.io/badge/support-androidx-brightgreen) \n\n# 功能列表\n\n### 应用测速\n\n可以准确统计应用`Applicaiton`创建耗时、应用冷启动耗时和页面inflate耗时&完全渲染耗时\n\n### FPS分析\n\n可以实时显示FPS并支持分页面分析FPS\n\n### 代码扫描\n\n编译时扫描出一些敏感函数(比如耗时函数)\n\n### 慢函数检测\n\n编译时插桩，准确的统计每一个函数的耗时，并显示运行时调用堆栈。\n\n### 网络请求监控\n\n监控App网络请求,可以很方便的查看返回的`json`数据\n\n### 内存分析\n\n实时显示应用的内存并支持分页面分析内存状态\n\n### 应用crash捕获\n\n支持捕获java层异常\n\n### apk分析与优化\n\n可以准确的分析出apk中的大图、重复文件、apk包大小与内容组成\n\n### 自定义UI\n\n可以方便的接入应用的“后门”\n\n### 数据上报\n\n支持上报所有监控数据, 也支持自定义数据上报逻辑\n\n### 极高的可配置性\n\n提供了众多配置项,可以灵活的检测应用的性能问题\n\n# [使用文档](./documents/README.md)\n\n# 实现原理\n\n实现原理相关文章见:[Rabbit实现原理剖析](https://github.com/SusionSuc/AdvancedAndroid/blob/master/performance/rabbit/README.md)\n\n# 贡献代码\n\n如果你对`rabbit`比较感兴趣，或者发现`rabbit`还有一些功能不够完善，欢迎提`pr`参与到rabbit的开发中!\n\n>个人微信:SusionSuc\n\n# License\n\nRabbit is under the MIT license. See the [LICENSE](./LICENSE) file for details\n\n# 体验包\n\n[点击下载](localRepo/rabbit-demo.apk)\n\n# 使用问题讨论\n\n提issue回复可能比较慢，对rabbit使用有问题欢迎加入微信群。\n\n>由于有很多发小广告的,二维码就不贴了，可以加我微信(SusionSuc)我拉你入群\n\n# 开发中的功能\n\n1. anr捕获 (in alpha)\n2. native crash 捕获 (in developing)\n3. 线程监控 (in developing)\n\n\n']
vue-quasar-admin,Vue 2.0 admin-dashboard based on Quasar-Framework,565,https://github.com/wjkang/vue-quasar-admin,dev,['<p align="center">\n    <a href="https://quasar-framework.org">\n        <img width="200" src="https://quasar-framework.org/images/logo/xxhdpi.png">\n    </a>\n</p>\n\n代码太丑，不建议照搬，可以看一看 RBAC 的实现思路，这是通用的。\n\n## vue-quasar-admin\n&emsp;&emsp;[Quasar-Framework](https://quasar-framework.org/) 是一款基于vue.js开发的开源的前端框架, 它能帮助web开发者快速创建以下网站：响应式网站，渐进式应用，手机应用(通过Cordova)，跨平台应用(通过Electron)。\n&emsp;&emsp;Quasar允许开发者在只写一次代码的情况下发布到多个平台 website, PWA ,Mobile App 和 Electron App 在使用Quasar的时候, 你甚至不需要Hammerjs, Momentjs, 或者Bootstrap, Quasar框架内包含了已经这些东西,你可以很简单就使用到。\n&emsp;&emsp;[vue-quasar-admin](http://jaycewu.coding.me/vue-quasar-admin)是基于Quasar-Framework搭建的一套包含通用权限控制的后台管理系统(目前只针对PC端)。\n\n[![](https://ci.appveyor.com/api/projects/status/github/wjkang/vue-quasar-admin?branch=master&svg=true)]()\n[![vue](https://img.shields.io/badge/vue-2.5.16-brightgreen.svg)](https://github.com/vuejs/vue)\n[![quasar framework](https://img.shields.io/badge/quasar-0.15.14-brightgreen.svg)](https://quasar-framework.org/)\n[![MIT](https://img.shields.io/badge/license-MIT-brightgreen.svg)]()\n\n[online demo ](http://jaycewu.coding.me/vue-quasar-admin)\n\n登录账号:\n\n    admin 123\n\n    test 123456\n\n    website_admin 123456\n\n请不要随意修改账号名称，其他操作随意，可通过右上角"数据初始化"按钮初始化数据\n\n## 系统流程图\n\n![](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/flowchart.png)\n\n## 功能与特点\n\n- 真实后端数据支持\n- 登录/登出\n- 灵活的九宫格布局\n- 收缩左侧菜单栏\n- tag标签导航\n- 面包屑\n- 全屏/退出全屏\n- 动态菜单\n- 菜单按模块划分\n- 通用权限控制\n    - 菜单级权限控制\n    - 接口级权限控制\n    - 元素级权限控制\n- 全局可配置loading效果\n- 网络异常处理\n- 模块\n    - 系统模块\n        - 系统设置\n            - 菜单管理\n        - 权限管理\n            - 功能管理\n            - 角色管理\n            - 角色权限管理\n            - 角色用户管理\n            - 用户角色管理\n        - 组织架构\n            - 部门管理\n            - 职位管理\n        - 用户管理 \n    - 网站模块\n        - CMS\n            - 文章管理\n    - 开发模块\n        - 官方组件\n            - 。。。\n        - 业务组件\n            - sku\n    - 审计日志\n    - 数据初始化\n\n## 文件结构\n```shell\n.\n├── .quasar  Quasar CLI生成的配置\n└── src\n    ├── assets  资源文件\n    ├── components 自定义组件\n    ├── css 样式文件\n    ├── layout 布局组件\n    ├── libs  工具方法\n    ├── router  路由配置\n    ├── store  状态管理\n    ├── service  API管理\n    ├── plugins  需要全局注册的组件、指令、插件\n    └── pages\n        ├── cms \n        │   └── 文章管理\n        ├── develop\n        │   ├── 官方组件\n        │   └── 业务组件\n        ├── organization\n        │   ├── 部门管理\n        │   └── 职位管理\n        ├── other\n        │   └── 审计日志\n        ├── permission\n        │   ├── 功能管理\n        │   ├── 角色管理\n        │   ├── 角色权限管理 \n        │   ├── 角色用户管理\n        │   └── 用户角色管理\n        ├── system  \n        │   ├── 菜单管理\n        ├── user  \n        │   └── 用户管理\n        ├── 403 无权限页面\n        ├── index 首页\n        └── login 登录页\n        \n```\n\n## 安装使用\n\n## Install\n```bush\nnpm install -g vue-cli\n```\n```bush\nnpm install -g quasar-cli\n```\n```bush\nnpm install\n```\n## Run\n### Development\n```bush\nquasar dev\n```\n### Production(Build)\n```bush\nquasar build\n```\n\n### 安装后台程序\n\n\n[后台程序](https://github.com/wjkang/quasar-admin-server)\n\n```bush\ngit clone https://github.com/wjkang/quasar-admin-server.git\n```\n\n## Install\n```bush\nnpm install\n```\n## Run\n### Development\n```bush\nnpm run start\n```\n### Production(Build)\n```bush\nnpm run production\n```\n后端程序使用[koa2](https://github.com/koajs/koa)构建，并且使用[lowdb](https://github.com/typicode/lowdb)持久化数据到JSON文件(使用JSON文件存储是为了快速构建demo)。\n\n## 功能开发步骤（以文章管理为例）\n- 前端\n    - 定义功能码：\n    - post_view  -文章列表查看\n    - post_edit -文章编辑\n    - post_del  -文章删除\n    - 新建文章列表页  post.vue\n    - 新增路由\n    - 使用菜单管理功能新增"文章管理"的相关菜单，菜单名称必须与上一步新增的路由的name字段一致。权限码填定义好的"文章列表查看"功能对应的权限码（菜单级权限控制）\n    - 使用功能管理在新建的菜单下录入定义好的功能名称及功能码\n    - 配置角色与用户\n    - 在角色权限管理为相应的角色设置功能权限\n- 后端\n    - db.json文件新增文章存储结构\n    - services下新增postService.js,编写对db.json文件的操作\n    - controllers下新增post.js,引入postService.js做相关操作\n    - main-routes.js 增加相关路由,使用PermissionCheck中间件进行后端接口级的权限控制(可使用功能码或角色码)\n- 前端\n    - service下新增post.js，配置API相关操作，配置loading字段实现自定义loading效果，permission字段可配置功能编码与角色编码（实现前端接口级权限控制）\n    - 回到post.vue文件，引入API访问文件，编写业务代码\n    - 使用v-permission指令控制页面元素的是否显示，可使用功能编码与角色编码（实现元素级权限控制）\n    - store app模块下配置dontCache，控制页面是否缓存\n    \n可多细节可查看源码\n\n## 效果展示\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/1.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/2.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/3.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/4.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/5.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/6.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/7.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/8.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/9.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/10.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/11.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/12.jpg)\n\n![image](https://raw.githubusercontent.com/wjkang/vue-quasar-admin/master/screenshot/13.jpg)\n\n\n']
TSeer,A high available service discovery & registration & fault-tolerance framework,669,https://github.com/Tencent/TSeer,master,['\ufeff[Click me switch to English version](README.en.md)\r\n\r\n## TSeer\r\n\r\nTSeer是一套服务注册发现容错的解决方案，是对Tars名字服务功能的轻量化。在腾讯浏览器、应用宝、管家、手机书城、腾讯文学、广点通等众多业务中广泛采用，目前日均承载百亿级别的请求量。\r\n\r\n在服务发现的核心功能之上，TSeer还支持多种优秀的负载均衡算法，提供可靠的故障容错策略。针对发展迅速的海量服务，还支持就近接入，按SET逻辑分组，全量调度三种不同的路由策略。实现了高度智能的调度优化，有效解决了业务跨地区跨机房调用等难题,极大提升服务的可用性和调用质量。\r\n\r\nTSeer拥有web管理界面和API接入两种方式可供用户根据需求自由选择，通过代理节点和代理服务器机制为需要频繁发布变更的业务提供透明的服务发现功能，学习成本很低，操作也很方便，对于业务维护人员十分友好。\r\n\r\n同时TSeer轻巧灵便，对业务的侵入性低，非Tars服务亦可无缝接入,是微服务框架中优秀的名字服务解决方案。\r\n\r\n产品详细说明文档参见[TSeer产品介绍](Introduction.md)\r\n\r\n## 支持平台\r\n\r\n> * Linux\r\n\r\n## 支持语言\r\n\r\n> * JAVA\r\n> * C++\r\n> * 更多版本持续开发中...\r\n\r\n## 安装指引\r\n\r\nTSeer提供了一键部署脚本，安装方便快捷。详见[TSeer安装文档](Tseer_Install.md)\r\n\r\n## api\r\n\r\n[c++ api](docs/cplus-api-quickstart.md)\r\n\r\n[java api](docs/seer-api-java-quickstart.md)\r\n\r\n']
NoahV,An efficient front-end application framework based on vue.js,640,https://github.com/baidu/NoahV,master,['# NoahV\n\n简体中文 | [English](./README_EN.md)\n\n<a href="https://travis-ci.com/baidu/NoahV">\n\t<img src="https://img.shields.io/travis/com/baidu/NoahV?style=flat-square"  alt="build">\n</a>\n\n<a href="https://github.com/baidu/NoahV/blob/master/LICENSE">\n\t<img src="https://img.shields.io/github/license/baidu/NoahV.svg?style=popout-square" alt="license">\n</a>\n\n<a href="https://github.com/baidu/NoahV/issues">\n\t<img src="https://img.shields.io/github/issues/baidu/NoahV.svg?style=flat-square" alt="open issues">\n</a>\n\n<a href="https://github.com/baidu/NoahV/commits/master">\n\t<img src="https://img.shields.io/github/commit-activity/w/baidu/NoahV.svg?style=flat-square" alt="commit">\n</a>\n\nNoahV是一个基于vue开发的前端应用框架，主要适用于常见的后台管理系统，文档地址：[https://baidu.github.io/NoahV](https://baidu.github.io/NoahV), 如访问速度较慢，可尝试访问如下地址：[https://noahv.gitee.io/](https://noahv.gitee.io/)\n\n特性：\n\n* 上手简单，提供常用的各类组件，快速开始前端开发\n* 导航栏、页面布局JSON配置，无需代码逻辑开发\n* API数据模拟和API数据代理，让前后端不再耦合，联调更简单，效率更高 \n* 数据仪表盘功能，满足常见的数据可视化需求，助力数据分析场景\n* 内置模版，只需简单配置就可以开发出想要的页面，非前端同学也能快速上手开发\n* 实用的脚手架功能，项目初始化、模板复用、模拟数据创建、调试server启动、框架升级一行命令通通搞定\n\n## 快速开始\n\nNoahV框架依赖Nodejs 6.0，在执行如下步骤之前，请确保已经安装 <a href="https://nodejs.org/en/">Node.js</a> v6.0 或以上。\n\n1.安装脚手架工具\n\n```shell\n# 安装noahv-cli\n$ npm install noahv-cli -g\n\n# 查看使用帮助\n$ noahv --help\n```\n\n2.初始化一个项目\n\n```shell\n# 创建一个空目录，进入目录中，运行noahv init 命令创建一个通用项目\n$ mkdir project && cd project && noahv init\n\n# 运行noahv init --dashboard 命令创建一个包含仪表盘功能的项目\n$ mkdir project && cd project && noahv init --dashboard\n```\n\n3.运行项目\n\n```shell\n# 在项目根目录启动调试server\n$ noahv start \n```\n\n4.复用模板\n\n```shell\n# 在项目根目录复用模板创建页面\n$ noahv create \n\n# 根据提示选择需要创建的页面类型，目前支持form、list、filterList、chart四种模板类型\n```\n\n详细信息请查看 [模板使用](https://baidu.github.io/NoahV/#/guide/tpl)\n\n更多关于框架的使用请查看 [NoahV开发指南](https://baidu.github.io/NoahV/#/guide/about)\n\n\n## 讨论\n\n| 微信群 |    GitHub issues                                               |\n| ---------- | ------------------------------------------------------------ |\n| <img src="https://noahv.cdn.bcebos.com/github%2Ff414efb2572218cd6756ca483.jpg" width="120px"> | [issues](https://github.com/baidu/NoahV/issues) |\n\n## 参与共建\n\n欢迎大家一起参与NoahV的共建，详情请参考[贡献指南](./CONTRIBUTING.md).\n\n## License\n\nApache License 2.0\n\n']
electron-egg,A simple, cross platform, enterprise desktop software development framework,763,https://github.com/dromara/electron-egg,master,['# EE框架 3.0\n[![star](https://gitee.com/dromara/electron-egg/badge/star.svg?theme=gvp)](https://gitee.com/dromara/electron-egg/stargazers)\n\n<div align=center>\n<img src="https://wallace5303.gitee.io/ee/images/electron-egg/logo.png" width="150" height="150" />\n</div>\n\n<div align=center>\n<h3><strong>一个入门简单、跨平台、企业级桌面软件开发框架</strong></h3>\n<h4>框架下载量突破10万+，新官网正在建设中...</h4>\n</div>\n<br>\n\n## 🌏 [English](https://www.yuque.com/u34495/ee-doc) | [中文](https://www.yuque.com/u34495/mivcfg)\n\n## 📋 介绍\n- 🍩 **为什么使用？** 桌面软件（办公方向、 个人工具），仍然是未来十几年PC端需求之一，提高工作效率\n- 🍉 **简单：** 只需懂 JavaScript\n- 🍑 **愿景：** 所有开发者都能学会桌面软件研发\n- 🍰 **gitee：** https://gitee.com/dromara/electron-egg **3000+**\n- 🍨 **github：** https://github.com/dromara/electron-egg **700+**\n- 🏆 码云最有价值开源项目\n    ![](https://wallace5303.gitee.io/ee/images/electron-egg/ee-zs.png)    \n\n## ❤️支持\n### 如果你觉得electron-egg不错，可以捐赠请维护者吃包辣条~，在此表示感谢^_^\n[Gitee上捐赠](https://gitee.com/dromara/electron-egg)\n\n[捐赠给Dromara组织](https://dromara.gitee.io/donate.html)\n\n## 📚 文档\n- [教程文档](https://www.yuque.com/u34495/mivcfg)\n\n## 📦 特性\n1. 🍄 跨平台：一套代码，可以打包成windows版、Mac版、Linux版、国产UOS、Deepin、麒麟等\n2. 🌹  架构：单进程/模块化/多任务(进程，线程，渲染进程)，让开发大型项目变的简单。\n3. 🌱 简单高效：只需学习 js 语言\n4. 🌴 前端独立：理论上支持任何前端技术，如：vue、react、html等等\n5. 🍁 工程化：可以用前端、服务端的开发思维，来编写桌面软件\n6. 🌷 高性能：事件驱动、非阻塞式IO\n7. 🌰 功能丰富：配置、通信、插件、数据库、升级、打包、工具... 应有尽有\n8. 💐 安全：支持字节码加密、压缩混淆加密\n9. 🌻 功能demo：桌面软件常见功能，框架集成或提供demo\n\n## ✈️ 使用场景\n\n### 1. 🚀 常规桌面软件\n- 🚖 windows平台\n\n    ![](https://wallace5303.gitee.io/ee/images/electron-egg/home.png)\n\n- 🚍 macOS平台    \n    ![](https://wallace5303.gitee.io/ee/images/electron-egg/mac-socket.png)\n\n- 🚔 linux平台 - 国产UOS、Deepin\n    ![](https://wallace5303.gitee.io/ee/images/electron-egg/uos-home.png)\n\n- 🚔 linux平台 - ubuntu\n    ![](https://wallace5303.gitee.io/ee/images/electron-egg/ubuntu-db.png)\n\n### 🚐 2. vue、react、angular、web 转换成桌面软件\n- 🚙 vue-ant-design（本地）\n\n    ![](https://wallace5303.gitee.io/ee/images/electron-egg/vue-antd.png)\n\n- 🚙 禅道项目管理（web项目地址）\n\n    ![](https://wallace5303.gitee.io/ee/images/electron-egg/ee-project-7.png)\n\n### 🚂 3. 游戏（h5相关技术开发）\n- 🚊 忍者100层\n\n    ![](https://wallace5303.gitee.io/ee/images/electron-egg/ee_game_1.png)\n\n\n## 📒 开始使用\n\n- ✒️ [安装文档](https://www.yuque.com/u34495/mivcfg/ltgte9)\n    \n## 🐶 项目案例\n- 🐟 EE框架已经应用于医疗、学校、政务、股票交易、ERP、娱乐、视频、企业等领域客户端\n\n- 🐸 英雄联盟助手\n    ![](https://wallace5303.gitee.io/ee/images/electron-egg/serendipity/lol-zhanji.png)\n\n- [更多项目](https://www.yuque.com/u34495/mivcfg/ep4otg)\n\n## 💬 交流\n1. [讨论](https://www.yuque.com/u34495/mivcfg/gg691g)\n\n## 📌 关于pr\n请前往[GitHub项目](https://github.com/dromara/electron-egg)提pr（避免代码同步后，pr被覆盖掉），感谢！\n\n地址：https://github.com/dromara/electron-egg\n\n## 📔 框架核心包 ee-core\nee-core：[https://github.com/wallace5303/ee-core](https://github.com/wallace5303/ee-core)\n\n## 📚 Dromara 成员项目\n\n<p align="center">\n<a href="https://gitee.com/dromara/TLog" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/tlog2.png" title="一个轻量级的分布式日志标记追踪神器，10分钟即可接入，自动对日志打标签完成微服务的链路追踪" width="15%">\n</a>\n<a href="https://gitee.com/dromara/liteFlow" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/liteflow.png" title="轻量，快速，稳定，可编排的组件式流程引擎" width="15%">\n</a>\n<a href="https://hutool.cn/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/hutool.jpg" title="小而全的Java工具类库，使Java拥有函数式语言般的优雅，让Java语言也可以“甜甜的”。" width="15%">\n</a>\n<a href="https://sa-token.dev33.cn/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/sa-token.png" title="一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！" width="15%">\n</a>\n<a href="https://gitee.com/dromara/hmily" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/hmily.png" title="高性能一站式分布式事务解决方案。" width="15%">\n</a>\n<a href="https://gitee.com/dromara/Raincat" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/raincat.png" title="强一致性分布式事务解决方案。" width="15%">\n</a>\n</p>\n<p align="center">\n<a href="https://gitee.com/dromara/myth" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/myth.png" title="可靠消息分布式事务解决方案。" width="15%">\n</a>\n<a href="https://cubic.jiagoujishu.com/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/cubic.png" title="一站式问题定位平台，以agent的方式无侵入接入应用，完整集成arthas功能模块，致力于应用级监控，帮助开发人员快速定位问题" width="15%">\n</a>\n<a href="https://maxkey.top/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/maxkey.png" title="业界领先的身份管理和认证产品" width="15%">\n</a>\n<a href="http://forest.dtflyx.com/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/forest-logo.png" title="Forest能够帮助您使用更简单的方式编写Java的HTTP客户端" width="15%">\n</a>\n<a href="https://jpom.io/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/jpom.png" title="一款简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件" width="15%">\n</a>\n<a href="https://su.usthe.com/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/sureness.png" title="面向 REST API 的高性能认证鉴权框架" width="15%">\n</a>\n</p>\n<p align="center">\n<a href="https://easy-es.cn/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/easy-es2.png" title="傻瓜级ElasticSearch搜索引擎ORM框架" width="15%">\n</a>\n<a href="https://gitee.com/dromara/northstar" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/northstar_logo.png" title="Northstar盈富量化交易平台" width="15%">\n</a>\n<a href="https://hertzbeat.com/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/hertzbeat_brand.jpg" title="易用友好的云监控系统" width="15%">\n</a>\n<a href="https://plugins.sheng90.wang/fast-request/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/fast-request.gif" title="Idea 版 Postman，为简化调试API而生" width="15%">\n</a>\n<a href="https://www.jeesuite.com/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/mendmix.png" title="开源分布式云原生架构一站式解决方案" width="15%">\n</a>\n<a href="https://gitee.com/dromara/koalas-rpc" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/koalas-rpc2.png" title="企业生产级百亿日PV高可用可拓展的RPC框架。" width="15%">\n</a>\n</p>\n<p align="center">\n<a href="https://async.sizegang.cn/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/gobrs-async.png" title="配置极简功能强大的异步任务动态编排框架" width="15%">\n</a>\n<a href="https://dynamictp.cn/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/dynamic-tp.png" title="基于配置中心的轻量级动态可监控线程池" width="15%">\n</a>\n<a href="https://www.x-easypdf.cn" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/x-easypdf.png" title="一个用搭积木的方式构建pdf的框架（基于pdfbox）" width="15%">\n</a>\n<a href="http://dromara.gitee.io/image-combiner" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/image-combiner.png" title="一个专门用于图片合成的工具，没有很复杂的功能，简单实用，却不失强大" width="15%">\n</a>\n<a href="https://www.herodotus.cn/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/dante-cloud2.png" title="Dante-Cloud 是一款企业级微服务架构和服务能力开发平台。" width="15%">\n</a>\n<a href="https://dromara.org/zh/projects/" target="_blank">\n<img src="https://oss.dev33.cn/sa-token/link/dromara.png" title="让每一位开源爱好者，体会到开源的快乐。" width="15%">\n</a>\n</p>']
grouparoo,🦘 The Grouparoo Monorepo - open source customer data sync framework,682,https://github.com/grouparoo/grouparoo,main,['core/README.md']
sula,🚀  Pluggable enterprise-level configurable framework based on antd.,774,https://github.com/umijs/sula,master,['简体中文 | [English](https://github.com/umijs/sula/blob/master/README.en-US.md)\n\n# sula (beta)\n\n> Sula 当前还处于 beta 社区内测阶段，建议在对内生产项目使用，对外生产项目暂时不要使用。\n\n## 旧文档地址\n\n- https://sula-sula.vercel.app/\n\n## 里程碑\n\n非常抱歉，由于最近业务爆发导致没有按照既定里程碑发布 sula 1.0 和 builder，我们根据目前看到业务排期修改里程碑，如下，\n\n- 10月30日：发布 1.0 正式版，以及配套文档\n- 11月6日：开源 Sula Builder 前端部分（后端部分还无法给出准确时间点）\n\n[![codecov](https://codecov.io/gh/umijs/sula/branch/master/graph/badge.svg)](https://codecov.io/gh/umijs/sula) [![GitHub Actions status](https://github.com/umijs/sula/workflows/Node%20CI/badge.svg)](https://github.com/umijs/sula) ![npm](https://img.shields.io/npm/v/sula) ![npm](https://img.shields.io/npm/dm/sula)\n\n## 特点\n\n- 💻 **产品级配置**，sula 通过行为链管理实现了渲染组件与用户行为的连接，实现了行为配置，极大扩展了配置范围。\n- 🌴 **语义化**，通过渲染插件与行为插件的组合，一段段配置可以语义化的描述UI呈现及用户行为动作。\n- 🚀 **开发提效**，sula 提供 4 大配置模板，可以满足80%以上的中台场景，提效明显。\n- 🔌 **高扩展性**，sula 通过 ctx 实现了插件与核心组件的通信，配置规则灵活且易于扩展。\n- 📦 **开箱即用**，sula 内置请求插件与灵活扩展点、国际化，路由等能力，让开发者更加专注核心功能的开发。\n- 📀 **自动 loading**，sula 不侵入式帮助用户完成按钮、超链接、图标点击过程的 loading 管理。\n\n## 📺 视频教程\n\n- [表单快速配置](https://www.bilibili.com/video/BV1rC4y1p71m/) 3分钟\n- [查询表格快速配置](https://www.bilibili.com/video/BV1qA411q7kb/) 4分钟\n- [Sula-Cooker 的使用](https://www.bilibili.com/video/BV1jz4y197EG/) 3分钟\n\n## 🔥 Sula 可视化搭建平台（尝鲜版）\n\n- [sula-builder](https://build.sula.now.sh)\n\n## 🍳 Sula 在线配置化工具\n\n仅通过 JSON 配置就可以完成整个项目的「产品级配置」。\n\n- [sula-cooker](https://cook.sula.now.sh)\n\n<div>\n  <img src="https://img.alicdn.com/tfs/TB1l6A_HXY7gK0jSZKzXXaikpXa-2680-1412.png" width="49%"/>\n  <img src="https://img.alicdn.com/tfs/TB1VWE5HkT2gK0jSZFkXXcIQFXa-2682-1412.png" width="49%"/>\n</div>\n\n## 🥗 Real Sula\n\n[sula-real](https://github.com/umijs/sula-real) 是面向 admin 中台应用场景的 low pro code 解决方案，[预览地址](https://real.sula.now.sh/)。\n\n## 🍙 例子\n\n- [sula-samples](https://github.com/umijs/sula-samples) by umi\n- [sula-samples-cra](https://github.com/umijs/sula-samples-cra) by create-react-app\n\n## 📦 安装\n\n```bash\nnpm i sula --save\n```\n\n## 🔨 用法\n\n```js\nimport { Form, Table, CreateForm, QueryTable, StepForm, StepQueryTable } from \'sula\';\n```\n\n## 📋 待完成\n\n- [x] umi-plugin-sula\n- [ ] 最终的模板设计\n- [ ] 更好的 typescript 支持\n- [ ] 文档\n\n## 🔗 友情链接\n\n- [Sula Blogs](https://zhuanlan.zhihu.com/sulajs)\n\n\n## 讨论群\n\n<div>\n  <img src="https://img.alicdn.com/imgextra/i4/O1CN01YCq5ye21DbizEsE8e_!!6000000006951-2-tps-828-1068.png" width="300" />\n</div>\n']
modular,A modular front end development framework ,578,https://github.com/jpmorganchase/modular,main,['packages/modular-scripts/README.md']
vole,SpringCloud Micro service business framework , SpringCloud 微服务商业脚手架,829,https://github.com/gavenwangcn/vole,master,['<img src="./docs/images/logo.png" height=80></img>\n\n[![ASF2](http://img.shields.io/badge/license-ASF2-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0.txt)\n\nVole\n-------\nVole 是一个基于最新的SpringCloud2.0的微服务商业开发脚手架->(非教学版),支持公司全方位应用架构搭建\n\n## Features\n* 基于Eureka的服务管理\n* 基于Spring-Cloud-Config的配置管理\n* 基于Spring-Oauth2的jwt鉴权服务\n* 基于Zuul的网关服务\n* 基于Elastic-Job的分布式job\n* 基于ShardingSphere的分库分表\n* 基于SpringAdmin的监控服务\n* 基于Zipkin的链路监控服务\n* 基于SpringCloudStream的消息驱动\n* 基于SpringSecurity的cookie的sso统一登陆服务\n* 支持分布式后台portal统一服务\n* 支持网关的动态配置和流量控制\n* 支持SpringSession的session管理\n* 支持Redis的数据服务缓存\n* 支持Hystrix的服务熔断管理\n* 支持swagger2的api管理\n* 支持Kafka,RabbitMQ,Rocketmq的消息接入\n* 支持Spring-Oauth2的sso\n* 支持Spring-Security的cas客户端\n* 支持FastDfs的客户端\n\n\n## Docker\n使用 docker-compose 部署Docker镜像\n\n\n## 架构\n![](./docs/images/arch.png)\n\n\n## 组件\nvole由`eureka`, `auth`,`config`,`gateway`,`mps`,`passport`,`portal`,`modules`组成\n\n### Eureka\nEureka服务发现管理,支持高可用配置[更多](./docs/eureka.md)。\n\n### Auth\nSpring Oauth2鉴权管理支持jwt鉴权[更多](./docs/auth.md)。\n\n### Config\nSpring config的配置服务管理[更多](./docs/config.md)。\n\n### Gateway\nZuul的网关服务，支持动态配置网关[更多](./docs/gateway.md)。\n\n### Mps\n会员管理中心[更多](./docs/mps.md)。\n\n### Passport\n后台统一登陆管理[更多](./docs/passport.md)。\n\n### Portal\n后台管理中心[更多](./docs/portal.md)。\n\n### Modules\n相关任务，消息，监控等组件[更多](./docs/modules.md)。\n\n# 交流方式-微信\n<img src="./docs/images/wx.png" height=400></img>\n']
web-flash,web-flash --  Admin Framework and Mobile Website Based on Spring Boot and Vue.js,1225,https://github.com/enilu/web-flash,master,["# 前言\n[![Spring Boot](https://img.shields.io/badge/spring--boot-2.3.11.RELEASE-brightgreen)](https://github.com/spring-projects/spring-boot)\n[![vue](https://img.shields.io/badge/vue-2.6.10-brightgreen.svg)](https://github.com/vuejs/vue)\n[![element-ui](https://img.shields.io/badge/element--ui-2.11.0-brightgreen.svg)](https://github.com/ElemeFE/element)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)](https://github.com/enilu/web-flash/blob/master/LICENSE)\n[![GitHub release](https://img.shields.io/github/release/enilu/web-flash.svg)](https://github.com/enilu/web-flash/releases)\n[![donate](https://img.shields.io/badge/%24-donate-ff69b4.svg)](./docs/donate.md)\n[![Gitee stars](https://gitee.com/enilu/web-flash/badge/star.svg?theme=social)](https://gitee.com/enilu/web-flash)\n[![GitHub stars](https://img.shields.io/github/stars/enilu/web-flash.svg?style=social&label=Stars)](https://github.com/enilu/web-flash)\n[![Join the chat at https://gitter.im/web-flash/community](https://badges.gitter.im/web-flash/community.svg)](https://gitter.im/web-flash/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n- web-flash是一个基于[Spring Boot](https://spring.io/projects/spring-boot/)和[Vue.js](https://cn.vuejs.org)的web系统，包含了基于[element](https://element.eleme.cn/#/zh-CN)搭建的后台管理系统和基于[vux](https://vux.li)搭建的手机端h5站点\n- web-flash具备后台管理类系统的通用的基础功能，而且提供了基于idea intellij的的代码生成插件，可以一键生成前后端页面。\n- web-flash提供了一个后台管理系统和前端h5站点系统\n- 另提供Material Design风格的单体版：[material-admin](https://github.com/enilu/material-admin)\n- 另提供[web-flash spring cloud版本](https://gitee.com/enilu/web-flash-spring-cloud)\n## 目录说明\n- flash-api 后台api服务\n- flash-vue-admin 基于vuejs的后台管理系统\n- flash-vue-h5 移动端内容系统，基于后台管理CMS内容管理模块的内容进行展示。\n- flash-core 基础模块，包括工具类，dao，service，bean等内容\n- flash-generator 代码生成模块,配合IDEA 代码生成插件[webflash-generator](https://plugins.jetbrains.com/plugin/12648-webflash-generator)使用效果更好\n- flash-workflow 基于activiti实现工作流功能\n## 演示\n- 后台管理(vue版本) [http://flashadmin.enilu.cn](http://flashadmin.enilu.cn)\n- 手机端 [http://flash-mobile.enilu.cn/#/index](http://flash-mobile.enilu.cn/#/index) 打开浏览器后使用debug模式的手机视图模式浏览\n\n## 技术选型\n- 核心框架：Spring Boot\n- 数据库层：Spring data jpa\n- 数据库连接池：Druid\n- 缓存：Ehcache\n- 前端：基于Vue.js的Element（后端）和vux（手机端） \n- 工作流：activiti\n\n\n## 包含的功能\nweb-flash包含了成熟的后台管理功能和手机端h5内容站点系统\n- 部门管理\n- 用户管理\n- 角色管理\n- 菜单管理：配置菜单功能\n- 权限分配：为指定的角色配置特定的功能菜单\n- 参数管理：维护系统参数，并缓存系统参数提供高效的读取\n- 数据字典管理：配置维护数据字典\n- 定时任务管理：编写、配置、执行定时任务\n- 业务日志：通过注解的方式记录用户操作日志，并提供日志查询功能\n- 登录日志：查看用户登录登出日志\n- cms内容管理，配合flash-vue-h5提供了手机端内容展示系统\n- 消息管理：配置消息模板，发送短信，邮件消息\n- 工作流：流程定义，发起申请，待办任务\n- 基于idea插件的代码生成\n\n\n## 使用\n- 克隆本项目\n- 导入idea或者eclipse\n- 创建数据库：web-flash\n     ```sql\n        CREATE DATABASE IF NOT EXISTS webflash DEFAULT CHARSET utf8 COLLATE utf8_general_ci; \n        CREATE USER 'webflash'@'%' IDENTIFIED BY 'webflash190602@ABC';\n        GRANT ALL privileges ON webflash.* TO 'webflash'@'%';\n        flush privileges;\n     ```\n- 在开发环境中配置了系统启动后自动创建数据库和初始化数据，所以不需要开发人员手动初始化数据库\n- 确保开发工具下载了lombok插件\n- 修改flash-api中数据库连接配置\n- 启动flash-api，访问http://localhost:8082/swagger-ui.html ， 保证api服务启动成功\n- 进入flash-vue-admin目录\n    - 运行 npm install --registry=https://registry.npmmirror.com\n    - 运行npm run dev\n    - 启动成功后访问 http://localhost:9528 ,登录，用户名密码:admin/admin     \n- 后台管理运行效果图：\n    ![admin](https://gitee.com/enilu/web-flash/raw/master/docs/vuejs.gif)\n- 进入flash-vue-h5目录\n    - 运行 npm install --registry=https://registry.npmmirror.com\n    - 运行npm run dev\n    - 启动成功后访问 http://localhost:8088/#/index\n- 手机端运行效果图：\n    ![mobile](https://gitee.com/enilu/web-flash/raw/master/docs/flash-mobile.gif)\n\n## 在线文档\n- [http://webflash.enilu.cn](http://webflash.enilu.cn)\n\n## 交流\n- Gitter: [Gitter channel](https://gitter.im/web-flash/community)\n- QQ:752844606\n\n[Change Log](http://enilu.gitee.io/web-flash/other/changeLog.html)\n"]
InChat,一个轻量级、高效率的支持多端（应用与硬件Iot）的可分布式、异步网络应用通讯框架,731,https://github.com/AwakenCN/InChat,master,['\r\n<div align=center>\r\n\r\n![Image text](https://raw.githubusercontent.com/UncleCatMySelf/img-myself/master/img/inchat/logo.png)\r\n\r\n[![官网](https://img.shields.io/badge/%E5%AE%98%E7%BD%91-page-blue)](https://awakencn.github.io/InChat/)\r\n[![QQ群](https://img.shields.io/badge/QQ%E7%BE%A4-628793702-yellow.svg)](https://jq.qq.com/?_wv=1027&k=57X4L74)\r\n[![作者](https://img.shields.io/badge/%E4%BD%9C%E8%80%85-MySelf-blue.svg)](https://github.com/UncleCatMySelf)\r\n[![Netty入门](https://img.shields.io/badge/%E5%AD%A6%E4%B9%A0-Netty%E5%85%A5%E9%97%A8-ff69b4.svg)](doc/study/mulu.md)\r\n[![Maven](https://img.shields.io/badge/Maven-1.1.4-orange)](https://mvnrepository.com/artifact/com.github.UncleCatMySelf/InChat)\r\n\r\n\r\n</div>\r\n\r\n## 申明\r\n\r\n本项目入驻[**AwakenCN**](https://github.com/AwakenCN)开源组织，后续将继续更新调整，部分API后续会更改，感谢每一位朋友的支持与关注。\r\n\r\n## 简介\r\n\r\n***(InChat)Iot Netty Chat***\r\n\r\n\r\n一个轻量级、高效、分布式的异步通信框架, 支持聊天和物联网, 您可以使用它来快速构建具有后台的聊天服务器, 并快速自定义自己的通信 api, 包括具有不同的通讯可以支持的协议。\r\n\r\n## [项目源码学习](doc/javadoc/javadoc.md)\r\n\r\n## Maven版本\r\n\r\n功能列表：\r\n\r\n> * 用户token登录校验\r\n> * 自我聊天\r\n> * 点对点聊天\r\n> * 群聊\r\n> * 获取在线用户数与用户标签列表\r\n> * 发送系统通知\r\n> * 1.1.3版本新增SSL加密，分布式测试点对点、群聊功能（分布式为试用版，暂不支持SSL加密）\r\n> * 1.1.4版本修改数据存储问题，并提供SpringBoot-Demo\r\n\r\n* [基于InChat的SpringBoot版本通讯聊天数据存储Demo，附带详细流程说明（InChat1.1.4）](https://unclecatmyself.github.io/2019/08/23/inchatby4/)\r\n\r\n```\r\n<dependency>\r\n    <groupId>com.github.UncleCatMySelf</groupId>\r\n    <artifactId>InChat</artifactId>\r\n    <version>1.1.4</version>\r\n</dependency>\r\n```\r\n\r\n**[历史版本说明](doc/go.md)**\r\n\r\n### 教程\r\n\r\n*  [Netty入门与源码讲解](doc/study/mulu.md)\r\n*  [官方案例](https://github.com/AwakenCN/InChat/tree/official-demo) \r\n\r\n### 项目相关\r\n\r\n> * [项目设计思路](doc/design_cn.md)\r\n> * [登录模块详细设计](doc/detail/Login-cn.md)\r\n> * [登录模块整改版V0.1](doc/detail/login_rect.md)\r\n> * [项目研发日志更新](doc/Project-Log-cn.md)\r\n\r\n### 相关资料（欢迎贡献）\r\n\r\n* [QQ群建议贡献](doc/advice/advice.md)\r\n\r\n## 效果展示\r\n\r\n![加密](https://raw.githubusercontent.com/UncleCatMySelf/img-myself/master/img/inchatGIF/%E5%8A%A0%E5%AF%86.gif)\r\n![分布式](https://raw.githubusercontent.com/UncleCatMySelf/img-myself/master/img/inchatGIF/%E5%88%86%E5%B8%83%E5%BC%8F.gif)\r\n![demo](https://github.com/UncleCatMySelf/img-myself/blob/master/img/inchatGIF/inchat_demo.gif)\r\n![log](https://github.com/UncleCatMySelf/img-myself/blob/master/img/inchatGIF/inchat_log.gif)\r\n![postman](https://github.com/UncleCatMySelf/img-myself/blob/master/img/inchatGIF/inchat_postman.gif)\r\n![send](https://github.com/UncleCatMySelf/img-myself/blob/master/img/inchatGIF/inchat_send.gif)\r\n\r\n## 下载地址\r\n\r\n下载地址：https://github.com/UncleCatMySelf/SBToNettyChat/releases\r\n\r\n## 下载 & 问题\r\n\r\nhttps://github.com/UncleCatMySelf/SBToNettyChat/issues\r\n\r\n## 关于贡献\r\n\r\n[!Noseparte说: 开源项目InChat贡献记](https://www.imooc.com/article/272573)\r\n\r\n## 公众号：Java猫说\r\n\r\n**学习交流群：728698035**\r\n\r\n> 现架构设计（码农）兼创业技术顾问，不羁平庸，热爱开源，杂谈程序人生与不定期干货。\r\n\r\n![Image Text](https://user-gold-cdn.xitu.io/2018/12/28/167f41f1a5729856?w=344&h=344&f=jpeg&s=8231)\r\n\r\n']
ui-libraries,A collection of UI Frameworks and their platform implementations.,781,https://github.com/Zaelot-Inc/ui-libraries,master,['\n# UI Libraries\n\nA collection of UI Frameworks and their platform implementations.\n\n[Inspired by this HN thread.](https://news.ycombinator.com/item?id=18234867)\n\n  \n\n## Contributing\n\nIf you would like to add libraries, please feel free to create a `PR` with the edits. Please *only open source, no paid libraries*. Also please try to keep the markdown consistent.\n\n  \n\n# Libraries by UI Kit\n\n**Table of Contents**\n\n1.  [Material](#material)\n\n2.  [Bootstrap](#bootstrap)\n\n3.  [Fabric](#fabric)\n\n4.  [Lightning Design System](#lightning)\n\n5.  [Elastic](#elastic)\n\n6.  [Foundation](#foundation)\n\n7.  [Semantic](#semantic)\n8.  [Tailwind](#tailwind)\n9.  [AntD](#antd)\n\n10.  [Miscellaneous](#miscellaneous)\n\n  \n\n## Material\n\n**Project Website:** https://material.io/\n\n### Sketch\n\n-  [Material Theme Editor](https://material.io/tools/theme-editor/)\n\n-  [sketch-material](https://github.com/websiddu/sketch-material)\n\n-  [material-kit](https://github.com/creativetimofficial/material-kit/tree/sketch)\n\n### Photoshop\n\n-  [material-kit](https://github.com/creativetimofficial/material-kit/tree/photoshop)\n\n### Figma\n\n-  [Material Kit Figma](https://demos.creative-tim.com/material-kit-figma/presentation.html)\n\n### HTML/CSS\n\n-  [Material Design Lite](https://getmdl.io/index.html)\n\n### Wordpress\n\n-  [HESTIA](https://themeisle.com/themes/hestia/?ref=creativetim)\n\n### Angular\n\n-  [Angular Material](https://material.angular.io)\n\n### React\n\n-  [material-ui](https://material-ui.com/)\n\n-  [react-toolbox](https://github.com/react-toolbox/react-toolbox)\n\n-  [material-kit](https://www.creative-tim.com/product/material-kit-react)\n\n### React-Native\n\n-  [react-native-material-kit](https://github.com/xinthink/react-native-material-kit)\n\n-  [react-native-material-ui](https://github.com/xotahal/react-native-material-ui)\n\n-  [react-native-paper](https://github.com/callstack/react-native-paper)\n\n-  [material-kit](https://www.creative-tim.com/product/material-kit-react-native)\n\n### Vue\n\n-  [vuetify](https://github.com/vuetifyjs/vuetify)\n\n-  [vue-material](https://github.com/vuematerial/vue-material)\n\n-  [material-kit](https://www.creative-tim.com/product/vue-material-kit)\n\n  \n\n## Bootstrap\n\n**Project Website:** https://getbootstrap.com/\n\n### HTML/CSS\n\n-  [Bootstrap](https://getbootstrap.com/)\n\n### Angular\n\n-  [NG Bootstrap](https://ng-bootstrap.github.io/)\n\n-  [UI Bootstrap](https://angular-ui.github.io/bootstrap/)\n\n### React\n\n-  [react-bootstrap](https://react-bootstrap.github.io/)\n\n-  [reactstrap](https://reactstrap.github.io/)\n\n-  [Create-React-App Bootstrap Docs](https://facebook.github.io/create-react-app/docs/adding-bootstrap)\n\n### Vue\n\n-  [bootstrap-vue](https://github.com/bootstrap-vue/bootstrap-vue)\n\n  \n\n## Fabric\n\n**Project Website:** https://developer.microsoft.com/en-us/fabric\n\n### Sketch\n\n-  [Fabric Design Sketch](https://docs.microsoft.com/en-us/office/dev/add-ins/design/design-toolkits)\n\n### Adobe XD\n\n-  [Fabric Design Adobe XD](https://docs.microsoft.com/en-us/office/dev/add-ins/design/design-toolkits)\n\n### HTML/CSS\n\n-  [Fabric Core](https://developer.microsoft.com/en-us/fabric#/get-started#core)\n\n-  [Clippy JS](https://www.smore.com/clippy-js)\n\n### React\n\n-  [Fabric React](https://developer.microsoft.com/en-us/fabric#/components)\n\n  \n\n## Lightning\n\n**Project Website:** https://www.lightningdesignsystem.com/\n\n### Sketch\n\n-  [Scroll down on this page](https://www.lightningdesignsystem.com/downloads/)\n\n### HTML/CSS\n\n-  [HTML/CSS](https://www.lightningdesignsystem.com/getting-started/)\n\n### Angular\n\n-  [NG-Lightning](https://ng-lightning.github.io/ng-lightning/#/)\n\n### React\n\n-  [LDS for React](https://react.lightningdesignsystem.com/)\n\n  \n\n## Elastic\n\n**Project Website:** https://elastic.github.io/eui/#/\n\n### Sketch\n\n-  [Download Link in Upper Right Corner](https://elastic.github.io/eui/#/)\n\n### HTML/CSS\n\n-  [React](https://github.com/elastic/eui/blob/master/wiki/consuming.md#using-eui-in-a-standalone-project)\n\n  \n\n## Foundation\n\n**Project Website:** https://foundation.zurb.com/\n\n### Angular\n\n-  [Angular Foundation](https://foundation.zurb.com/apps/docs/#!/angular)\n\n### React\n\n-  [React Foundation](https://react.foundation/)\n\n  \n\n## Semantic\n\n**Project Website:** https://semantic-ui.com/\n\n### React\n\n-  [semantic-ui-react](https://github.com/Semantic-Org/Semantic-UI-React)\n\n### Angular\n\n-  [semantic-ui-angular](https://github.com/Semantic-Org/Semantic-UI-Angular)\n\n### Ember\n\n-  [Semantic Install Instructions](https://semantic-ui.com/introduction/integrations.html#install-via-atmosphere)\n\n### Meteor\n\n-  [Semantic Install Instructions](https://semantic-ui.com/introduction/integrations.html#installing-via-cli)\n\n## Tailwind\n- [Tailwind CSS](https://tailwindcss.com/)\n- [Vue Tailwind](https://www.vue-tailwind.com/)\n\n## AntD\n\n### React\n-  [Ant Design](https://ant.design/)\n### Vue\n- [Ant Design Vue](https://www.antdv.com/docs/vue/introduce/)\n  \n\n## Miscellaneous\n\n### HTML/CSS\n\n-  [Atlaskit](https://atlaskit.atlassian.com/)\n\n-  [Clarity](https://clarity.design/)\n\n### CSS\n\n-  [Pure CSS](https://purecss.io/)\n\n-  [Base CSS](http://basscss.com/)\n\n### Angular\n\n-  [Clarity](https://clarity.design/)\n\n-  [Covalent](https://teradata.github.io/covalent)\n\n-  [PrimeNG](https://www.primefaces.org/primeng)\n\n### React\n\n\n-  [Office UI Fabric](https://developer.microsoft.com/en-us/fabric)\n\n-  [Atlaskit](https://atlaskit.atlassian.com/)\n\n-  [Ring](https://jetbrains.github.io/ring-ui/master/index.html)\n\n-  [Blueprint](https://blueprintjs.com/)\n\n-  [Lucid UI](http://appnexus.github.io/lucid/?selectedKind=Lucid%20UI&selectedStory=Introduction&full=0&addons=0&stories=1&panelRight=0&addonPanel=lucid-docs-panel-props)\n\n-  [Base](https://baseweb.design/)\n\n-  [Evergreen](https://github.com/segmentio/evergreen)\n\n-  [Fannypack](https://fannypack.style/)\n\n-  [Reakit](https://reakit.io/)\n\n-  [Dialog](https://dialogs.github.io/dialog-web-components/)\n\n### Vue\n\n-  [Element](https://element.eleme.io/#/en-US)\n\n-  [AT UIKIT](https://at-ui.github.io/at-ui/#/en)\n\n-  [iView](https://www.iviewui.com/)']
